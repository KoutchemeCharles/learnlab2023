,problem_id,prompts,code
0,a3_3_animals,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_animals`. Write a
program that prints out each of the items in this list (one item per line).



**EXAMPLE:  
** If, for example, the list contained the items: ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task. 





Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_animals = ['Tiger', 'Deer', 'Zebra', 'Elephant', 'Swordfish', 'Giraffe', 'Sloth']

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_animals = ['Tiger', 'Deer', 'Zebra', 'Elephant', 'Swordfish', 'Giraffe', 'Sloth']

#Your code goes here.
for animal in list_of_animals:
    print(animal)
"
1,a3_1_cargo,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_cargo_planes`. Write a
program that prints a single, specified plane from the list. Your program
shall take a number via user input used to identify which plane to print. For
example, if the user types a 3, you should print out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_cargo_planes = [""Boeing 747-8F"", ""Boeing 747-400ERF"", ""Boeing 747-400F"", ""Airbus A330-200F"", ""Boeing 767-300F"", ""Boeing 777F""]

index = int(input(""Enter the index of plane you want to print: ""))

print(list_of_cargo_planes[index-1])
"
2,a3_3_games,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_games`. Write a program
that prints out each of the items in this list (one item per line).



**EXAMPLE:  
** If, for example, the list contained the items: ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task. 





Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_games = ['Monopoly', 'Risk', 'Clue', 'Chess', 'Operation', 'Jenga', 'Jumanji']

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_games = ['Monopoly', 'Risk', 'Clue', 'Chess', 'Operation', 'Jenga', 'Jumanji']

# Your code goes here.
for game in list_of_games:
    print(game)
"
3,a3_4_heights,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_heights. Write a program
that prints out the range ( _i.e.,  _the difference between the max and min
height)



**EXAMPLE:  
** If, for example, the list contained the values: 53, 60, 65

Your program should print:

    
    
    12







Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_heights = [53, 60, 65]

height_range = max(list_of_heights) - min(list_of_heights)

print(height_range)
"
4,lsn9_practice4,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a program that asks the user for the area of three plots of land.

  * The first area will be provided to you in ACRES
  * The second area will be provided to you in SQUARE MILES (1 Acre = 0.0015625 Sq Miles)
  * The third area will be provided to you in SQUARE KILOMETERS

Your program will output ""Plot X is the biggest"", replacing X with either a 1,
2, or 3 depending on if the first, second, or third plot of land is the
biggest, respectively. For this problem, you may assume that the plots are all
different sizes (e.g., no two plots will be the same size)

**NOTES:**

  * **1 acre = 0.0015625 square miles**
  * **1 sq kilometer = 0.386102 square miles**

**EXAMPLES:**

**EXAMPLE 1** | **EXAMPLE 2**  
---|---  
**Inputs** |

35  
0.25  
1

|

150  
1  
2.2  
  
**Expected Output** | Plot 3 is the biggest | Plot 2 is the biggest



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
area1 = float(input(""Enter the area of the first plot in acres:""))
area2 = float(input(""Enter the area of the second plot in square miles:""))
area3 = float(input(""Enter the area of the third plot in square kilometers:""))

# Converts all areas to square miles
area1_sq_miles = area1 * 0.0015625
area3_sq_miles = area3 * 0.386102

# Determine the biggest plot
if area1_sq_miles > area2 and area1_sq_miles > area3_sq_miles:
    print(""Plot 1 is the biggest"")
elif area2 > area1_sq_miles and area2 > area3_sq_miles:
    print(""Plot 2 is the biggest"")
else:
    print(""Plot 3 is the biggest"")
"
5,lsn9_practice3,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a program that asks the user for the price of an item in US dollars /
cents. Then calculate and print out the equivalent price of the item in:

  *     * British Pounds (1.25 USD per Pound)
    * Korean Won (1 Won == 0.00083 USD)
    * Mexican Pesos (1 Peso == 53.81 Won)

Print each currency on a separate line.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
6,lsn9_practice2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a program that gets two (x, y) coordinates from
the user.  Write a program that calculates the distance between these two
points, and prints them out.

HINT:  You will have to use the math module.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

x1, y1 = map(float, input(""Enter the first point (x1, y1): "").split())
x2, y2 = map(float, input(""Enter the second point (x2, y2): "").split())

distance = math.sqrt((x2-x1)**2 + (y2-y1)**2)

print(""The distance between the points is: "", distance)
"
7,lsn9_practice1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a program that prints out the class year.
Write the approrpriate input statement above this line to make this program
work.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
class_year = input(""Please enter your class year: "")
print (""You entered: "", class_year)
"
8,lsn8_uod,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You've been asked to develop a tool to help identify the uniform of the day,
based on temperature and wind speed.

The command center has provided the following table for guidance:

| Temperature  
---|---  
Wind Speed |  | <40 | 40 | >40 and <60 | 60 | >60  
<15 | Parkas | A-Jackets | A-Jackets | A-Jackets | Blues  
15 | ABUs | ABUs | Parkas | Parkas | Blues  
>15 | ABUs | ABUs | Parkas | Parkas | A-Jackets  
  
Create a Python program that first gets the temperature (in degrees
Fahrenheit) and then the wind speed (in knots) from the user. You may assume
that all inputs are non-negative numbers.

It should then output the correct response, as described above.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def uniform_of_the_day(temp, wind_speed):
  if temp < 15 or wind_speed > 60:
      uniform = ""Parkas""
  elif temp < 40:
      uniform = ""A-Jackets""
  elif temp >= 40 and temp < 60:
      uniform = ""A-Jackets""
  elif temp >= 60:
      uniform = ""Blues""
  elif wind_speed < 15:
      uniform = ""A-Jackets""
  elif wind_speed >= 15 and wind_speed < 40:
      uniform = ""ABUs""
  elif wind_speed >= 40 and wind_speed < 60:
      uniform = ""Parkas""
  elif wind_speed >= 60:
      uniform = ""A-Jackets""
  else:
      uniform = ""Blues""
  return uniform

temp =           float(input(""Please input the temperature in degrees Fahrenheit.\n""))
wind_speed =     float(input(""Please input the wind speed in knots.\n""))
print(""The uniform of the day is "" + uniform_of_the_day(temp, wind_speed) + ""."")
"
9,lsn8_speeding,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a program that gets a speed (in miles per hour). You may assume that
all inputs are non-negative numbers.

It should output the kind of ticket a police officer should give the driver
(according to the table below).

Speed (mph) | <= 65 | >65 and <= 70 | >70 and <= 75 | > 75 and <= 80 | > 80  
---|---|---|---|---|---  
Ticket | No Ticket | Warning | Speeding | Reckless Driving | Reckless
Endangerment  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3 | Example 4 | Example 5  
---|---|---|---|---|---  
Input | 48 | 68 | 72 | 78 | 136  
Expected Output  | No Ticket | Warning | Speeding | Reckless Driving |
Reckless Endangerment



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def ticket(speed):
    if speed <= 65:
        return 'No Ticket'
    elif speed <= 70:
        return 'Warning'
    elif speed <= 75:
        return 'Speeding'
    elif speed <= 80:
        return 'Reckless Driving'
    else:
        return 'Reckless Endangerment'
"
10,lsn8_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a program that gets the user's body
temperature. If the body temperature is between 97-99 (inclusive), print
""Normal"". Otherwise, print ""Abnormal""



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
temperature = float(input(""Please enter your body temperature: ""))

if 97 <= temperature <= 99:
    print(""Normal"")
else:
    print(""Abnormal"")
"
11,lsn8_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a program that gets the user's body
temperature. If the body temperature is between 97-99 (inclusive), print
""Normal"". Otherwise, print ""Abnormal""



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
body_temperature = float(input(""Enter body temperature: ""))
if 97 <= body_temperature <= 99:
    print(""Normal"")
else:
    print(""Abnormal"")
"
12,lsn8_roundtrip,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write a Python program that gets three values from the user:

  * The distance to a destination (in miles)
  * The amount of fuel in the user's car (in gallons)
  * The # of miles the user's car can travel per gallon of gas (i.e., Miles Per Gallon)

You may assume that all inputs are non-negative numbers.

Calculate the amount of fuel needed to reach the destination. Then output
whether or not the user needs to refuel during a round trip, using the below
table as a guide:

Fuel Consumed (One-Way) | =< 50% | > 50% and <= 100% | > 100%  
---|---|---|---  
Output | No Refueling Needed | Refuel on Way Back | Refuel En Route  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 100  
10  
30 | 100  
5  
20 | 100  
7  
10  
Output | No Refueling Needed | Refuel on Way Back | Refuel En Route  
  
**NOTE: Your Output Must Match Exactly**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
distance = float(input())
fuel = float(input())
mpg = float(input())

fuel_needed = distance / mpg
remaining_fuel = fuel - fuel_needed

if remaining_fuel * 2 >= fuel:
    print('No Refueling Needed')
elif remaining_fuel * 2 < fuel and remaining_fuel >= 0:
    print('Refuel on Way Back')
else:
    print('Refuel En Route')
"
13,lsn8_lists,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write an algorithm that gets a decimal GPA, APA, and MPA from the user (in
that order). You may assume that all inputs are non-negative whole numbers.

It then reports which meritorious list the cadet is on. If the GPA is equal to
or above 3.0, the cadet is on the ""Dean's List"", and if the APA is equal to or
above 3.0, the cadet is on the ""Athletic Director's List"", and if the MPA is
equal to or above 3.0, the cadet is on the ""Commandant's List"". Finally, if
the cadet qualifies for all three individual lists, then the cadet is on the
""Superintendent's List"". The algorithm should report all the lists the cadet
is on (in the order defined above), unless the cadet is on the Superintendents
List, in which case, it should report only, ""Superintendent's List"".

| No List | Dean's List | Athletic Director's List | Commandant's List |
Superintendent's List  
---|---|---|---|---|---  
GPA | < 3.0 | >= 3.0 | n/a | n/a | >= 3.0  
APA | < 3.0 | n/a | >= 3.0 | n/a | >= 3.0  
MPA | < 3.0 | n/a | n/a | >= 3.0 | >= 3.0  
  
**EXAMPLES:**

Example 1 | Example 2 | Example 3 | Example 4 | Example 5  
---|---|---|---|---  
Input | 2.8  
2.6  
2.5 | 3.5  
3.2  
2.8 | 3.3  
2.8  
3.4 | 3.6  
3.8  
3.2 | 2.8  
3.5  
3.8  
Output | No List | Dean's List  
Athletic Director's List | Dean's List  
Commandant's List | Superintendent's List | Athletic Director's List  
Commandant's List



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def merit_list(GPA, APA, MPA):
    lists = []
    if GPA >= 3.0:
        lists.append(""Dean's List"")
    if APA >= 3.0:
        lists.append(""Athletic Director's List"")
    if MPA >= 3.0:
        lists.append(""Commandant's List"")

    if GPA >= 3.0 and APA >= 3.0 and MPA >= 3.0:
        return [""Superintendent's List""]
    elif len(lists) == 0:
        return [""No List""]

    return lists

# Implementation example
GPA = float(input(""Enter your GPA: ""))
APA = float(input(""Enter your APA: ""))
MPA = float(input(""Enter your MPA: ""))
print(merit_list(GPA, APA, MPA))
"
14,lsn8_fuel,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

Write an algorithm that gets a fuel load (in lbs) and then a distance to base
(in nautical miles). You may assume all inputs are non-negative numbers.

It then outputs what kind of action the pilot should take. If the fuel load is
less than 50 lbs and the distance to base is less than 70 nm, report ""Return
to base"", otherwise, report ""Resume flight"".

**EXAMPLES:**

| Example 1 | Example 2 | Example 3 | Example 4  
---|---|---|---|---  
Input | 30  
60 | 60  
60 | 40  
80 | 60  
80  
Output | Return to base | Resume flight | Resume flight | Resume flight  
  
**Note: Output must match exactly.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def flight_decision(fuel_load, distance_to_base):
    if fuel_load < 50 and distance_to_base < 70:
        return ""Return to base""
    else:
        return ""Resume flight""
"
15,lsn7_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a program that gets a course name and number
(e.g., Math 243) from the user. Modify the program to do the following:

  * If the course name is equal to ""CS110"", print ""You get to program!""
  * Otherwise, print ""Boo, no programming.""



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Here is a solution coded based on the skeleton provided:

"
16,lsn7_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a program that gets a temperature from the
user. Modify the program to do the following:

  * If the temperature is less than or equal to 32, print ""Water Has Frozen""
  * Otherwise (i.e., else), print ""Above Water's Freezing Point""



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
temperature = float(input(""Please enter the temperature: ""))

if temperature <= 32:
    print(""Water Has Frozen"")
else:
    print(""Above Water's Freezing Point"")
"
17,lsn7_positive,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write a Python  **program**  that gets a floating point number from the user:

  * If the number is positive, print the word `POSITIVE`
  * Otherwise, print the word `NOT POSITIVE`

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 10 | -5 | 0  
Output | POSITIVE | NOT POSITIVE | NOT POSITIVE



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton code

def check_number(num):
    # get the number from the user
    # check if the number is positive
    # print ""POSITIVE"" if the number is positive
    # print ""NOT POSITIVE"" if the number is not positive
    pass


def main():
    # get a floating point number from the user
    num = float(input(""Enter a number: ""))
    check_number(num)


if __name__ == ""__main__"":
    main()
```

"
18,lsn7_largest,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write a program that takes three integers as parameters, and prints the
largest (i.e., highest) number.

Ex: If the input is:

    
    
    7
    15
    3
    

Your function should return:

    
    
    15
    

  
In the event that all 3 numbers are the same, output that number.

Ex: If the input is:

    
    
    5
    5
    5
    

Your function should return:

    
    
    5



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def largest_number(num1, num2, num3):
    if (num1 >= num2) and (num1 >= num3):
        largest = num1
    elif (num2 >= num1) and (num2 >= num3):
        largest = num2
    else:
        largest = num3
    return largest
"
19,lsn7_classyear,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Using the below table as a guide, write a Python program that takes the user's
class year as input, and outputs their cadet class. If the class year is
before 2021, output ""Graduate"". Alternatively, if the class year is larger
than 2024, output ""Not a Cadet"".

You may assume that all inputs provided to your application are years
(represented as Integers)

| Example 1 | Example 2 | Example 3 | Example 4 | Example 5 | Example 6  
---|---|---|---|---|---|---  
Input | 2021 | 2022 | 2023 | 2024 | 2020 | 2025  
Output | Firstie | Two Degree | Three Degree | Four Degree | Graduate | Not a
Cadet



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def find_cadet_class(year):
    if year < 2021:
        return ""Graduate""
    elif year == 2021:
        return ""Firstie""
    elif year == 2022:
        return ""Two Degree""
    elif year == 2023:
        return ""Three Degree""
    elif year == 2024:
        return ""Four Degree""
    else:
        return ""Not a Cadet""

# Test the function
print(find_cadet_class(2021)) # Expected output ""Firstie""
print(find_cadet_class(2022)) # Expected output ""Two Degree""
print(find_cadet_class(2023)) # Expected output ""Three Degree""
print(find_cadet_class(2024)) # Expected output ""Four Degree""
print(find_cadet_class(2020)) # Expected output ""Graduate""
print(find_cadet_class(2025)) # Expected output ""Not a Cadet""
"
20,lsn7_atmosphere,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** The Earth's atmosphere is divided into a series of layers. Write an
algorithm that asks the user for the altitude in kilometers. Then output the
corresponding layer according to the following table:

Altitude | ≤10km | >10km&≤50km | >50km&≤85km | >85km&≤1000km |
>1000km&≤100,000km | >100,000km  
---|---|---|---|---|---|---  
**Layer** | Troposphere | Stratosphere | Mesosphere | Thermosphere | Exosphere
| Space



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
altitude = float(input(""Enter the altitude in kilometers: ""))

if altitude <= 10:
    layer = ""Troposphere""
elif altitude > 10 and altitude <= 50:
    layer = ""Stratosphere""
elif altitude > 50 and altitude <= 85:
    layer = ""Mesosphere""
elif altitude > 85 and altitude <= 1000:
    layer = ""Thermosphere""
elif altitude > 1000 and altitude <= 100000:
    layer = ""Exosphere""
elif altitude > 100000:
    layer = ""Space""
else:
    layer = ""Invalid altitude value"" 

print(""The corresponding layer is: "",layer)
"
21,lsn6_temperature,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

Write an algorithm that prompts the user for a temperature in °F and then
outputs K and °C in that order.

**EXAMPLE:**

| Example 1 | Example 2  
---|---|---  
Input | 32 | 0  
Output | 273.15  
0 | 255.372  
-17.778  
  
**Note: Output must match within a predefined tolerance.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Required Libraries
from sympy import *

# Variable
F = symbols('F')

# Given Temperature in Fahrenheit is converted into Celsius and Kelvin
C = (F - 32) * 5/9
K = C + 273.15

# Function to convert F to C & K
def tempConv(Fahrenheit):
    return [K.subs(F,Fahrenheit), C.subs(F,Fahrenheit)]

# Test Cases
testCases = {
    ""testCase1"": [32, [273.15, 0]],
    ""testCase2"": [0, [255.37,-17.78]],
}

for key in testCases:
    output = tempConv(testCases[key][0])
    if output[0]==testCases[key][1][0] and output[1]==testCases[key][1][1]:
        print(key + "" is Passed"")
    else:
        print(key + "" is Failed"")
"
22,lsn6_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a template that gets a distance and speed from
the user, and calculates the travel time. Unfortunately, the code does not
work. Analyze the code (and error message) and fix the problem.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","This problem statement does not include a skeleton code for implementing the solution. Therefore, I am writing a basic python script for solving the problem statement - This script asks the user for speed and distance values, then computes the travel time.

"
23,lsn6_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Prompt the user for 3 different values. Store the values in variables using
the names specified within the template. DO NOT include any prompts when
asking for a value from the user.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Here is your solution:

"
24,lsn6_projectile,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

Write a python program that can calculate the range of a projectile when fired
from an artillery on level ground. Your program will ask the user to input the
initial velocity (`v`) and angle in degrees (`theta`). Your program should
then calculate and print the range using the following formula:

`range = (v^2 * sin(2 * theta)) / 9.8`  
 **WARNING: The above formula is not valid Python.**  
  

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 800  
45 | 600  
30 | 535.2  
81.7  
Output | 65306.122 | 31813.178 | 8350.235  
  
**Hints**

  * You need to use the `math` module's trig functions to solve this problem. Type `import math` at the top of your code to add it to your program.
  * The `sin()` and `cos()` functions assume that the angle is in  **radians**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

# Collect the input from the user
v = float(input(""Enter the initial velocity (in m/s): ""))
theta = float(input(""Enter the angle of projection (in degrees): ""))

# Convert the angle to radians
theta_rad = math.radians(theta)

# Calculate the range
range = (v**2 * math.sin(2*theta_rad)) / 9.8

# Print the range
print(""The range of the projectile is:"", range)
"
25,lsn6_math,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

Given three floating-point numbers x, y, and z, output the square root of x,
the absolute value of (y minus z) , and the factorial of (the ceiling of z).
Each input should be on a new line, and rounded to a maximum of 2 decimal
places.

(Hint: use the [`round` (Links to an external
site.)](https://docs.python.org/3/library/functions.html#round) function to
round your outputs!):

`round(# to round, # of digits to round to)`

**EXAMPLE:**

    
    
    5.0
    6.5
    3.2
    

Then the output is:

    
    
    2.24
    3.30
    24.00
    

NOTE: Decimal places may be slightly off depending on the exact numbers used.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

x = float(input())
y = float(input())
z = float(input())

sqrt_x = round(math.sqrt(x), 2)
abs_y_z = round(abs(y - z), 2)
fact_z = round(math.factorial(math.ceil(z)), 2)

print(sqrt_x)
print(abs_y_z)
print(fact_z)
"
26,lsn6_calories,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

The following equations estimate the calories burned when exercising ([source
(Links to an external
site.)](https://web.archive.org/web/20121021230025/http://fitnowtraining.com/2012/01/formula-
for-calories-burned/)):

Men: Calories = ( (Age x 0.2017) + (Weight x 0.09036) + (Heart Rate x 0.6309)
-- 55.0969 ) x Time / 4.184

Women: Calories = ( (Age x 0.074) -- (Weight x 0.05741) + (Heart Rate x
0.4472) -- 20.4022 ) x Time / 4.184

Write a program using inputs age (years), weight (pounds), heart rate (beats
per minute), and time (minutes), respectively. Output calories burned for men
and women.

Output each floating-point value (your program will be marked correct so long
as it outputs a value within a predefined range)

**EXAMPLE:**

If the input is:

    
    
    49
    155
    148
    60
    

Then the output is:

    
    
    891.47
    580.94



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
age = int(input())
weight = int(input())
heart_rate = int(input())
time = int(input())

calories_men = ((age * 0.2017) + (weight * 0.09036) + (heart_rate * 0.6309) - 55.0969) * time / 4.184
calories_women = ((age * 0.074) - (weight * 0.05741) + (heart_rate * 0.4472) - 20.4022) * time / 4.184

print('%.2f' % calories_men)
print('%.2f' % calories_women)
"
27,lsn6_bits_to_kmg,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

One byte is comprised of 8 bits. A typical computer program has a requirement
for much more memory. Therefore, many bytes can be grouped together to make
larger memory amounts. Our convention is for computer memory is scaled in
logical increments of 210 = 1024.

For example:

  * 1024 bytes = 1 kilobyte (KB)
  * 1024 KB = 1 megabyte (MB)
  * 1024 MB = 1 gigabyte (GB)

Write an algorithm that prompts the user for a number of bits and then outputs
the equivalent number of kilobytes, megabytes, and gigabytes.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 1000000 | 6879000 | 92445694  
Output | 122.07  
0.12  
0.00012 | 839.72  
0.82  
.0008 | 11,284.87  
11.02  
0.01  
  
**Note: Output must match within a predefined tolerance.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def compute_memory(bits):
    # Convert bits to bytes
    bytes = bits / 8

    # Convert bytes to kilobytes
    kilobytes = bytes / 1024

    # Convert kilobytes to megabytes
    megabytes = kilobytes / 1024

    # Convert megabytes to gigabytes
    gigabytes = megabytes / 1024

    return kilobytes, megabytes, gigabytes


# Request bits from user
bits = int(input(""Enter the number of bits: ""))

# Compute memory equivalents
kb, mb, gb = compute_memory(bits)

# Output results
print(""%.2f"" % kb)
print(""%.2f"" % mb)
print(""%.2f"" % gb)
"
28,lsn6_bits_to_bytes,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

**PROBLEM STATEMENT:  
**

The basic unit of computer memory is a bit. A bit can represent two values (on
or off, 0 or 1). To represent more information, bits are grouped together in
larger quantities. Beyond a bit, the next logical grouping is a byte, where 1
byte has 8 bits. Write an algorithm that prompts the user for a number of bits
and then outputs the equivalent number of bytes.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8 | 800 | 7234  
Output | 1.0 | 100.0 | 904.25  
  
**Note: Output must match exactly.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
bits = int(input(""Enter number of bits: ""))
bytes = bits / 8.0
print(bytes)
"
29,lsn6_bit_representation,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

One way bits can hold information is computer images. Computer images are
composed of a grid of small, independent colored cells known as pixels. The
number of colors each pixel can hold is related to the number bits allocated
to each pixel. A simple black and white image, for example, would have a
single bit per pixel, where the value of the bit would represent black or
white for that pixel. Allocating 2 bits per pixel would allow each pixel to
have one of four colors.

Generally speaking, the number of color options available to a particular
pixel can be described as:

    
    
    numberofcolors = 2number of bits

In Python, write an algorithm that prompts the user for a number of bits and
then outputs the number of different colors that could be represented by a
single pixel.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 3 | 8 | 24  
Output | 8 | 256 | 16777216  
  
**Note: Output must match exactly.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
#Taking the number of bits as input from the user
num_bits = int(input(""Enter the number of bits: ""))

#Calculating the number of colors a pixel can hold
num_colors = 2**num_bits

#Printing the number of colors
print(num_colors)
"
30,lsn5_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a program that gets a cadet's age, and stores it in a variable called
**your_age.**

Print the user's age + 4.

For example, if the user types:

    
    
     18

Your program should print:

    
    
    22



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
your_age = int(input(""Enter your age: ""))
print(your_age + 4)
"
31,lsn5_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Create a variable called  **name,  **and set it equal to your name
(represented as a string--don't forget to use the quotation marks!).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
name = ""Your Name""
"
32,lsn5_scoreaverage,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write an algorithm that prompts the user for three sports game scores and
outputs the average.

  
**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15  
12 | 89  
103  
63 | 14  
42  
36  
Output | 11.666666666666666 | 85.0 | 30.666666666666668  
  
**Note: Output must match (within a predefined tolerance).**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Here is the solution code to the given problem. 

# using the `input` function to ask the user for three sports game scores
game_score_1 = int(input(""Enter the first game score: ""))
game_score_2 = int(input(""Enter the second game score: ""))
game_score_3 = int(input(""Enter the third game score: ""))

# calculating the average of the three scores
average = (game_score_1 + game_score_2 + game_score_3) / 3

# printing the average score
print(average)
"
33,lsn5_pointspread,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

A ""Point Spread"" is a term used to in sports (and gambling) to describe the
difference between two teams' scores. For example, if one team scores 20
points and another team scores 30 points, the point spread is 10. A point
spread is always a positive number.

Write an algorithm that prompts the user for two sports game scores and
outputs the point spread.  
  
**  
EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15 | 89  
103 | 42  
14  
Output | 7 | 14 | 28  
  
**Note: Output must match exactly.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# get the scores of the two teams
score1 = int(input())
score2 = int(input())

# calculate the point spread
spread = abs(score1 - score2)

# output the point spread
print(spread)
"
34,lsn5_madlib,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Mad Libs are activities that have a person provide various words, which are
then used to complete a short story in unexpected (and hopefully funny) ways.
(EDITOR'S NOTE: Do you kids even do Mad Libs anymore?)

Complete the program to read the needed values from input, that the existing
output statement(s) can use to output a short story.

**EXAMPLE:**

If the input is:

    
    
    Eric
    Chipotle
    12
    burritos
    

Then the output is:

    
    
    Eric went to Chipotle to buy 12 different types of burritos



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
name = input()
restaurant = input()
num = int(input())
food = input()

print(""{} went to {} to buy {} different types of {}"".format(name, restaurant, num, food))
"
35,lsn5_girlscouts,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a program that asks the user for the amount of money he/she has on
hand, and outputs the number of girl scout cookies that he/she can purchase.
Use the following prices:

$5 per box for the ""Super Six"" (Thin Mints, Samoas, Tagalongs, Do-Si-Dos,
Trefoils, Savannah Smiles)  
$6 per box for the Specialty Cookies (S'mores, Toffee-tastic)

**For this problem, assume that the user will buy all of one or the other. In
other words, output the number of boxes that he/she would be able to obtain if
he/she bought nothing but the Super Six, and nothing but the Specialty
Cookies.**

**HINT:**  
You can convert a number to an integer by using the int() function. For
example:  
 **int(2.51)** will convert the number to 2

EXAMPLE:  
If the input is:

    
    
    26

Then the output is:

    
    
    5 boxes of Thin Mints, Samoas, Tagalongs, Do-Si-Dos, Trefoils, or Savannah Smiles  
    4 boxes of S'mores and Toffee-tastic



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def main():
    money = int(input())
    super_six_boxes = int(money / 5)
    special_cookies_boxes = int(money / 6)
    print(str(super_six_boxes) + ' boxes of Thin Mints, Samoas, Tagalongs, Do-Si-Dos, Trefoils, or Savannah Smiles')
    print(str(special_cookies_boxes) + "" boxes of S'mores and Toffee-tastic"")

if __name__ == ""__main__"":
    main()
"
36,lsn5_arrivaltime,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write an algorithm that prompts the user for a distance to travel (in miles)
and a speed (in mph) and outputs time of arrival in hours.

  
**For Example:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 72  
60 | 1282  
85 | 120.5  
59.2  
Output | 1.2 | 15.0823 | 2.0355  
  
**Note: Output needs to match the examples.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def time_of_arrival():
    #prompt user for distance and speed
    distance = float(input())
    speed = float(input())
    #calculate time for the journey
    time = distance/speed
    #output the time
    print(round(time, 4))
    
time_of_arrival()
"
37,lsn4_printpractice,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

The template file contains various words/phrases that you need to print out
(exactly as written) using Python's `print()` function. For example:

  1. Print the phrase ""Welcome to Computer Science 110!""

  2. Print the result to the following math expression: (640 * 480 * 24) / 8

  3. etc (see the template for details)

Each print statement should be written directly below the corresponding
comment. While you can technically ""cheat"" on this problem, we encourage you
to practice all the various ways that you can use the `print` function. You
will thank us later!



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# problem_scripts.py

# 1.
#   Write a print statement that prints out the phrase ""Welcome to Computer 
#   Science 110!"" (including the exclamation point). 
#   
print(""Welcome to Computer Science 110!"")

# 2. 
#   Write a print statement that prints out the result to the following math 
#   expression: (640 * 480 * 24) / 8
#
print((640 * 480 * 24) / 8)

# 3.
#   Write a print statement that prints out the phrase ""Hello, {your name}!"",
#   but replace ""{your name}"" with your name. 
#
print(""Hello, {your name}!"")
"
38,lsn4_parking,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

Write a program that prints a formatted ""No parking"" sign as shown below. Note
the first line has two leading spaces. For ALL labs, end with newline (unless
otherwise stated).

    
    
     NO PARKING  
    1:00 - 5:00 a.m.  
      
    



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def print_no_parking():
    print(""\n  NO PARKING  \n 1:00 - 5:00 a.m.\n"")

print_no_parking()
"
39,lsn4_ascii,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a Python program that prints out a cat:

    
    
    /\ /\
     o o
     = =
     ---  
      
    

_Hint: A backslash  `\` in a string acts as an escape character, such as with
a newline_ `\n`.  _So, to print an actual backslash, escape that backslash by
prepending another backslash. Ex: The following prints a single backslash:_
`print('\\')`



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
print(""/\\ /\\"")
print("" o o"")
print("" = ="")
print("" ---"")
"
40,lsn33_practice8,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:**

You have been provided with a file called oscar_age_male.csv, which contains
information about male oscar award winners from the 1920s to 2015. Here is a
typical line from the file:

    
    
    1928,44,Emil Jannings,The Last Command

As always, each data element corresponds to a different piece of information.
Here is a table that describes how to interpret each column:

**Year** | **Actor Age** | **Name** | **Film**  
---|---|---|---  
1928 | 44 | Emil Jannings | The Last Command  
  


Write a Python program that reads this file, and gets the following inputs
from the user:

  *     * A start year
    * An end year

Your program should output the age of the youngest actor during that time span
(including the start and end years), as well as the names of all actors that
are within 5 years (inclusive) of the youngest age. For simplicity's sake,
don't try to calculate the current age of the actors; just go with what is in
the file.



For example, if the youngest actor is 25, and the names of the actors within 5
years of the youngest age are Bob and Tom, your program should output:  
  
25  
Bob  
Tom





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

# Get user input
start_year = int(input(""Enter the start year: ""))
end_year = int(input(""Enter the end year: ""))

# Initialize variables
youngest_age = None
youngest_names = []

# Open the file
with open('oscar_age_male.csv', 'r') as f:
    reader = csv.reader(f)
    for row in reader:
        year = int(row[0])
        actor_age = int(row[1])
        name = row[2]
        
        # Only consider records within the specified years
        if start_year <= year <= end_year:
            # Update youngest age and name list
            if youngest_age is None or actor_age < youngest_age:
                youngest_age = actor_age
                youngest_names = [name]
            elif actor_age <= youngest_age + 5:
                youngest_names.append(name)

# Print results
print(youngest_age)
for name in youngest_names:
    print(name)
"
41,lsn33_practice7,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**SIMPLE PIG LATIN RULES:**

  *  If the word starts with a vowel, add 'way' to the end of the word. 
  *  If the word starts with a consonant, take the first letter, put it on the end of the word and ad 'ay' to the end.

**PROBLEM STATEMENT:**

Write a function called **pig_latin  **take takes in a string of words and
returns the string converted to pig latin.

Example 1 | Example 2  
---|---  
Input | ""Lets test this out"" | ""Rick Astley is my hero""  
Expected Output | ""etsLay esttay histay outway "" | ""ickRay Astleyway isway
ymay erohay""



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def pig_latin(words):
    vowels = ['a', 'e', 'i', 'o', 'u']
    words = words.split(' ')
    new_words = []

    for word in words:
        if word[0].lower() in vowels:
            new_word = word + 'way'
            new_words.append(new_word)
        else:
            new_word = word[1:] + word[0] + 'ay'
            new_words.append(new_word)

    return ' '.join(new_words)
"
42,lsn33_practice6,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Write a python program that gets a temperature from the user, a level of
precipitation (rain, snow, none), and a humidity level (high, medium, low).
Using the following rules, print the correct output.

  * If the temperature is above 84.9 degrees, and the humidity is 'high' or 'medium', print 'Walk slowly'.
  * If the precipitation is 'snow' or 'rain', print 'Do not run!'.
  * For all other situations, print 'Move quickly'.



  | **Example 1** | **Example 1**  
---|---|---  
**Input(s)** |

85  
rain  
high

|

75  
snow  
low  
  
**Expected Output** | Walk slowly | Do not run!  
  






Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
temperature = float(input())
precipitation = input()
humidity = input()

if temperature > 84.9 and (humidity == 'high' or humidity == 'medium'):
    print('Walk slowly')
elif precipitation == 'snow' or precipitation == 'rain':
    print('Do not run!')
else:
    print('Move quickly')
"
43,lsn33_practice5,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Boyle's Law states, for an ideal gas, that the pressure (p) multiplied by #
the volume of a container (v) is always constant. So, if we have an initial
pressure and volume (p1 * v1 = k) and we decrease the volume (v2) the pressure
(v2) must increase. The formula for this is

    
    
    p1 * v1 = p2 * v2

Write a python program the gets the first pressure, first volume, and second
volume. Calculate the new pressure and print it to the console.



  | **Example 1**  
---|---  
**Input(s)** |

25  
100  
150  
  
**Expected Output** | 16.667  
  






Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
p1 = float(input())
v1 = float(input())
v2 = float(input())

p2 = p1 * v1 / v2
print(""%.3f"" % p2)
"
44,lsn33_practice4,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You are going to be given values for a dictionary. These will be an historic
landmark as the key and the location of that landmark as the value. You will
continue to receive input until the user types ""DONE"".

After the dictionary is populated, get a landmark key as an input from the
user and print the location where the landmark is. If the landmark isn't in
the dictionary, print ""Landmark not found"".



  | **Example 1**  
---|---  
**Input(s)** |

Pyramids  
Egypt  
Mt Rushmore  
South Dakota  
Empire State Building  
New York City  
DONE  
Mt Rushmore  
  
**Expected Output** | South Dakota  
  






Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
landmarks = {}

# populate the dictionary with landmarks and locations.
while True: 
    landmark = input()
    if landmark == ""DONE"": 
        break 
    location = input()
    landmarks[landmark] = location

# get a landmark from the user and print its location.
landmark_to_find = input()
if landmark_to_find in landmarks: 
    print(landmarks[landmark_to_find])
else: 
    print(""Landmark not found"")   
"
45,lsn33_practice3,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You are being provided with three sets. Each set contains the brands of cars
that a car dealer is willing to sell.

Write a Python Program that gets the name of a brand from the user. Then have
it print ""Dealer 1"", ""Dealer 2"", and/or ""Dealer 3"" (one per line) depending on
whether or not the dealer sells that type of car.

If all 3 dealers sell the car brand, output ""All Dealers""



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input(s)** | Toyota | Acura | Ford  
**Expected Output** | Dealer 2  
Dealer 3 | All Dealers | Dealer 1  
  






Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
dealer_1 = {'Ford', 'BMW', 'Audi', 'Mercedes', 'Mitsubishi', 'Volvo'} 
dealer_2 = {'Toyota', 'Honda', 'Acura', 'Nissan', 'Mazda', 'Lexus'}
dealer_3 = {'Toyota', 'Chevy', 'Buick', 'Cadillac', 'Lincoln', 'Chrysler'}

brand = input(""Enter car brand: "")

if brand in dealer_1 and brand in dealer_2 and brand in dealer_3:
    print(""All Dealers"")
else:
    if brand in dealer_1:
        print(""Dealer 1"")
    if brand in dealer_2:
        print(""Dealer 2"")
    if brand in dealer_3:
        print(""Dealer 3"")
"
46,lsn33_practice2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

In Star Trek, starships travel across interstellar space at many times the
speed of light.  Due to the immense speeds involved, velocity in Star Trek is
described using a fictitious unit of measurement known as a ""Warp Factor"".
For reference, Warp Factor 1.0 is equivalent to the speed of light, whereas
Warp Factor 9.0 is more than 700 times faster!

Write a program that asks the user for the number of starships to analyze, as
well as a target distance in light years.  Your program will then get the name
of each starship (e.g., ""USS Enterprise) as well as its maximum cruise speed
(e.g., 9.6), in that order.

Your program will then output the following:

  * The number of days it would take for the fastest starship to travel the target distance
  * The names of all ships that can travel the same distance within 7 days (inclusive) of the fastest time



**HINT:   We have provided you with a function called calculate_travel_time,
which takes a warp factor and distance as parameters, and returns the number
of days it would take to travel that distance.  Call this function to solve
the problem.**



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input(s)** | 2  
1.0  
USS Horizon  
2.0  
USS Daedalus  
2.5 | 2  
250  
USS Voyager  
9.975  
USS Enterprise-E  
9.8  
**Expected Output** | 17.2  
USS Daedalus | 42.7  
USS Voyager  
USS Enterprise-E



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from sys import stdin, stdout

def calculate_travel_time(warp_factor, distance):
    c = 2.99792458e8  # Speed of light in meters per second
    # Time = Distance / Speed, then convert to days
    return (distance * 9.461e15 / (warp_factor ** (10/3) * c)) / (60 * 60 * 24)

def main():
    num_starships = int(stdin.readline())
    target_distance = float(stdin.readline())
    fastest_time = None
    fast_ships = []
    for i in range(num_starships):
        ship = stdin.readline().strip()
        warp_factor = float(stdin.readline())
        time = calculate_travel_time(warp_factor, target_distance)
        if fastest_time is None or time < fastest_time:
            fastest_time = time
            fast_ships = [ship]
        elif time <= fastest_time + 7.0:
            fast_ships.append(ship)
    stdout.write(""{:.1f}\n"".format(fastest_time))
    for ship in fast_ships:
        stdout.write(ship + ""\n"")

main()
"
47,lsn33_practice1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Write a Python program that keeps asking the user for positive integers until
the user types -1.

Your program will then output the following:

  * # of even numbers
  * Average of all the even numbers (if no even numbers were input, print 0)
  * # of odd numbers
  * Average of all the odd numbers (if no odd numbers were input, print 0)

You may assume that the user will type AT LEAST one number. You cannot assume,
however, that the user will enter both an odd and even number.



HINT:  
Use the mod function to determine if a number is even or odd  
  
print(5 % 2) will print ""1"" because there is a remainder of 1 when you divide
5 by 2

print(4 % 2) will print ""0"" because there is no remainder when you divide 4 by
2



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input(s)** | 2  
3  
4  
5 | 3  
5  
7  
**Expected Output** | 2  
3  
2  
4 | 0  
0  
3  
5



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Here is a Python program based on the given problem:

```Python
even_count = 0
odd_count = 0
even_sum = 0
odd_sum = 0
while True:
    n = int(input())
    if n == -1:
        break
    elif n % 2 == 0:
        even_count += 1
        even_sum += n
    else:
        odd_count += 1
        odd_sum += n

even_average = even_sum / even_count if even_count != 0 else 0
odd_average = odd_sum / odd_count if odd_count != 0 else 0

print(even_count)
print(even_average)
print(odd_count)
print(odd_average)
```
This program works by repeatedly asking for user input until it encounters -1. It checks for each number whether it's odd or even using the modulus operator. If it's even, it increments the even count and adds the value to the sum of even numbers. If it's odd, it increments the odd count and adds the value to the sum of odd numbers. After the loop ends, it calculates the average of even and odd numbers by dividing the sum by the respective count. If no numbers of that type were input, the average is 0. Lastly, it prints out the required data."
48,lsn26_plots,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.




**PROBLEM STATEMENT:  
** In this lab, you are being given the freedom to explore `matplotlib`'s
plotting capabilities.

The template ZIP file contains several interesting datasets that we have
collected from the internet (although you are free to include any other
dataset if you wish). Examine these datasets, and generate at least 2
""interesting"" graphs. Each plot should use a different dataset. Additionally,
each plot must be a different type (line and pie graph, etc)

Use the `subplot` feature to make sure all of the graphs fit on one screen.
Most importantly, make sure you label your axes, give your charts a title, use
color, etc.

  
**HINT**

  * Use numpy's `genfromtxt` function to read the values in the file. If you forget how to use this function, refer to the lecture video.





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import matplotlib.pyplot as plt
import numpy as np

# Load Datasets
data1 = np.genfromtxt('dataset1.csv', delimiter=',')
data2 = np.genfromtxt('dataset2.csv', delimiter=',')

# Figure initialization
fig, axs = plt.subplots(2)

# First plot (Line plot)
axs[0].plot(data1, color='purple')
axs[0].set_title('Line Plot - Dataset 1')
axs[0].set_xlabel('X-axis')
axs[0].set_ylabel('Y-axis')


# Second plot (Pie Chart)
labels = ['A', 'B', 'C', 'D', 'E']
axs[1].pie(data2, labels=labels, colors=['green', 'purple', 'blue', 'red', 'orange'],
           autopct='%1.1f%%', startangle=140)
axs[1].set_title('Pie Chart - Dataset 2')
axs[1].axis('equal')

# Display plots
plt.tight_layout()
plt.show()
```
This is an example solution, the actual paths to the datasets and the data inside will likely vary. This solution assumes that dataset1.csv consists of a line of numbers which can be plotted as a line graph, and that dataset2.csv consists of 5 numbers, which can be plotted as a pie chart. Adjust as needed to match your actual datasets."
49,lsn26_percentile,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** Write a Python program that asks the user for the number of assessment
scores to input, and then gets that many values. Analyze the data using
numpy's statistics functions, and print out the following information (one per
line):

  * the average (i.e., mean)
  * the number of scores in the 90th percentile (i.e., the number of scores that are at least as high as the 90th percentile score)
  * the number of scores no more than one standard deviation from the mean



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import numpy as np

# Skeleton Code
def main():
    num_scores = int(input(""Enter the number of scores: ""))

    scores = []
    for _ in range(num_scores):
        score = float(input(""Enter a score: ""))
        scores.append(score)

    scores = np.array(scores)
    mean = np.mean(scores)
    std_dev = np.std(scores)
    ninetieth_percentile = np.percentile(scores, 90)

    num_in_ninetieth_percentile = np.sum(scores >= ninetieth_percentile)
    num_within_one_std_dev = np.sum(abs(scores - mean) <= std_dev)

    print(mean)
    print(num_in_ninetieth_percentile)
    print(num_within_one_std_dev)


if __name__ == ""__main__"":
    main()
"
50,lsn26_calculus,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Using the numpy module, write a Python program that does the following and
prints (one answer per line):

  1. Create (and print) the following polynomial as a poly1d: `18x^4 + 12x^2 + 3x + 1`

  2. Print the value of the polynomial when `x = 2`

  3. Print the roots of the polynomial

  4. Print the derivative of the polynomial

  5. Print the instantaneous slope of the polynomial at `x = -1` (HINT: Evaluate the derivative at x = -1)

  6. Print the integral of the polynomial

  7. Calculate area under the curve between `x = 5` and `x = 10` (HINT: Evaluate the integral at x=10, and subtract the integral at x=5)





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import numpy as np

# Define the polynomial
poly = np.poly1d([18, 0, 12, 3, 1])
print(poly)

# Evaluate polynomial for x=2
poly_at_2 = poly(2)
print(poly_at_2)

# Find the roots of the polynomial
roots = poly.roots
print(roots)

# Find the derivative of the polynomial
derivative = poly.deriv()
print(derivative)

# Find the slope at x=-1
slope_at_minus_1 = derivative(-1)
print(slope_at_minus_1)

# Find the integral of the polynomial
integral = poly.integ()
print(integral)

# Calculate area under the curve between x=5 and x=10
area_under_curve = integral(10) - integral(5)
print(area_under_curve)
"
51,lsn25_tokens,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Write a Python program that asks the user for the name of a file. Your program
should then read this file and counts how many times each token (i.e., word)
appears (NOTE: keep it simple, and split on the "" ""). Finally, let the user
type a token, and print how many times that token appears (if a word is not in
your dictionary, print 0).



**HINTS:**

  * You have been provided with the file review.txt to test your code.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# dict to store word frequencies
word_freq = {}

# ask user for the name of a file
file_name = input(""Please enter the filename: "")

# open the file
with open(file_name, 'r') as f:
    # read the file
    for line in f:
        # split each line into words
        words = line.split("" "")
        # iterate over each word
        for word in words:
            # if word is already in dictionary, increase its count
            if word in word_freq:
                word_freq[word] += 1
            # if word is not in dictionary, add it with count 1
            else:
                word_freq[word] = 1

# ask user for a token
token = input(""Please enter a token: "")

# print the count of the token (default to 0 if not present)
print(word_freq.get(token, 0))
"
52,lsn25_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You are being provided with a function called mini_sort that takes two
numbers as parameters. Modify this function so that it returns a tuple
containing the numbers in ascending order.



**EXAMPLES:**

mini_sort(1, 2) should return the tuple:  (1, 2)

mini_sort(50, 40) should return the tuple:  (40, 50)





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def mini_sort(num1, num2):
    if num1 > num2:
        return (num2, num1)
    else:
        return (num1, num2)
"
53,lsn25_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a dictionary that contains the designator for
an aircraft (e.g., F-16) and its nickname (e.g., Fighting Falcon). Write a
program that gets a new aircraft designator and nickname from the user, and
adds it to the dictionary



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
aircrafts = {'F-16': 'Fighting Falcon', 'F-22': 'Raptor', 'A-10': 'Warthog'}

designator = input(""Enter the designator for the new aircraft: "")
nickname = input(""Enter the nickname of the new aircraft: "")

aircrafts[designator] = nickname

print(aircrafts)
"
54,lsn25_rectangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.




**PROBLEM STATEMENT:  
**

Write a function called `get_rectangle_info` that takes 2 values as
parameters:

  * A tuple containing the (x, y) coordinate of one corner of a box
  * A tuple containing the (x, y) coordinate of the opposite corner of a box



Your function should return a  **tuple**  containing the following information
(in order):

  * the area of the box
  * the perimeter of the box
  * the length of the largest side
  * the length of the shortest side



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def get_rectangle_info(corner1, corner2):
    width = abs(corner1[0] - corner2[0])
    height = abs(corner1[1] - corner2[1])
    area = width * height
    perimeter = 2 * (width + height)
    max_side, min_side = (width, height) if width > height else (height, width)
    return (area, perimeter, max_side, min_side)
"
55,lsn25_midpoint,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** Write a function called get_midpoint that takes four values as parameters:

  * X coordinate of the first point
  * Y coordinate of the first point
  * X coordinate of the second point
  * Y coordinate of the second point

Your function should return a tuple containing the midpoint.





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Here is the solution:

```python
def get_midpoint(x1, y1, x2, y2):
    midpoint_x = (x1 + x2) / 2
    midpoint_y = (y1 + y2) / 2
    return (midpoint_x, midpoint_y)
```

This function calculates the X and Y coordinates of the midpoint between two points in a 2D space. The midpoint is calculated by adding the coordinates of the two points and dividing by 2. Thus, the midpoint is the average of the coordinates of the points. The function returns a tuple containing the X and Y coordinates of the midpoint."
56,lsn25_contactlist,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.




**PROBLEM STATEMENT:  
**

Write a Python program that stores names and phone numbers for your
classmates. Your program will keep asking the user to input names and phone
numbers until he/she types ""DONE"". Your program will then store the
names/numbers in a dictionary, and allow the user to repeatedly type in names
until he/she types ""DONE"".

  * If name is in the contact list, your program will output the corresponding phone number.
  * If the name is  **not**  in the contact list, your program will output ""NOT FOUND""



**EXAMPLES:**

  | Example  
---|---  
Inputs | Adrian  
555-5555  
Liam  
666-6666  
Michelle  
777-7777  
DONE  
Adrian  
Jim  
DONE  
Outputs | 555-5555  
NOT FOUND



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
contact_list = {}

while True:
  name = input().strip()
  if name == ""DONE"": 
    break
  phone_num = input().strip()
  contact_list[name] = phone_num

while True:
  name = input().strip()
  if name == ""DONE"": 
    break
  if name in contact_list:
    print(contact_list[name])
  else:
    print(""NOT FOUND"")
"
57,lsn24_nasa,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write a Python program that repeatedly asks the user for names of famous NASA
space missions (e.g., Apollo 11) as well as the year in which the mission took
place, until the user types the word ""DONE"" for the mission.

Your program should output:

  1. Year of the **latest mission** (most recent) 
  2. Names of all missions that occurred within 3 years prior to the most recent mission (inclusive)

**EXAMPLES:**



| Example 1 | Example 2  
---|---|---  
Input | Gemini 3  
1965  
Gemini 4  
1965  
Gemini 12  
1966  
DONE |

Mercury 5  
1961  
Apollo 11  
1969  
DONE  
  
Output | 1966  
Gemini 3  
Gemini 4  
Gemini 12 | 1969  
Apollo 11



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code
def nasa_missions():
    missions_dict = {}
    
    while True:
        mission_name = input(""Enter the mission name: "")
        if mission_name == ""DONE"":
            break

        mission_year = int(input(""Enter the mission year: ""))
 
        if mission_year not in missions_dict:
            missions_dict[mission_year] = []
        
        missions_dict[mission_year].append(mission_name)

    latest_year = max(missions_dict.keys())
    print(latest_year)
    
    for year in range(latest_year - 2, latest_year + 1):
        if year in missions_dict:
            for mission in missions_dict[year]:
                print(mission)
"
58,lsn24_mitches,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write a Python Program that analyzes the food at Mitchell Hall. Your program
will ask for the number of meals to analyze and then get both:

  1. The name of the meal
  2. The number of calories per serving

Your program should output the average calorie count of all meals, as well as
the names of meals that are with 200 calories of the average (inclusive).



| **Example 1** | **Example 2**  
---|---|---  
Input |

3  
Shepherd's Pie  
300  
Foot Long Hot Dog  
350  
Hamburger  
960  
  

| 4  
Pizza  
600  
Cheeseburger  
450  
Pancakes  
1100  
Burrito  
900  
Expected Output | 536.6666666666666  
Foot Long Hot Dog | 762.5  
Pizza  
Burrito  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
numOfMeals = int(input())

mealNames = []
calories = []

for i in range(numOfMeals):
    mealNames.append(input())
    calories.append(int(input()))

avgCalories = sum(calories) / numOfMeals
print(avgCalories)

for i in range(numOfMeals):
    if abs(calories[i] - avgCalories) <= 200:
        print(mealNames[i]) 
"
59,lsn24_education,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Now that you are a Freshman at USAFA, it might be interesting to learn about
how many years men and women spend in school in different countries. In the
problem, we have provided you with a dataset called `education.csv` that
contains information from various countries about years spent in education.
Here is a typical line from the file:



`Zimbabwe,2010,M,15,64,8.04,5.92,2.09,0.03,3926`



Each position in the line represents a different ""data element"". Here is a key
for your reference:

Country | Year | Gender | Start Age | End Age | Total Years in School |
Primary School | Secondary School | Tertiary School | Population (thousands)  
---|---|---|---|---|---|---|---|---|---  
Zimbabwe | 2010 | M | 15 | 64 | 8.04 | 5.92 | 2.09 | 0.03 | 3926  
  


  
Write a Python program that asks the user for the name of country (e.g.,
""Zimbabwe""), followed by a Gender (""M"" or ""F""). Your program should print the
average number of years that gender spends in school followed by the years
that are greater than or equal to the average.

  
For example, if ""Zimbabwe"" and ""M"" were entered as the country and gender of
interest, respectively, then your program should print out:

**`2.5117241379310347`  
`1960`  
`1965`  
`1970`  
`1975`  
`1980`  
`1985`  
`1990`  
`1995`  
`2000`  
`2005`  
`2010`**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def main():
    country = input(""Enter country name: "")
    gender = input(""Enter gender (M or F): "")
    data = []
    with open('education.csv', 'r') as file:
        for line in file:
            splitted = line.split(',')
            if splitted[0] == country and splitted[2] == gender:
                data.append((int(splitted[1]), float(splitted[5])))
    if len(data):
        average = sum([x[1] for x in data]) / len(data)
        print(average)
        for year, education in data:
            if education >= average:
                print(year)
    else:
        print(f""No data found for {country} and {gender}"")
main()
```
This code reads the input, scans the file for all data matching the input, calculates the average years of education, and prints both the average and the years where the years of education meet or exceed the average."
60,lsn24_airspeed,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You are writing a program to determine which aircraft  can fly in formation
based on their (min) safe cruise speed. Write a python program  
that asks the user for:

  1. The number of aircraft to analyze
  2. The target cruise velocity, in mph



Your program will then repeatedly ask the user for the designator for each
aircraft and its cruise velocity. Once all of the values have been input, your
program will output:

  1. The NUMBER of aircraft whose cruise velocity is within 50mph of the target (above or below, inclusive)
  2. The designator of each aircraft that meets the above criteria



| **Example 1** | **Example 2**  
---|---|---  
Input |

3  
400  
F-15  
450  
F-16  
425  
F-22  
500

| 4  
230  
C-130  
250  
F-35  
450  
B-52  
390  
C-141  
375  
Expected Output | 2  
F-15  
F-16 | 1  
C-130  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_aircraft = int(input())
target_velocity = int(input())
suitable_aircraft = []

for _ in range(num_aircraft):
    designator = input()
    cruise_velocity = int(input())
    if abs(cruise_velocity-target_velocity) <= 50:
        suitable_aircraft.append(designator)
        
print(len(suitable_aircraft))
for aircraft in suitable_aircraft:
    print(aircraft)
"
61,lsn23_soundboard,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Using PythonGraph, create a ""soundboard"" application. Your program should
display a list of colored buttons (i.e., rectangles). When the user clicks
inside of a rectangle, the program plays a different sound.

The provided template file comes with a single button implemented. Your job is
to study this code and create at least 5 other buttons. Note: The buttons do
not have to be laid out in the same arrangement, but they should look
organized.

When you are finished, upload your python code. Do NOT upload any of the sound
files.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from PythonGraph import *

class Button:
    def __init__(self, x, y, width, height, color, sound):
        self.x = x
        self.y = y
        self.width = width
        self.height = height
        self.color = color
        self.sound = sound

    def draw(self):
        colorectangle(self.x, self.y, self.x + self.width, self.y + self.height, self.color) 

    def is_inside(self, x, y):
        return (self.x <= x <= self.x + self.width) and (self.y <= y <= self.y + self.height)

def mouseclick(x, y):
    for btn in buttons:
        if btn.is_inside(x, y):
            playsound(btn.sound)

buttons = [
    Button(50, 50, 100, 50, RED, ""sound1.wav""),
    Button(200, 50, 100, 50, GREEN, ""sound2.wav""),
    Button(350, 50, 100, 50, BLUE, ""sound3.wav""),
    Button(50, 150, 100, 50, YELLOW, ""sound4.wav""),
    Button(200, 150, 100, 50, MAGENTA, ""sound5.wav""),
    Button(350, 150, 100, 50, CYAN, ""sound6.wav"")
]

setmouselistener(mouseclick)

while not _hasquit:
    clear()
    for btn in buttons:
        btn.draw()
    update()
"
62,lsn23_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM NAME:  
** lsn23_skill1



**PROBLEM STATEMENT:  
** You have been provided with the template code for an animation.  Study the
code for a minute, then modify the code to do the following WHEN THE LEFT
MOUSE BUTTON IS HELD DOWN:

  1. Write the code needed to get the mouse's x and y coordinates
  2. Draw a circle centered at the mouse's x and y coordinates



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pygame
import sys

pygame.init()
screen = pygame.display.set_mode((400, 300))
clock = pygame.time.Clock()

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
        elif event.type == pygame.MOUSEBUTTONDOWN:
            if event.button == 1: # 1 is the left mouse button
                (x, y) = pygame.mouse.get_pos()
                pygame.draw.circle(screen, (255,255,255), (x,y), 10)

    pygame.display.flip()
    clock.tick(60)
"
63,lsn23_paint,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Using PythonGraph, create a simple paint application. Your program should draw
circles on the window whenever the user presses the left mouse button. Your
program should also listen for keyboard inputs, and allow the user to change
colors and the size of the circle by pressing on different keys.

A simple paint program has been provided to you as a starting point. Study the
code and make the necessary modifications.

When you are finished, upload your python code.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Here is the Python code for a simple paint application. The application will create circles where the user clicks. The color of the circles can be switched between red, green and blue using the 'r', 'g' and 'b' keys respectively. The size of the circles can also be changed by pressing the '1', '2' or '3' keys.

```python
from graphics import *

def main():
    win = GraphWin(""Simple Paint"", 800, 800)

    current_color = 'black'
    current_size = 10

    while True:
        mouse_click = win.getMouse()
        key_press = win.checkKey()

        if key_press == 'q':  # Quit program if 'q' is pressed
            break

        if key_press == 'r':
            current_color = 'red'
        elif key_press == 'g':
            current_color = 'green'
        elif key_press == 'b':
            current_color = 'blue'

        if key_press == '1':
            current_size = 10
        elif key_press == '2':
            current_size = 20
        elif key_press == '3':
            current_size = 30

        if mouse_click:
            circle = Circle(Point(mouse_click.getX(), mouse_click.getY()), current_size)
            circle.setFill(current_color)
            circle.draw(win)

    win.close()

if __name__ == ""__main__"":
    main()
```

Remember, this code relies on the `graphics.py` library, so make sure you have successfully imported it in the environment where you are running this code. 

The code will create a new window where you can draw your circles. You can change the size of the circles and their color by pressing the keys as explained above. The program waits for you to click in order to draw a circle. 

The color and size will remain the same until you change them, or until you quit the program with the 'q' key."
64,lsn22_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM NAME:  
** lsn22_skill1



**PROBLEM STATEMENT:  
** You have been provided with the template code for an animation.  Study the
code for a minute, then perform the following tasks:

  * In the draw() function, add one line of code that draws a circle.  
For the center, use the ball_x and ball_y variables defined on lines 21 and 22  
  

  * In the update() function, add code that modifies the value of ball_x and ball_y.  
For example, add 1 to ball_x every time update() is called, and see what
happens.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from cs1lib import *

WINDOW_WIDTH = 10
WINDOW_HEIGHT = 10

BALL_RADIUS = 1

ball_x = random() * WINDOW_WIDTH   # random x location
ball_y = random() * WINDOW_HEIGHT  # random y location

def draw():
    clear()
    set_fill_color(1, 0, 0)  # red
    draw_circle(ball_x, ball_y, BALL_RADIUS)

def update():
    global ball_x
    
    ball_x += 1  # move the ball right
    

start_graphics(draw, width = WINDOW_WIDTH, height = WINDOW_HEIGHT, 
               update = update, framerate = 30)
"
65,lsn22_bouncingtriangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Using the Bouncing Ball from the previous lab as a starting point, generate
an animation of a bouncing triangle. The triangle's vertices should start at
random locations, and bounce whenever the triangle hits a wall.





**HINTS** :

  * Try drawing 3 bouncing balls on the screen.
  * Once the balls are moving correctly, draw 3 lines to connect them!



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Here's a solution using the turtle module:

```python
import turtle
import random

# Screen setup
win = turtle.Screen()
win.bgcolor('black')

# Triangle vertices
v1 = turtle.Turtle()
v2 = turtle.Turtle()
v3 = turtle.Turtle()
vertices = [v1, v2, v3]

# Setting up triangle vertices
for vertex in vertices:
    vertex.shape('circle')
    vertex.color('white')
    vertex.penup()
    vertex.speed(0)
    vertex.goto(random.randint(-300, 300), random.randint(-300, 300))
    vertex.dx = random.randint(2, 5)
    vertex.dy = random.randint(2, 5)

while True:
    for vertex in vertices:
        # Move the vertex
        vertex.setx(vertex.xcor() + vertex.dx)
        vertex.sety(vertex.ycor() + vertex.dy)

        # Border collision
        if vertex.xcor() > 300 or vertex.xcor() < -300:
            vertex.dx *= -1
        if vertex.ycor() > 300 or vertex.ycor() < -300:
            vertex.dy *= -1

    # Drawing the lines
    v1.clear()
    v1.goto(v2.pos())
    v1.goto(v3.pos())
    v1.goto(v1.pos())
```

This code creates a window and adds three vertices (turtle objects) that move in random directions. If a vertex hits a border, it changes direction. The lines connecting the vertices are drawn after each movement. Note that we clear the previous drawing of the lines each time to avoid leaving trails.  As it is, this script will continue running indefinitely until you stop it."
66,lsn22_bouncingballs,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.




**PROBLEM STATEMENT:  
** Write a python algorithm that asks the user for the number of balls to
draw. Then, open a pythonGraph window and draw that many bouncing balls on the
screen.



**Challenge** :

  * Try to randomize every aspect of the bouncing balls (e.g., their radius, color, speed)





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pythonGraph
import random

# Ask the user for number of balls to draw
num_balls = int(input(""Enter the number of balls to draw: ""))

# Define ball class with random attributes
class Ball:
    def __init__(self):
        self.x = random.randint(10, pythonGraph.get_width() - 10)
        self.y = random.randint(10, pythonGraph.get_height() - 10)
        self.dx = random.choice([-1, 1]) * random.randint(1, 10)
        self.dy = random.choice([-1, 1]) * random.randint(1, 10)
        self.radius = random.randint(5, 20)
        self.color = (random.randint(0, 255), random.randint(0, 255), random.randint(0,255))

    # Function to move the balls
    def move(self):
        if self.x + self.dx > pythonGraph.get_width() - self.radius or self.x + self.dx < self.radius:
            self.dx *= -1
        if self.y + self.dy > pythonGraph.get_height() - self.radius or self.y + self.dy < self.radius:
            self.dy *= -1
        self.x += self.dx
        self.y += self.dy

    # Function to draw the balls
    def draw(self):
        pythonGraph.draw_circle(self.x, self.y, self.radius, self.color, True)

# Create balls
balls = [Ball() for _ in range(num_balls)]

# Loop to keep the window open
while not pythonGraph.window_closed():
    # Clear the screen
    pythonGraph.clear_window()
    
    # Move and draw each ball
    for ball in balls:
        ball.move()
        ball.draw()
    
    # Update the window
    pythonGraph.update_window()
"
67,lsn22_bouncingball,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** Using the pythonGraph animation template, create an animation of a bouncing
ball. Your ball should start at a random location, and change direction each
time it hits a side, top, or bottom of the window.  
  



**CHALLENGE:**

  1. Try to make the ball change color every time it hits a wall.





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Based on the problem statement, here is the Python solution:

```python
import tkinter as tk
import random

class Ball:
    def __init__(self, canvas, color):
        self.canvas = canvas
        self.id = canvas.create_oval(10, 10, 50, 50, fill=color)
        self.canvas.move(self.id, 245, 100)
        starts = [-3, -2, -1, 1, 2, 3]
        random.shuffle(starts)
        self.x = starts[0]
        self.y = -3
        self.canvas_height = self.canvas.winfo_height()
        self.canvas_width = self.canvas.winfo_width()

    def draw(self):
        self.canvas.move(self.id, self.x, self.y)
        pos = self.canvas.coords(self.id)
        if pos[1] <= 0:
            self.y = 3
        if pos[3] >= self.canvas_height:
            self.y = -3
        if pos[0] <= 0:
            self.x = 3
        if pos[2] >= self.canvas_width:
            self.x = -3

    def changeColor(self):
        R = lambda: random.randint(0,255)
        self.color = '#%02X%02X%02X' % (R(),R(),R())
        self.canvas.itemconfig(self.id,fill=self.color)

def create_ball(color):
    ball = Ball(canvas, color)
    while 1:
        ball.draw()
        if (ball.y == 3 and ball.x ==3) or (ball.y ==-3 and ball.x ==-3):
            ball.changeColor()
        tk.update_idletasks()
        tk.update()
        tk.after(1000/60)

root = tk.Tk()
root.geometry(""500x500"")
canvas = tk.Canvas(root, width=500, height=400)
canvas.pack()
create_ball('blue')
root.mainloop()
```
This script creates a ball object which bounces off the edges of the canvas and changes colour every time it hits an edge. It uses the tkinter python package for the canvas and animation. The ball's speed and direction are randomized in the constructor, and the draw method moves the ball and checks for collisions with the edges, changing the direction appropriately. The changeColor method changes the ball's color to a random hex color. The create_ball function creates the ball object and enters a game loop which calls the ball's draw method and updates the canvas at a rate of 60 frames per second."
68,lsn21_triangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.




**PROBLEM STATEMENT:  
**

Write an algorithm that asks the user for X and Y coordinates of a single
point (the coordinates of the top left point on the triangle), the length of
the base, and the height of a right triangle. Then, open a graphics window and
draw the triangle. The area of the triangle is should be displayed at the
bottom center of the window in black.



**HINTS:**

  * Make sure you get the user input BEFORE you open the window. Otherwise, the program will freeze.
  * The `draw_text` function will draw text on a screen. Don't worry about getting the text EXACTLY in the center (it's hard!).





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from graphics import *
import math

def draw_triangle():
    # Get user input for coordinates, base and height
    X = int(input(""Enter X coordinate: ""))
    Y = int(input(""Enter Y coordinate: ""))
    base = int(input(""Enter length of the base: ""))
    height = int(input(""Enter height: ""))
    
    # Calculate the area  
    area = (height * base) / 2
    
    # Create a window
    win = GraphWin('Triangle', 500, 500)
    
    # Draw the triangle
    triangle = Polygon(Point(X, Y), Point(X+base, Y), Point(X, Y-height))
    triangle.draw(win)
    
    # Display area of triangle at the bottom of the window
    AreaMessage = Text(Point(250, 480), 'Area = ' + str(area))
    AreaMessage.setSize(20)
    AreaMessage.setFill('black')
    AreaMessage.draw(win)
    
    # let the window stay open until it is clicked
    win.getMouse()
    win.close()

draw_triangle()
```
In the above python code using the `graphics.py` library, we first take the inputs (coordinates, base and height of the triangle) from the user. Then the area of the triangle is calculated using the formula `(height * base) / 2`.

A window of size 500x500 is then opened and the triangle is drawn using the coordinates input by the user. We use the `Polygon` function from `graphics.py` to draw the triangle using the three vertices calculated from the inputs.

The area of the triangle is then displayed at the bottom of the window using the `Text` function from `graphics.py`. The text is placed approximately at the center (at coordinates (250, 480)) of the bottom of the window, made size 20, filled with black color and then drawn to the window.

The window then stays open until a mouse click is detected, after which it is closed. The execution of this program requires the 'graphics.py' library which can be installed using pip."
69,lsn21_stamp,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** Create a pythonGraph function called `draw_stamp` that accepts an x and y
coordinate as parameters. Add code so that this function will then draw a
picture (of your choosing) centered on that coordinate.



To test your function, create a pythonGraph window, and call your function
several times (each time, passing it a different set of x and y coordinates).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import turtle

# Creating a function to draw a star which can serve as our stamp
def draw_star(turtle):

    for _ in range(5):
        turtle.forward(50)
        turtle.right(144)
        
# Creating a function to draw a stamp given x, y coordinates
def draw_stamp(x, y):
    stamp_turtle = turtle.Turtle()
    stamp_turtle.hideturtle()
    stamp_turtle.penup()
    stamp_turtle.goto(x, y)
    stamp_turtle.pendown()
    draw_star(stamp_turtle)

window = turtle.Screen()

# Calling draw_stamp function
draw_stamp(0, 0)
draw_stamp(100, 100)
draw_stamp(-100, -100)
draw_stamp(-100, 100)
draw_stamp(100, -100)

window.mainloop()
"
70,lsn21_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM NAME:  
** lsn21_skill1



**PROBLEM STATEMENT:  
** Read the pythonGraph documentation, and write the following 3 lines of
code:

  1. Use the open_window function to create a graphics window
  2. Use the draw_circle function to draw a circle (any size and/or color).
  3. Call the wait_for_close function to keep the graphics window open until you click the X in the top right corner.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pythonGraph

pythonGraph.open_window()

pythonGraph.draw_circle(50, 50, 10, pythonGraph.create_random_color())

pythonGraph.wait_for_close()
"
71,lsn21_simpledrawing,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Using pythonGraph (and the documentation for pythonGraph), experiment with
each of the drawing commands listed (drawing commands begin with the keyword
""draw""). Draw something interesting using at least 4 different drawing
commands. One of those drawing commands must be `draw_image`

**NOTE:  
** The best files will be added to our Python ""Hall of Fame"".



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Required Libraries for pythonGraph
from pythonGraph import *

# Set up the window size
create_canvas(800,800) 

# Drawing an Image
draw_image(""file_path.extension"", 10, 10)    # Insert the path of the Image and its position

# Drawing a Circle
draw_circle(60, 60, 50)                     # Parameters are (X position, Y position, radius)

# Drawing a rectangle
draw_rectangle(200, 200, 400, 400)           # Parameters are (X position, Y position, width, height)

# Drawing a Line
draw_line(300, 300, 700, 700)

# Displaying the Canvas
show_canvas()
```
Please make sure you provide a valid image filepath for `draw_image()` function."
72,lsn21_randomcircles,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** Create a pythonGraph that asks the user for the number of circles to draw.
Your program should then open a pythonGraph window and then draw that many
circles somewhere within view.

**Hints**

  * Import the `random` module in order to generate random numbers. There are specifically two functions that are useful:
  * `random.random()` returns a random number between 0.0 and 1.0
  * `random.randint(start, end)` returns a random integer between `start` and `end`





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pythonGraph
import random

num_circles = int(input(""Enter the number of circles to draw: ""))

pythonGraph.open_window(800, 800)

for _ in range(num_circles):
    x = random.random()*800
    y = random.random()*800
    pythonGraph.draw_circle(x, y, 50, pythonGraph.create_random_color(), True)

pythonGraph.wait_for_close()
"
73,lsn20_unpopularnames,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.




**PROBLEM STATEMENT:  
**

This lab makes use of the names.csv dataset, which provides a list of over
1200+ names that were given to children in 2011. Here is a typical line from
the file:



`FEMALE, HISPANIC, GIA, 21`



  
Each position in the line (separated by a comma) represents a different ""data
element"". Here is a key for your reference:

Gender | Ethnicity | Name | Count  
(i.e., Number of Children Assigned this Name)  
---|---|---|---  
FEMALE | HISPANIC | GIA | 21  
  
  
  
Write a Python algorithm that gets a gender (all CAPs, ""MALE"" or ""FEMALE"") and
a number, `X`, from the user, and prints out the X least popular names for
that gender, starting with the most popular and working down.

For example, if the user types `MALE` and `2`, and you determine that the two
least popular names are Bill and Ted, your program should output:

    
    
    Bill  
    Ted  
      
    



**HINTS (really really important):**

  * Remember that you can use the `sort()` function to sort a list in ascending order. For example, if your list is named `my_list`, you can sort it by typing:  
`my_list.sort()`

  * `sort()` will work on 2D lists. It will sort by the first column, and then look at the 2nd column in the event of a tie. Think about this when you are building your 2D list.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Open the file
with open('names.csv', 'r') as f:
  
    # Skipping the first line (header)
    f.readline()
    
    # Collect data
    data = []
    
    # Parsing line by line
    for line in f:
        # Removing \n at the end and splitting by comma
        row = line.strip().split(',')
        
        # Extracting values
        gender = row[0].strip()
        name = row[2].strip()
        count = int(row[3].strip())
        
        # Append extracted values to data
        data.append([gender, name, count])
    
    # Getting gender and X from user    
    gender = input(""Please enter gender (MALE or FEMALE): "")
    X = int(input(""Please enter a number: ""))
    
    # Filtering data on gender
    gender_data = [row for row in data if row[0] == gender]
    
    # Sorting list by count in ascending order
    gender_data.sort(key = lambda x: x[2])
    
    # Fetching X least popular names
    least_popular_names = [row[1] for row in gender_data[:X]]

    # Print the names
    for name in least_popular_names:
        print(name)
"
74,lsn20_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a CSV file that contains the amount of medals
won by countries at the most recent Olympic games.   Here is a snippet of the
file:

    
    
    USA,46,37,38  
    Britain,27,23,17



Here is how you can interpret each ""column"" in the file:

**Country** | **# Gold Medals** | **# Silver Medals** | **# Bronze Medals**  
---|---|---|---  
USA | 46 | 37 | 38  
Britain | 27 | 23 | 17  
  


You have also been provided with a code template that automatically reads this
file and extracts each line from it.

  * In the provided code template, perform the following tasks: 
    * **Line 30:** Write a line of code that extracts the columns from each line. Use the split() function
    * **Line 33:** Create a new row (i.e., a list) that contains the number of **silver** medals, followed by the name of the country
    * **Line 36:** Append the new row to **my_table**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code
import csv

my_table = []

with open(""medal_counts.csv"", ""r"") as f:
    next(f)
    for line in f:
        # Line 30: Extract the columns
        columns = line.strip().split(',')
        
        # Line 33: Create a new row
        new_row = [int(columns[2]), columns[0]]
        
        # Line 36: Append the new row to my_table
        my_table.append(new_row)

```
Here is the finalised code:

"
75,lsn20_popularnames,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

This program makes use of the names.csv dataset, which provides a list of over
1200+ names that were given to children in 2011. Here is a typical line from
the file:



`FEMALE, HISPANIC, GIA, 21`



  
Each position in the line (separated by a comma) represents a different ""data
element"". Here is a key for your reference:

Gender | Ethnicity | Name | Count  
(i.e., Number of Children Assigned this Name)  
---|---|---|---  
FEMALE | HISPANIC | GIA | 21  
  
  
  
Write a Python algorithm that gets a number, `X`, from the user, and prints
out the X most popular names, starting with the most popular and working down.

For example, if the user types `5`, and you determine that the five most
popular names are Adrian, David, Bob, Jane, Ulysses, your program should
output:  
Adrian  
David  
Bob  
Jane  
Ulysses  
  

**HINTS (really really important):**

  * Remember that you can use the `sort()` function to sort a list in ascending order. For example, if your list is named `my_list`, you can sort it by typing:  
`my_list.sort()`

  * For this lab, you need to sort the list in descending order, so that the most popular items appear first. To do this, you need to tell the function to sort in reverse. You can do this by typing the following (assuming your list is named `my_list`):  
`my_list.sort(reverse=True)`

  * `sort()` will work on 2D lists. It will sort by the first column, and then look at the 2nd column in the event of a tie. Think about this when you are building your 2D list.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

def read_csv():
    data = []

    with open('names.csv') as f:
        reader = csv.reader(f)
        for row in reader:
            # Adding only name and count to data list.
            data.append([row[2], int(row[3])])

    # Sorting the data in reverse (as per count).
    data.sort(key = lambda x: x[1], reverse = True)
    
    return data

def main():
    # reading data from csv and getting sorted data
    data = read_csv()

    # Taking input from user.
    X = int(input('Enter the value of X: '))

    # Printing X most popular names.
    for i in range(X):
        print(data[i][0])

main()       
"
76,lsn20_lowvolume,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

This program makes use of the traffic.csv dataset. Here is a typical line from
the file:



`691,6067 North,Kimball Ave,8/15/06,15600,North Bound:7500/South Bound:8100`



  
As you will recall from class, each position in the line (separated by a
comma) represents a different ""data element"". Here is a key for your
reference:

ID | Address | Street | Sample Date | Total # of Passing Vehicles | # of
Vehicles by Direction  
---|---|---|---|---|---  
691 | 6067 North | Kimball Ave | 8/15/06 | 15600 | North Bound:7500/South
Bound:8100  
  
  
  
Write a Python algorithm that opens the file and outputs the lowest traffic
count. Then, output the name of all streets whose traffic count is within 2500
(inclusive) of the min. Output one street name per line.



For example, if the min value is 500, and the roads within 2500 of this value
are ""Road A"", ""Road B"", ""Road C"", then your program should output:

    
    
    500  
    Road A  
    Road B  
    Road C



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# open the traffic.csv file with reading mode
file = open(""traffic.csv"", ""r"")

# setting up min_count as infinity and empty list called streets
min_count = float(""inf"")
streets = []

# read line by line
for line in file:
    # split each line by a comma and take the fifth element as count
    count = int(line.split("","")[4])
    
    # check if the count is less than min_count
    if count < min_count:
        # if so, replace min_count with this new count and reset streets list
        min_count = count
        streets = [line.split("","")[2]]
    elif count == min_count:
        streets.append(line.split("","")[2])
    # if the count is within 2500 of the min_count, add the corresponding street name to streets list
    elif min_count <= count <= min_count + 2500:
        streets.append(line.split("","")[2])

# printing the min value
print(min_count)
# printing the list of street names
for street in streets:
    print(street)

file.close()
"
77,lsn20_averagetraffic,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.




**PROBLEM STATEMENT:  
**

This program makes use of the traffic.csv dataset. Here is a typical line from
the file:



`691,6067 North,Kimball Ave,8/15/06,15600,North Bound:7500/South Bound:8100`



  
As you will recall from class, each position in the line (separated by a
comma) represents a different ""data element"". Here is a key for your
reference:

ID | Address | Street | Sample Date | Total # of Passing Vehicles | # of
Vehicles by Direction  
---|---|---|---|---|---  
691 | 6067 North | Kimball Ave | 8/15/06 | 15600 | North Bound:7500/South
Bound:8100  
  
  
  
Write a Python algorithm that opens the file and outputs the # of roads whose
traffic count is greater than (or equal to) the average. For example, if you
determine that the answer is 20, your program should output:

    
    
    20



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Import the csv module
import csv

# Initialize a counter and a list to store the traffic counts
count = 0
traffic_counts = []

# Open the csv file
with open(""traffic.csv"", 'r') as f:
    reader = csv.reader(f)

    # Iterate over each row in the csv file
    for row in reader:
        # Convert the traffic count to an integer and add it to the list
        traffic_counts.append(int(row[4]))

# Calculate the average traffic count
average_traffic = sum(traffic_counts) / len(traffic_counts)

# Iterate over the traffic counts
for count in traffic_counts:
    # If the traffic count is greater than or equal to the average, increment the counter
    if count >= average_traffic:
        count += 1

# Print the counter
print(count)
"
78,lsn19_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You are being provided with an empty table that contains information about
USAF Academy Squadrons. The columns of the table are organized as follows:

**Squadron Name** | **Squadron Number**  
---|---  
Name Goes Here (string) | # Goes Here (integer)  
  


Add the following two rows to the table:

Dogs of War | 3  
---|---  
Wolverines | 19  
  
  
  



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code
squadrons_table = [['Squadron Name', 'Squadron Number']]

# Solution Code
squadrons_table.append(['Dogs of War', 3])
squadrons_table.append(['Wolverines', 19])
"
79,lsn19_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You are being provided with a table  that describes various starship
classes from the Star Trek universe (I'm a nerd . . . go with it), as well as
two input statements that get a row and column from the user.  

Print out the corresponding row/column value from the table.





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
starship_classes = [
    [""Galaxy"", ""Nebula"", ""Sovereign""],
    [""Intrepid"", ""Nova"", ""Defiant""],
    [""Akira"", ""Steamrunner"", ""Norway""]
]

row = int(input(""Enter a row number: ""))
column = int(input(""Enter a column number: ""))

print(starship_classes[row][column])
"
80,lsn19_population,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:**

You are being provided with a simple 2D list that contains the names and
populations of the 10 largest cities in the world. This list (which is called
`cities_table`) can be logicially visualized as the following:



**City** | **Population**  
---|---  
Tokyo | 37,435,191  
Delhi | 29,399,141  
Shanghai | 29,399,141  
Sao Paulo | 21,846,507  
Mexico City | 21,671,908  
Cairo | 20,484,965  
Dhaka | 20,283,552  
Mumbai | 20,185,064  
Beijing | 20,035,455  
Osaka | 19,222,665  
  
  
Write a Python program that gets a population from the user, and prints the
names of all the cities whose populations are at least that big (starting with
the most populated city). Print each city's name on a separate line.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 28000000 | 30000000  
Output | Tokyo  
Delhi  
Shanghai | Tokyo



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
cities_table = [
    ['Tokyo', 37435191],
    ['Delhi', 29399141],
    ['Shanghai', 29399141],
    ['Sao Paulo', 21846507],
    ['Mexico City', 21671908],
    ['Cairo', 20484965],
    ['Dhaka', 20283552],
    ['Mumbai', 20185064],
    ['Beijing', 20035455],
    ['Osaka', 19222665]
]

inp = int(input())

for city in cities_table:
    if city[1] >= inp:
        print(city[0])
"
81,lsn19_movies,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.




**PROBLEM STATEMENT:**

Write a Python function called `get_movies` that takes three parameters:

  * A two-dimensional list containing movie titles and other stats (see table below for an example)
  * A rating (e.g., ""PG"", ""R"")
  * A run time (in minutes)



Title | Release Year | Rating | Run Time (minutes)  
---|---|---|---  
Star Wars: A New Hope | 1977 | PG | 121  
Star Trek: The Motion Picture | 1979 | G | 132  
Indiana Jones: Raiders of the Lost Ark | 1989 | PG | 115  
  
  
Your function should return the number of movies that have the specified
rating, and run for at least the number of minutes specified.



**EXAMPLE:**  
If the above table were contained within a list called `movie_table`, then
`get_movies(movie_table, ""PG"", 100)` should return 2



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def get_movies(movie_table, rating, run_time):
    # Initialize counter
    count = 0
    
    # Iterate over each row in the movie_table
    for row in movie_table:
        # Check if the rating and run time match the specifications
        if row[2] == rating and row[3] >= run_time:
            count += 1
    
    return count
"
82,lsn19_golf,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** In, Python, write an algorithm that first asks the user how many football
players they wish to enter statistics for and then gets that many yearly
passing totals for each player. Output how many of those players that had more
than 5000 passing yards in a year. Also your algorithm will output the average
yardage per year as well as the minimum yardage entered, in that order. You
can assume there is at least one player's yardage to input.



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
**Inputs** | 6  
4924  
4442  
5117  
2700  
1990  
4399 | 5  
2305  
4209  
5100  
5109  
3800 | 4  
4200  
2709  
3757  
2976  
**Outputs** | 1  
3928.6666666666665  
1990 | 2  
4104.6  
2305 | 0  
3410.5  
2709



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# number of players
n = int(input())

# creating empty lists to store yards data
yards = []

# input yards data for each player
for _ in range(n):
    current_yards = int(input())
    yards.append(current_yards)

# players who had more than 5000 passing yards
players_over_5000 = len([x for x in yards if x > 5000])

# average yardage per year
average_yards = sum(yards) / n

# minimum yards
min_yards = min(yards)

# output
print(players_over_5000)
print(average_yards)
print(min_yards)
"
83,lsn19_credit,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.




**PROBLEM STATEMENT:**

The Air Academy Federal Credit Union wants to identify its best customers and
comes to you for help. To help with the accounting, create a Python program
which inputs repeated pairs of member last-names followed by account balances
until the word "" **DONE** "" (all capital letters) is entered at the member
last-name prompt.

Your program should output:

  * The last name of the member the highest account value, if there are two members with the same highest account value it should output the name of the first person entered.
  * It will then output the percentage members who are within $10,000 (inclusive) of the highest account value.

There is no bound on the number of members that may be entered, but you may
assume that there will be at least one member and balance entered.



**EXAMPLE:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | Rockefeller  
120000  
Chase  
115000  
Morgan  
110000  
Gates  
90000  
Jobs  
65000  
DONE | Jobs  
150000  
Chase  
150000  
Kennedy  
40000  
DONE | Morgan  
145000  
Chase  
135000  
Kennedy  
142000  
Gates  
145000  
DONE  
Output | Rockefeller  
60.0 | Jobs  
66.66666666666666 | Morgan  
100.0  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
highest_account_balance = 0
highest_account_holder = ''
total_count = 0
count_within_10000 = 0

while True:
    member_last_name = input()
    if member_last_name == 'DONE':
        break
    account_balance = int(input())
    total_count += 1
    if account_balance > highest_account_balance:
        highest_account_balance = account_balance
        highest_account_holder = member_last_name
        count_within_10000 = 1
    elif account_balance >= highest_account_balance - 10000:
        count_within_10000 += 1

print(highest_account_holder)
print((count_within_10000 / total_count) * 100)
"
84,lsn19_100m,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:**

You have been asked by your unit to record 100m dash times for an upcoming
USAFA track meet. Create a Python algorithm that first asks for the number of
cadets, and then asks for that many cadet last names, squadrons, and 100m dash
times (in that order).

Your program should output:

  * The cadet squadron containing the cadet with the fastest 100m dash time followed by their 100m dash time. If there is a tie for fastest 100m dash times, you should output the squadron number and time for the LAST cadet entered who had that fastest time.
  * The number of cadets whose 100m dash time was faster than the average.

There is no bound on the number of cadet that may be entered, but you may
assume that there will be at least one cadet and track time entered.



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Inputs** | 4  
Thorpe  
13  
10.2  
Owens  
22  
9.93  
Mathias  
19  
9.99  
Rudolph  
39  
10.23 | 3  
Johnson  
7  
10.3  
Tyus  
14  
10.02  
Lewis  
40  
9.67 | 2  
Joyner  
1  
10.08  
Kersee  
29  
9.97  
**Output** | 22  
9.93  
2 | 40  
9.67  
1 | 29  
9.97  
1  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_cadets = int(input())

# initialize variables
total_time = 0
fastest_time = 0
fastest_squad = 0
num_faster_than_avg = 0

# store last names, squadrons, and times
cadet_info = []

for i in range(num_cadets):
    last_name = input()
    squadron = int(input())
    time = float(input())
    cadet_info.append((last_name, squadron, time))

    total_time += time

    if time < fastest_time or fastest_time == 0:
        fastest_time = time
        fastest_squad = squadron

avg_time = total_time / num_cadets

for info in cadet_info:
    if info[2] < avg_time:
        num_faster_than_avg += 1

print(fastest_squad)
print(fastest_time)
print(num_faster_than_avg)
"
85,lsn18_swimstats,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:**

Write a Python algorithm that keeps asking the user for swim times (in
seconds) until the user types -1. Your program will print the following values
(in order, one per line):

  * Average time
  * Range (i.e., the difference between the min and max time)
  * Standard Deviation (hint: like many things in Python you can find how to accomplish this with a quick web search, stdev() should show up on top)



  | Example 1 | Example 2  
---|---|---  
Inputs | 62  
71  
83  
-1 | 45  
47  
51  
46  
44  
-1  
Outputs | 72.0  
21  
8.602 | 46.6  
7  
2.417  
  
** **



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import statistics

times = []
while True:
    time = int(input())
    if time == -1:
        break
    times.append(time)
if len(times)>0:  
    average = sum(times) / len(times)
    range_ = max(times) - min(times)
    stdev = statistics.stdev(times)

    print(average)
    print(range_)
    print(stdev)
"
86,lsn18_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM NAME:  
** lsn18_skill2



**PROBLEM STATEMENT:  
** You are being provided with a list containing 5 random numbers. Create a
variable called **my_value** , and assign it the value of the 3rd item in the
list.



**NOTES:**

  * You do not need to print my_value OR the list



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
#given_list is the list containing 5 random numbers.

my_value = given_list[2]
"
87,lsn18_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Create a list called my_list. Put 3 items inside the list (they can be
anything you want)



**HINTS:  
** Look at the quick reference guide! ****





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
my_list = ['Hello', 'Python', 101]
"
88,lsn18_namesreverse,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.




**PROBLEM STATEMENT:**

Allow the user to enter names one at a time until they type the word 'END'
(without quotes). This keyword is called a  **sentinel value,**  and it marks
the end of the input. The user entered names (not counting 'END') are to be
stored in a Python list. The user will enter the names one at a time. After
entering all the names, your algorithm will print the names in the reverse
order that they were entered.



  | Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | Adrian  
Liam  
Michelle  
END | Rick  
Morty  
END | Spock  
Data  
Dax  
Burnham  
END  
Outputs | Michelle  
Liam  
Adrian | Morty  
Rick | Burnham  
Dax  
Data  
Spock  
  
You may assume that the user types at least one name.



**HINTS:**

  * Remember that the range() function can have up to 3 parameters. The first is the starting value, the second is the ending value, and the third is the increment amount.
  * Don't forget that the index of a list starts at 0, and goes to the length of the list - 1. For example, a list with 5 elements has indices 0, 1, 2, 3, and 4.
  * To get the length of a list, use the `len()` function



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
user_names = []

while True:
    name = input()
    if name == ""END"":
        break
    user_names.append(name)
    
for i in range(len(user_names)-1, -1, -1):
    print(user_names[i])
"
89,lsn18_names,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:**

Write a Python algorithm that asks the user for the number of names to
process, and then gets that many values. Print out the names in alphabetical
order, with each name starting on a line.

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | 3  
Alice  
Jane  
Bob | 3  
Bailey  
Paul  
Adrian | 5  
David  
Dave  
Steve  
Barry  
Troy  
Outputs | Alice  
Bob  
Jane | Adrian  
Bailey  
Paul | Barry  
Dave  
David  
Steve  
Troy  
  


You may assume that the user will enter at least one name.



**NOTES:**

  * Python has a built-in function called `sort()` that can be used to sort a list. Here is an example to show you how to use it:  
`# Declare a list and put some stuff in it`  
`my_list = ['b', 'c', 'a', 'd']`  
  
`# Sort the list alphabetically (a-z)`  
`my_list.sort()`

** **



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# A list to hold the names
names = []

# Ask for the number of names
num_names = int(input(""Enter the number of names: ""))

# Get the names
for i in range(num_names):
    # Get a name from the user
    name = input(""Enter a name: "")

    # Add the name to the list
    names.append(name)

# Sort the names alphabetically
names.sort()

# Print each name on its own line
for name in names:
    print(name)
"
90,lsn18_grades,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.




**PROBLEM STATEMENT:**

Create a Python program that asks how many students are in a class, then
prompts the user for each student's grade. Then output the grades that are
**at least 10 points above the average.**



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 3  
10  
100  
70 | 3  
30  
40  
60 | 4  
10  
20  
60  
90  
Output | 100 | 70 | 60  
90



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_students = int(input(""Enter the number of students: ""))
grades = []
for _ in range(num_students):
    grade = int(input(""Enter the grade of a student: ""))
    grades.append(grade)
average = sum(grades) / num_students
for grade in grades:
    if grade > average + 10:
        print(grade)
"
91,lsn18_combinations,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:**

Write a Python function called `get_combinations` that takes a list of
distinct characters as a parameter, and returns a list containing all of the
2-letter combinations of said characters.

For example, given the following list:  
`my_list = ['a', 'b']`

`get_combinations(my_list)` should return a list containing the following
elements:  
['aa', 'ab', 'ba', 'bb']

Notes:

  * The ordering of the elements in the list does not matter, so long as all of the 2-letter combinations are contained within the list



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def get_combinations(my_list):
  combinations = []
  for i in my_list:
    for j in my_list:
      combinations.append(i+j)
  return combinations
"
92,lsn16_practice4,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `fuelprices.csv` that contains
monthly gasoline prices from 2006 - 2012. Here is a typical line from the
dataset (each line ends with the newline ""\n"" character):

`1/1/2006 0:00,Regular,2.314`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:

  | Day | Gas Type | Price (in Dollars)  
---|---|---|---  
Value | 1/1/2006 0:00 | Regular | 2.314  
  


Write a Python program that asks the user for:

  * A Gas Type (e.g., ""Regular"")



Your program should then read the file and output:

  * The average price of gas for that gas type







Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

def get_avg_gas_price(gas_type, csv_file='fuelprices.csv'):
    total = 0
    count = 0
    with open(csv_file,'r') as f:
        data = csv.reader(f)
        for row in data:
            if row[1] == gas_type:
                total += float(row[2])
                count += 1
    return total / count if count else 0.0


gas_type = input(""Enter the gas type: "")

average_price = get_avg_gas_price(gas_type)

print(""The average price of"", gas_type,""gas is"", average_price)
```
"
93,lsn16_practice3,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You are writing a program to analyze the BMI of cadets. Write a program
that asks for the number of cadets, and then gets that many weights and
heights (alternating, a weight then the corresponding height, in that order).
Your program should then output the number of thin, healthy, overweight, and
obese cadets (based on their BMI), using the following formula and table as a
guide:



**BMI = 703 * (weight / height 2)**



**Rating** | **BMI**  
---|---  
Thin | less than 18.5  
Healthy | at least 18.5 but less than 25  
Overweight | at least 25 but less than 30  
Obese | 30 or more  
  






Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton code:
num_cadets = int(input(""Enter the number of cadets : ""))
thin = 0
healthy = 0
overweight = 0
obese = 0

for i in range(num_cadets):
    weight = float(input(""Enter the weight for cadet "" + str(i+1) + "" : ""))
    height = float(input(""Enter the height for cadet "" + str(i+1) + "" : ""))
    bmi = 703 * (weight / (height**2))
    
    if bmi < 18.5:
        thin += 1
    elif 18.5 <= bmi < 25:
        healthy += 1
    elif 25 <= bmi < 30:
        overweight += 1
    else:
        obese += 1

print(""Number of Thin cadets: "", thin)
print(""Number of Healthy cadets: "", healthy)
print(""Number of Overweight cadets: "", overweight)
print(""Number of Obese cadets: "", obese)
"
94,lsn16_practice2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a function that returns the nth value in a
sequence (i.e., pattern). Get a number from the user (x), and print the xth to
the x+5th value in that sequence (6 numbers total).



**HINTS:**

  * To get the 8th value in a sequence, you would call `get_value(8)`





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def print_sequence():
    x = int(input(""Enter a number: ""))
    for i in range(x, x+6):
        print(get_value(i))

print_sequence()
"
95,lsn16_practice1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** Define a function called add_values. The function should take 3 parameters
(x, y, z), and return the sum of these values.



**NOTES:**

  * You do not need to call the function. Simple define it.





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def add_values(x, y, z):
    return x + y + z
"
96,lsn15_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a python program that creates a file called ""output.txt"" and prints a
message of your choosing.

**HINTS:  
** Look at the quick reference guide!



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Open the file with write mode.
file = open(""output.txt"", ""w"")

# Write the message into the file.
file.write(""Hello, World!"")

# Close the file after writing to save changes.
file.close()
"
97,lsn15_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a file called sample.txt. Write a python
program that opens this file and prints all of its contents as a single
string.



**HINTS:  
** Look at the quick reference guide!





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# open and read the file into a variable
with open('sample.txt', 'r') as file:
    data = file.read().replace('\n', ' ')
print(data)
"
98,lsn15_echo,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Write a program that asks the user to type the name of a file (e.g.,
""file.txt""), and a letter. Your program should then open the file, and print
out all of the lines where the first character starts with the letter

For example, if the user types the following filename:

    
    
    input1.txt
    a
    

and the contents of input1.txt are:

    
    
    aspiration
    classified
    federation
    

the output should be:

    
    
    aspiration
    



Notes:

  * Each line ends with the '\n' character. Use `split()` to get each line.
  * Refer to the String Functions slide to see how you can get the first character from a string



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def find_lines_start_with_letter():
    filename = input('Please enter the file name: ')
    letter = input('Please enter a letter: ')
    with open(filename, 'r') as file:
        for line in file:
            if line[0] == letter:
                print(line)

find_lines_start_with_letter()
"
99,lsn14_timestable,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.




**PROBLEM STATEMENT:  
** Write an algorithm that asks the user for a positive number and then
outputs the multiplication table of that number 1-10.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Inputs | 3 | 9  
Outputs |

3  
6  
9  
12  
15  
18  
21  
24  
27  
30

| 9  
18  
27  
36  
45  
54  
63  
72  
81  
90  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
number = int(input(""Enter a positive number: "")) 

for i in range(1, 11):
    print(number * i)
"
100,lsn14_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You are trying to use a for loop to print all of the powers of 2 from 1024
(210) to 1 (20). Unfortunately, for some reason, the loop does not work.
Review the code and make the necessary corrections.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
for i in range(10, -1, -1):
    print(2 ** i)
"
101,lsn14_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a variable that asks the user for the number of
times to loop. Construct a FOR loop that loops this many times printing out a
message each time (the message can be whatever you want)



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_times = int(input(""How many times to loop? ""))

for i in range(num_times):
    print(""This is loop number"", i+1)
"
102,lsn14_printchars,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** Write a Python algorithm that asks the users for two ASCII characters
(e.g., 'a', 'z'), and prints all of the characters between them (inclusive).

  * If the first character has a lower ASCII value than the second (e.g., 'a' - 'z'), print out the letters in ascending order.
  * Alternatively, if the second letter has a lower ASCII value, print out the letters in descending order.



**HINTS:**

  * Use the `ord()` function to convert a character into an integer:  
`ord('a')` returns 141  
  

  * Use the `chr()` function to convert an integer back into a character:  
`chr(142)` returns 'b'



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Inputs | a  
c | f  
a  
Outputs |

a  
b  
c

| f  
e  
d  
c  
b  
a



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def print_ascii_chars():
    first_char = input(""Enter first character: "")
    second_char = input(""Enter second character: "")

    if ord(first_char) < ord(second_char):
        for i in range(ord(first_char), ord(second_char) + 1):
            print(chr(i))
    else:
        for i in range(ord(first_char), ord(second_char) - 1, -1):
            print(chr(i))

print_ascii_chars()
"
103,lsn14_football,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** In, Python, write an algorithm that first asks the user how many football
players they wish to enter statistics for and then gets that many yearly
passing totals for each player. Output how many of those players that had more
than 5000 passing yards in a year. Also your algorithm will output the average
yardage per year as well as the minimum yardage entered, in that order. You
can assume there is at least one player's yardage to input.



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
**Inputs** | 6  
4924  
4442  
5117  
2700  
1990  
4399 | 5  
2305  
4209  
5100  
5109  
3800 | 4  
4200  
2709  
3757  
2976  
**Outputs** | 1  
3928.6666666666665  
1990 | 2  
4104.6  
2305 | 0  
3410.5  
2709



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# start of the solution

num_of_players = int(input())

player_stats = []
for i in range(num_of_players):
    stats = int(input())
    player_stats.append(stats)

players_gt_5000 = len([s for s in player_stats if s > 5000])

average_stat = sum(player_stats) / num_of_players

minimum_stat = min(player_stats)

print(players_gt_5000)
print(average_stat)
print(minimum_stat)

# end of solution
"
104,lsn14_counting,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.




**PROBLEM STATEMENT:  
** Write a Python algorithm that gets three numbers from the user, X, Y, and
Z. Then have the algorithm output all the numbers from X to Y (inclusive),
counting by Z. You may assume that Z is non-zero.



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
**Inputs** | 1  
5  
1 | -5  
-10  
-3 | 15  
15  
100  
**Outputs** | 1  
2  
3  
4  
5 | -5  
-8 | 15



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
X = int(input())
Y = int(input())
Z = int(input())

for number in range(X,Y+1,Z):
    print(number)
"
105,lsn14_coordinates,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a Python algorithm that prints all the coordinates in a coordinate
plane, given two corners. Your program should get four inputs from the user:

  * the starting x-coordinate,
  * the ending x-coordinate,
  * the starting y-coordinate, and
  * the ending y-coordinate.

Your program will then print out all of the coordinates in x y order
(separating coordinates with a space), listing all of the coordinates in the
x-axis before incrementing y. You may assume that the ending coordinate is
never less than the starting coordinate.  

For example, your algorithm would print out:  
1 2  
2 2  
3 2  
4 2  
5 2  
6 2  
1 3  
2 3  
3 3  
4 3  
5 3  
6 3  
. . . and so on



**HINTS:**

  * Write a loop that first prints all of the x coordinates from start to end
  * Use a nested loop to print all of the y coordinates from start to end



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Inputs** | 0  
1  
0  
1 | 0  
2  
0  
1  
**Outputs** | 0 0  
1 0  
0 1  
1 1 | 0 0  
1 0  
2 0  
0 1  
1 1  
2 1  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def print_coordinates():
 
  # Get user inputs
  start_x = int(input())
  end_x = int(input())
  start_y = int(input())
  end_y = int(input())

  # Double for loop to print all coordinates
  for y in range(start_y, end_y + 1):
    for x in range(start_x, end_x + 1):
      print(f'{x} {y}')
"
106,lsn14_class2017,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** In Python, write an algorithm that first asks the user how many cadets to
input and then gets that many cadet class years from the user. Output how many
of those cadets were in the class of 2017. You can assume there is at least
one cadet to enter.

**EXAMPLES:**

Example 1 | Example 2 | Example 3  
---|---|---  
Inputs | 4  
2014  
2016  
2017  
2017 | 5  
2015  
2017  
2014  
2014  
2017 | 4  
2014  
2016  
2014  
2014  
Outputs | 2 | 3 | 0



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_cadets = int(input(""Enter the number of cadets: ""))
count=0
for _ in range(num_cadets):
    if int(input(""Enter the class year of cadet: ""))==2017:
        count+=1
print(count)
"
107,lsn13_waittimes,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write an algorithm that lets the user input the wait times for various
rides at an amusement park (in minutes) until he/she types the value -999.
Output the shortest waiting time, followed by the number of waiting times that
are over 30 minutes.

**EXAMPLE:**

Example 1 | Example 2 | Example 3  
---|---|---  
Inputs |

90  
30  
31  
-999

|

35  
15  
90  
120  
15  
-999

|

15  
15  
10  
5  
-999  
  
Outputs | 30  
2 | 15  
3 | 5  
0



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def amusement_park_waits():
    wait_times = [] 

    while True: 
        wait_time = int(input('Enter the waiting time (enter -999 to stop): ')) 
        if wait_time == -999: 
            break 
        wait_times.append(wait_time) 
    shortest_wait_time = min(wait_times)
    waits_over_30 = [t for t in wait_times if t > 30]

    print(shortest_wait_time)
    print(len(waits_over_30))
"
108,lsn13_squadrons,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write an algorithm that asks the user for the number of squadrons to input,
and then gets each squadron's number. Output the number  
of squadrons from 1st, 2nd, 3rd, and 4th groups (one per line)

**EXAMPLE:**

Example 1 | Example 2 | Example 3  
---|---|---  
Inputs |

3  
3  
19  
24

|

4  
19  
25  
37  
40

|

2  
1  
34  
  
Outputs | 1  
1  
1  
0 | 0  
1  
1  
2 | 1  
0  
0  
1



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def squadrons_group():
    # taking no of squadrons as input
    n = int(input())

    # Initialising all groups with 0 squadrons
    squadrons = [0, 0, 0, 0]

    for _ in range(n):
        squadron = int(input())
        squadrons[squadron % 4] += 1

    # Output each group's number of squadrons
    for squadron in squadrons:
        print(squadron)


squadrons_group()
"
109,lsn13_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a WHILE loop that prints values from 0 to 10.
Modify the code so that it counts from 10 to 0.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
i = 10
while i >= 0:
    print(i)
    i -= 1
"
110,lsn13_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You are trying to use a for loop to print all of the powers of 2 from 1024
(210) to 1 (20). Unfortunately, for some reason, the loop does not work.
Review the code and make the necessary corrections.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
for i in range(10, -1, -1):
    print(2**i)
"
111,lsn13_dvc,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** The CS110Z course director, unfortunately, was tricked into purchasing a
Disney Vacation Club timeshare. The good news about DVC is that it lets you
reserve a room at any Disney Resort for one week! The downside, however, is
that members have to pay an annual ""maintenance fee"" so that the mouse can
keep the property looking good (EVEN when Disney World was closed due to
COVID-19 . . . yay).

This year, the maintenance was $623.00. If that isn't bad enough, your course
director discovered that maintenance fees aren't fixed! On the contrary, it
accues each year at a rate of approximately 1.5%.

Write a Python function called `get_years_until` that takes a  **target
value**  as a parameter, and returns the number of years (assuming a fixed
interest rate) before the maintenance fee exceeds this value.

**Example 1**  
`get_years_until(624)` should return 1. This is because:

  * The maintenance fee will increase by $9.35 (i.e., 1.5% of 623) in a year
  * The new maintenance fee will be $623.00 + $9.35 = $632.35, which is obviously more than $624.00

**  
Example 2**  
`get_years_until(1000)` should return 32. This is because:

  * 623 * 1.015 * 1.015 * 1.015 . . . (32 times total) = $1003.23, which is obviously more than $1000.00

  
**Don't Know Where to Start?!?**  
Use a While loop to keep calculating the new maintenance fee until the value
is . . . (we'll let you figure out the rest).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def get_years_until(target_value):
    fee = 623.00
    rate = 1.015
    years = 0
    while fee < target_value:
        fee *= rate
        years += 1
    return years
"
112,lsn13_countby10s,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write a program whose input is two integers. Output the first integer and
subsequent increments of 10 as long as the value is less than or equal to the
second integer.

Case #1: If the input is:

    
    
    -15
    30
    

the output is:

    
    
    -15
    -5
    5
    15
    25
    

Case 2: If the second integer is less than the first as in:

    
    
    20
    5
    

the output is:

    
    
    Second integer can't be less than the first.
    

For coding simplicity, output a space after every integer, including the last.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def increment_by_10(first, second):
    if second < first:
        print(""Second integer can't be less than the first."")
    else:
        while first <= second:
            print(first, end = ' ')
            first += 10
        
first = int(input())
second = int(input())
increment_by_10(first, second)

"
113,lsn13_count,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a Python program that gets 2 inputs from the user

  * a number,  **x**
  * an increment amount,  **y**

Your program will then print out all the numbers from 0 to the user-defined
value (x), counting by the increment amount (y).

**EXAMPLES:**

| Example 1 | Example 2  
---|---|---  
Inputs | 10  
2 | 14  
3  
Outputs | 0  
2  
4  
6  
8  
10 | 0  
3  
6  
9  
12



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
x = int(input())
y = int(input())

for i in range(0, x + 1, y):
    print(i)
"
114,lsn13_cargocapacity,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write an algorithm that lets the user input the cargo capacity (in lbs) of
various transport aircraft until the user enters -1. Your program should
output the min and max cargo capacity, as well as the number of aircraft that
can carry at least 10000 lbs.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

4500  
11000  
9000  
-1

|

9999  
15000  
3500  
17500  
-1

| 10000  
-1  
Outputs | 4500  
11000  
1 | 3500  
17500  
2 | 10000  
10000  
1



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
cargo_capacity = int(input())
min_capacity = max_capacity = cargo_capacity
count = 0
while cargo_capacity != -1:
    if cargo_capacity < min_capacity:
        min_capacity = cargo_capacity
    if cargo_capacity > max_capacity:
        max_capacity = cargo_capacity
    if cargo_capacity >= 10000:
        count += 1
    cargo_capacity = int(input())

print(min_capacity)
print(max_capacity)
print(count)
"
115,lsn13_averagerun,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** In, Python, write an algorithm that first asks the user how many PFT run
times to input and then gets that many values from the user. Output the
average of all the run times. You can assume there is at least one run time to
input.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | 6  
98  
75  
88  
82  
94  
100 | 5  
99  
83  
79  
86  
87 | 4  
88  
82  
80  
90  
Outputs | 89.5 | 86.8 | 85



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# get the number of inputs
num_inputs = int(input())

# initialize sum to zero
sum_times = 0

# loop the number of times specified by the user
for i in range(num_inputs):
    # get the next run time from the user and add it to the sum
    sum_times += int(input())

# calculate the average and print it
print(sum_times / num_inputs)
"
116,lsn12_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a function called `fahrenheit_to_kelvin()`. Your function should take
a temperature (in Fahrenheit) as a parameter, and RETURN (NOT PRINT) the
equivalent temperature in Kelvin.

**NOTE:  
** The formula for converting between Fahrenheit and Kelvin is

**K = ((F - 32) / 1.8) + 273.15**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def fahrenheit_to_kelvin(F):
    K = ((F - 32) / 1.8) + 273.15
    return K
"
117,lsn12_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with a function called get_fuel_consumption() that
takes a distance in kilometers as a parameter, and calculates the fuel
consumed (in gallons) by a 747 aircraft to travel this distance.

Call this function to determine how much fuel is consumed by a 747 when
traveling 1500 kilometers. Store the returned result in a variable called
fuel_consumed

Remember, ""Calling a function"" simply means typing in the name of the function
(and providing it with any parameters that it needs--in this case, there are
no parameters since there is nothing in the parenthesis).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# call the function and store the result in a variable
fuel_consumed = get_fuel_consumption(1500)
"
118,lsn12_in_circle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a function that determines if a point is within a circle. You will
name your function `in_circle()`. It has five parameters:

  1. The coordinates of the point that is to be tested (x, y)
  2. The center of a circle (cir_x, cir_y)
  3. The radius of the circle (radius)

 The `in_circle()` function will return **True** if the point is on or inside
the circle, and **False** otherwise.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def in_circle(x, y, cir_x, cir_y, radius):
    return (x-cir_x)**2 + (y-cir_y)**2 <= radius**2

# You can uncomment below lines for testing
# print(in_circle(1, 1, 0, 0, 1))  # should return True
# print(in_circle(2, 2, 0, 0, 1))  # should return False
"
119,lsn12_distance,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a function that computes the distance between two points. You will
name your function `dist_points`. It has four parameters, the cordinates of
the two points as `x1, y1, x2, y2`. The `dist_points()` function will return
the distance between the two points as a floating point number.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def dist_points(x1, y1, x2, y2):
    return ((x2 - x1)**2 + (y2 - y1)**2)**0.5
# testing
# print(dist_points(0,0,3,4))---->>>5.0
"
120,lsn12_circle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a function that computes the area of a circle. You will name your
function `area_circle`. It has one parameter, the radius of the circle,
`radius`. The `area_circle()` function will return the area of the circle.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def area_circle(radius):
    return 3.14159 * (radius**2)
"
121,lsn12_asteroids,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

""Asteroids"" was an arcade game created in 1979 by Atari, Inc. In the game, the
player is given control of a spaceship that has the ability to shoot bullets.
The player is then placed in a field of floating rocks, and is tasked with
destroying them without running into them.

In this lab, you will write a ""collision detection"" function that will be used
by the game to determine if the player's ship has hit a rock. To make this
simple, assume that an imaginary circle extends from the center of the
asteroid and the player's ship (see below image). If the two circles ever
overlap one another, then a collision has occurred. (NOTE: There are more
accurate ways to detect a collision. [Click here if you want to learn more
(Links to an external site.)](https://bell0bytes.eu/basic-collision-
detection/)).

![](https://bell0bytes.eu/content/images/2019/03/spaceShipAsteroid.png)

Your function, which you will name `detect_collision()` should have six
parameters: the (x, y) coordinates of the center of player's ship, the ship's
radius, the (x, y) coordinates of the center of an asteroid, and the
asteroid's radius. Your function will return `True` if the player's ship has
hit the asteroid, and `False` otherwise.

**HINT: _  
_** _You may want to copy and paste the_  `dist_points`  _function you created
earlier. It's almost as if we are trying to demonstrate the importance of
reusable functions . . ._

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

def detect_collision(ship_x, ship_y, ship_radius, astro_x, astro_y, astro_radius):
    
    def dist_points(x1, y1, x2, y2):
        return math.sqrt((x2 - x1)**2 + (y2 - y1)**2)
    
    distance = dist_points(ship_x, ship_y, astro_x, astro_y)

    if(distance <= ship_radius + astro_radius):
        return True
    else:
        return False
"
122,lsn11_triangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a function that computes the area of a triangle. You will name your
function `area_triangle()`. It has two parameters, the height of the triangle,
`height`, and the length of the base, `base`. The `area_triangle()` function
will print the area of the triangle.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
submit to the server for grading, only the function will be tested.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def area_triangle(height, base):
    area = (1/2) * base * height
    print(area)


# testing the function
# area_triangle(4, 5)
"
123,lsn11_skill3,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Define a function called `print_hello()`. Your function should, when
called, simply print out a message of your choosing that would be a greeting
to someone.

**IMPORTANT NOTE:**  
Functions only run when a program calls them. For the purposes of this
exercise, you do not need to call the function. If you don't, however, nothing
will appear on the screen when you run it in Thonny.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def print_hello():
    print(""Hello, Welcome to Python Programming!"")
"
124,lsn11_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_multiple_trees()` that
outputs a tree using ASCII art. Unlike the previous problem, this function
accepts a parameter that tells it how many trees to draw.

Write a program that:

  1. Gets an integer from the user and stores it in a variable. You can name this variable whatever you want.
  2. Call the function, and passes the variable to it. 

Remember that ""passing a value"" to a function simply means putting the number
inside the parenthesis when you call it.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# get an integer from the user and store it in a variable 
num_trees = int(input(""Enter the number of trees you want to draw: ""))

# call the function, and pass the variable to it
draw_multiple_trees(num_trees)
"
125,lsn11_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_tree()` that prints a
tree using ASCII art:

    
    
     *  
     ***  
    *****  
     |

Call this function



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def draw_tree():
    print("" * "")
    print(""***"")
    print(""***"")
    print("" | "")

draw_tree()
"
126,lsn11_imagesize,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
PROBLEM STATEMENT:  
Write a function that computes the size of an uncompressed image. You will
name your function calculate_size_of_image(), and it will have three
parameters: the width of the image, the height of the image, and the bit depth
(i.e., # of bits per pixel).

The function should print the size of the image in kilobytes.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_size_of_image(width, height, bit_depth):
    size = (width * height * bit_depth) / (8 * 1024)
    print(size)
```
"
127,lsn11_callme,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with three functions. Open the template file, and
perform the following tasks: **  
**

  * **Task 1:** Ask the user to enter a width and height. Do **NOT** assume they are whole numbers. Call area_rectangle and give it the user values
  * **Task 2:** Ask the user to enter a string. Call print_backwards and give it the user value
  * **Task 3:** You have been provided with a variable called my_number. Call positive_or_negative and give it the variable



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def main():
    # task 1
    width = float(input(""Please enter a width: ""))
    height = float(input(""Please enter a height: ""))
    area_rectangle(width, height)

    # task 2
    text = input(""Please enter a string: "")
    print_backwards(text)

    # task 3
    positive_or_negative(my_number)
"
128,lsn1_helloworld,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
  1. Download the template file below and save it somewhere you will remember.  Do not rename the file!  
  

  2. Open the file in Thonny.  You should be able to double click on it.  
  

  3. Press the play button.  It looks like a Green button  
  
  

  4. You will see the following prompt in the Console.  Type 'y' (without the quotes) and press ENTER.  
  
  

  5. The test program will automatically run and print a result.  If you see the following, you are good to go.  Otherwise, contact your instructor:  



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",I'm sorry. It's not clear what specific problem you're asking about. You haven't provided any skeleton code or a problem statement to write a solution for. Could you please provide more information?
129,a4_7_fit_u,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.




**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `afpft_v2.csv` that describes how
various Air Force personnel performed on their most recent fitness test. Do
NOT ask the user for the file name--just open and read this specific file.
Here is a typical line from the dataset (each line ends with the newline ""\n""
character):



`38, 52, 29, 568`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:  
  

  | Sit Ups  
(Reps) | Push Ups  
(Reps) | Waist  
(inches) | 1.5 Mile Run Time  
(seconds)  
---|---|---|---|---  
Value | 45 | 65 | 32 | 630  
  


**Write a Python program that analyzes this file and prints the # of
_unsatisfactory_ (less than 75) scores. **



To assist you, we have provided you with a module called `fitness_calculator`
that contains four functions:

  * calculate_waist_score
  * calculate_pushup_score
  * calculate_situp_score
  * calculate_run_score



Each function takes a single number as a parameter, and **returns** the score
for that category. For example, to get the score for an Airman who did 45
pushups, you could import the module and call it, as follows:

    
    
    pushup_score = fitness_calculator.calculate_pushup_score(45)



To get a single Airman's total score, simply calculate the score for each
category and add them up.

    
    
    score = waist_score + pushup_score + situp_score + run_score



**EXAMPLES:**

If, for example, the number of unsatisfactory scores is 10, your program
should print:

    
    
    **10**

*** Your answer will be different.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import fitness_calculator

# Open the file
with open('afpft_v2.csv', 'r') as file:

    # initialize your counter
    unsatisfactory_scores = 0

    # read through each line
    for line in file:

        # split the values and convert them to int
        sit_ups, push_ups, waist, run_time = map(int, line.split(','))

        # calculate the scores
        sit_ups_score = fitness_calculator.calculate_situp_score(sit_ups)
        push_ups_score = fitness_calculator.calculate_pushup_score(push_ups)
        waist_score = fitness_calculator.calculate_waist_score(waist)
        run_time_score = fitness_calculator.calculate_run_score(run_time)

        # sum up the scores
        total_score = sit_ups_score + push_ups_score + waist_score + run_time_score

        # if the score is unsatisfactory, increment your counter
        if total_score < 75:
            unsatisfactory_scores += 1

    # print the number of unsatisfactory scores
    print(unsatisfactory_scores)
"
130,a4_7_fit_e,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `afpft_v1.csv` that describes how
various Air Force personnel performed on their most recent fitness test. Do
NOT ask the user for the file name--just open and read this specific file.
Here is a typical line from the dataset (each line ends with the newline ""\n""
character):



`38, 52, 29, 568`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:  
  

  | Waist  
(inches) | Push Ups  
(Reps) | Sit Ups  
(Reps) | 1.5 Mile Run Time  
(seconds)  
---|---|---|---|---  
Value | 38 | 52 | 29 | 568  
  


**Write a Python program that analyzes this file and prints the # of excellent
(90 or higher) scores.**



To assist you, we have provided you with a module called `fitness_calculator`
that contains four functions:

  * calculate_waist_score
  * calculate_pushup_score
  * calculate_situp_score
  * calculate_run_score



Each function takes a single number as a parameter, and **returns** the score
for that category. For example, to get the score for an Airman who did 45
pushups, you could import the module and call it, as follows:

    
    
    pushup_score = fitness_calculator.calculate_pushup_score(45)



To get a single Airman's total score, simply calculate the score for each
category and add them up.

    
    
    score = waist_score + pushup_score + situp_score + run_score



**EXAMPLES:**

If, for example, the number of excellent scores is 4, your program should
print:

    
    
    **4  
    **

*** Your answers will be different.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import fitness_calculator

file = open('afpft_v1.csv', 'r')

excellent_scores = 0

for line in file:
    data = line.strip().split(',')
    waist_score = fitness_calculator.calculate_waist_score(int(data[0]))
    pushup_score = fitness_calculator.calculate_pushup_score(int(data[1]))
    situp_score = fitness_calculator.calculate_situp_score(int(data[2]))
    run_score = fitness_calculator.calculate_run_score(int(data[3]))

    total_score = waist_score + pushup_score + situp_score + run_score
    if total_score >= 90:
        excellent_scores += 1

print(excellent_scores)
"
131,a4_6_scores,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:**

You have been asked to write a program to assess student's performance on a
recent test. Write a Python program that asks the user to repeatedly type in
the name of a cadet, followed by their test score (between 0 and 100) until
the user types the word ""DONE"". Your program then analyze the values and
print:

  * The highest overall test score (just score, not the name)
  * The names of all cadets who scored within 10 points of the highest score. 
    * Comparison to the target score should be exclusive.
    * The names should be output in the same order of input.



**EXAMPLES:**

  | **Example 1**  
---|---  
**Input(s)** | Paul  
95  
Andrew  
86  
Joel  
57  
DONE  
**Output(s)** | 95  
Paul  
Andrew



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
cadets = {}
highest_score = 0

while True:
    name = input()
    if name == 'DONE':
        break
    score = int(input())
    cadets[name] = score
    if score > highest_score:
        highest_score = score

print(highest_score)

for name, score in cadets.items():
    if highest_score - score < 10:
        print(name)
"
132,a4_6_flighthours,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:**

You have been asked to write a program to get flying hours from a squadron of
pilots for the month. Write a Python program that asks the user to repeatedly
type in the name of a pilot, followed by their flying hours until the user
types the word ""DONE"". Your program then analyze the values and print:

  * The average number of flying hours (as a whole number)
  * The names of all pilots who flew less than the average number of flight hours. 
    * Comparison to the average should be exclusive.
    * Names should be output in the same order as input



**EXAMPLES:**

  | **Example 1**  
---|---  
**Input(s)** | Polo  
95  
Renegade  
78  
Headphones  
70  
DONE  
**Output(s)** |

81  
Renegade  
Headphones



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
pilot_list = []
hours_list = []

while True:
    name = input()
    if name == ""DONE"":
        break
    hours = int(input())
    pilot_list.append(name)
    hours_list.append(hours)

average = sum(hours_list)//len(hours_list)
print(average)

for i in range(len(pilot_list)):
    if hours_list[i] < average:
        print(pilot_list[i])
"
133,a4_6_aft,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:**

You have been asked to write a program to assess student's performance on the
AFT. Write a Python program that asks the user to repeatedly type in the name
of a cadet, followed by their run time (in whole seconds) until the user types
the word ""DONE"". Your program then analyze the values and print:

  * The fastest (lowest) AFT time.
  * The names of all cadets who were within 30 seconds of the fastest time. 
    * Comparison to the target time should be exclusive.
    * Names should be output in the same order as input



**EXAMPLES:**

  | **Example 1**  
---|---  
**Input(s)** | Paul  
545  
Andrew  
661  
Joel  
575  
DONE  
**Output(s)** | 545  
Paul  
Joel



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
cadets = {}
fastest_time = float('inf')

while True:
    cadet_name = input().strip()
    
    if cadet_name == ""DONE"":
        break
    
    time = int(input().strip())
    
    if time < fastest_time:
        fastest_time = time

    cadets[cadet_name] = time

print(fastest_time)
for name, time in cadets.items():
    if fastest_time < time <= fastest_time + 30:
        print(name)
"
134,a4_5_translate,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:**

Write a function called get_english_word that **returns** the English
translation for a Spanish word. Your function will take the following two
parameters:

  1. The spanish word (e.g., ""Hola"").
  2. A dictionary containing a list of Spanish / English pairs. 

Here is an example of what the dictionary might look like:



**Key** | **Value**  
---|---  
Hola | Hello  
Adios | Goodbye  
Aeronave | Aircraft  
  


Your function should **return** the English translation of the Spanish word
contained within the dictionary.



**HINT:**

Using parameters and return with functions is in the Lessons 11/12 block on
your Python Quick Reference guide.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def get_english_word(spanish_word, dictionary):
    try:
        return dictionary[spanish_word]
    except KeyError:
        return 'No translation found'
"
135,a4_5_password,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:**

Write a function called get_password that **returns** the password for a
specified website. Your function will take the following two parameters in
this order:

  1. The website (e.g., ""Amazon"").
  2. A dictionary containing a list of website/password pairs. 

Here is an example of what the dictionary might look like:



**Key** | **Value**  
---|---  
Amazon | password1234  
Facebook | aardvark  
Twitter | AirPower!  
  


Your function should return the password of the website contained within the
dictionary.



**HINT:**

Using parameters and **return** with functions is in the Lessons 11/12 block
on your Python Quick Reference guide.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def get_password(website, password_dict):
    return password_dict[website]
"
136,a4_5_areacode,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:**

Write a function called get_area_code that **returns** the area code for a
specific state. Your function will take the following two parameters in this
order:

  1. The name of the state (e.g., ""California"").
  2. A dictionary containing a list of State / Area Code Pairs. 

Here is an example of what the dictionary might look like:



**Key** | **Value**  
---|---  
California | 209  
Michigan | 234  
Colorado | 719  
  


Your function should **return** the area code for the specified state
contained within the dictionary.



**HINT:**

Using parameters and return with functions is in the Lessons 11/12 block on
your Python Quick Reference guide.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def get_area_code(state_name, area_code_pairs):
    return area_code_pairs[state_name]
"
137,a4_3_parks,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a table called `amusement_parks` that contains
information about various amusement parks in the United States. Logically, the
table can be represented as follows:



**Price Per Day** | **Name of Park** | **State**  
---|---|---  
$154.00 | Disneyland | California  
$169.34 | Disney World | Florida  
$79.99 | Great America | California  
$73.00 | Cedar Point | Ohio  
  


Write code that gets 1) the name of the park, 2) the state where the park is
located, and 3) the price of a single day of admission from the user. Your
program should then add a new row to the table containing these values.



HINT:

  * When you are creating your row, make sure you are adding the columns in the correct order!





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Get user input
park_name = input(""Enter the name of the park: "")
park_state = input(""Enter the state where the park is located: "")
park_price = input(""Enter the price of a single day of admission: "")

# Create new row
new_row = [park_price, park_name, park_state]

# Assume amusement_parks is a list of lists
amusement_parks.append(new_row)
"
138,a4_3_new_cars,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a table called `new_cars` that contains
information about various automobiles for sale in the United States.
Logically, the table can be represented as follows:



**Unit Price  ** | **Model Name** | **Make**  
---|---|---  
$26,660 | Bronco | Ford  
$36,340 | 4Runner | Toyota  
$68,199.99 | Q8 | Audi  
$48,475 | Silverado | Chevrolet  
  


Write code that gets 1) Model Name of the car, 2) Make, and 3) the unit price.
Your program should then add a new row to the table containing these values.



HINT:

  * When you are creating your row, make sure you are adding the columns in the correct order!



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# defining the table
new_cars = [
    [26660.00, 'Bronco', 'Ford'],
    [36340.00, '4Runner', 'Toyota'],
    [68199.99, 'Q8', 'Audi'],
    [48475.00, 'Silverado', 'Chevrolet']
]

# get the inputs from the user
unit_price = float(input(""Enter the unit price of the car: ""))
model_name = input(""Enter the model name of the car: "")
make = input(""Enter the make of the car: "")

# add a new row in the table
new_cars.append([unit_price, model_name, make])
"
139,a4_3_aircraft,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a table called `usaf_aircraft` that contains
information about various aircraft in the United States Air Force inventory.
Logically, the table can be represented as follows:



**Unit Price in Millions** | **Aircraft Name** | **Manufacturer**  
---|---|---  
$218 | C-17 Globemaster | Boeing  
$14.6 | F-16 Falcon | General Dynamics  
$16.9 | MQ-9 Reaper | General Atomics  
$737 | B-2 Spirit | Northrop Grumman  
  


Write code that gets 1) Name of the Aircraft, 2) Manufacturer, and 3) the unit
price in millions. Your program should then add a new row to the table
containing these values.



HINT:

  * When you are creating your row, make sure you are adding the columns in the correct order!



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code

class Aircraft:
 
    usaf_aircraft = [
        {'Unit Price in Millions': 218, 'Aircraft Name': 'C-17 Globemaster', 'Manufacturer': 'Boeing'}, 
        {'Unit Price in Millions': 14.6, 'Aircraft Name': 'F-16 Falcon', 'Manufacturer': 'General Dynamics'},
        {'Unit Price in Millions': 16.9, 'Aircraft Name': 'MQ-9 Reaper', 'Manufacturer': 'General Atomics'},
        {'Unit Price in Millions': 737, 'Aircraft Name': 'B-2 Spirit', 'Manufacturer': 'Northrop Grumman'}
    ]

    def add_aircraft(self, unit_price, name, manufacturer):
        self.usaf_aircraft.append({'Unit Price in Millions': unit_price, 'Aircraft Name': name, 'Manufacturer': manufacturer})

aircraft = Aircraft()

# This step adds new row to the table
aircraft.add_aircraft(150, 'F-22 Raptor', 'Lockheed Martin')

"
140,a4_2_sickness,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Body temperature (in Fahrenheit)
  * Body aches (a string, which will be either ""yes"" or ""no"")
  * Loss of smell (a string, which will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine a person's
risk of having an infectious disease:

  1. If the person's temperature is above 100.4 degrees, print ""High Risk""
  2. If the person is experiencing both body aches and loss of smell, print ""High Risk""
  3. For all other situations, print ""Low Risk""



**EXAMPLE:  
**

  | **Example 1** | **Example 2**  
---|---|---  
Input |

99.0  
yes  
yes  
  

| 100.4  
no  
yes  
Output | High Risk | Low Risk  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
#Provided code
body_temp = float(input(""Enter body temperature: ""))
body_aches = input(""Experiencing body aches (yes/no): "")
loss_of_smell = input(""Experiencing loss of smell (yes/no): "")

#Your code here

if body_temp > 100.4 or (body_aches == ""yes"" and loss_of_smell == ""yes""):
    print(""High Risk"")
else:
    print(""Low Risk"")
"
141,a4_2_pt,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Outside Temperature (in Fahrenheit)
  * Lightning within 5?(a string, which will be either ""yes"" or ""no"")
  * Winds over 20 knots? (a string, which will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine if PT is
cancelled or a go:

  1. If the outside temperature is above 90 degrees, print ""PT Cancelled""
  2. If there is lightning within 5 or winds over 20 knots print ""PT Cancelled""
  3. For all other situations, print ""PT is a Go""



**EXAMPLE:  
**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
Input |

99.0  
no  
no  
  

| 85  
no  
yes |

85

no

no  
  
Output | PT Cancelled | PT Cancelled | PT is a Go  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
outside_temperature = float(input())
lightning_with_in_5 = input()
winds_over_20_knots = input()

if outside_temperature > 90:
    print(""PT Cancelled"")
elif lightning_with_in_5 == ""yes"" or winds_over_20_knots == ""yes"":
    print(""PT Cancelled"")
else:
    print(""PT is a Go"")
"
142,a4_2_dog,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Outside Temperature (in Fahrenheit)
  * Is it raining? (a string that will be either ""yes"" or ""no"")
  * Is it daytime? (a string that will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine if the dog
is outside:

  1. If the outside temperature is above 85 degrees, print ""Dog Inside""
  2. If it is raining outside print ""Dog Inside""
  3. If it is NOT daytime, print ""Dog Inside""
  4. For all other situations, print ""Dog Outside""



**EXAMPLE:  
**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
Input |

99.0  
no  
yes  
  

| 80  
yes  
yes |

75

no

yes  
  
Output | Dog Inside | Dog Inside | Dog Outside  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# get user input
temp = float(input(""What is the outside temperature? ""))
rain = input(""Is it raining? "").lower()
daytime = input(""Is it daytime? "").lower()

# process input and determine if dog is outside
if temp > 85:
    print(""Dog Inside"")
elif rain == ""yes"":
    print(""Dog Inside"")
elif daytime == ""no"":
    print(""Dog Inside"")
else:
    print(""Dog Outside"")
```
"
143,a4_1_lift,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Write a Python function that calculates the lift for an aircraft. You will
name your function `calculate_lift`, and it will have the following parameters
(in this order):

  * Lift coefficient
  * Density
  * Velocity
  * Area

Your function will **return** the lift, which can be computed using the
following equation:



![Principles of Flying](https://www.thaitechnics.com/fly/tg4/lift_equa.gif)



NOTE: You do NOT need to call the function.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_lift(lift_coefficient, density, velocity, area):
    return (lift_coefficient * density * (velocity**2) * area) / 2
"
144,a4_1_buoyancy,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Write a Python function that calculates the buoyancy force for an object. You
will name your function `calculate_buoyancy`, and it will have the following
parameters (in this order):

  * Submerged Volume
  * Density
  * Gravity

Our function will  **return**  the buoyancy force, which can be computed using
the following equation:

**Fb = Vs × D × g **where Fb is the buoyancy force, Vs is the submerged
volume, D is the density of the fluid the object is submerged in, and g is the
force of gravity.

NOTE: You do NOT need to call the function.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_buoyancy(Vs, D, g):
    return Vs * D * g
"
145,a4_1_area,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Write a Python function that calculates the area of a trapazoid. You will name
your function `calculate_area`, and it will have the following parameters (in
this order):

  * Side_A
  * Side_B
  * Height

Our function will  **return**  the area, which can be computed using the
following equation:

A = (a + b) h

NOTE: You do NOT need to call the function.







Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_area(side_a, side_b, height):
    return ((side_a + side_b) * height) / 2
"
146,a3_6_tests,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes scores of a recent
test given to a class. Write a program that gets from the user the number of
tests scored, and gets that many test scores (which you may assume are whole
numbers) from the user. Your program must print out:

  * The average score of all tests.
  * The count of tests that scored lower than the average.



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
75  
90  
88  
  
  
| 5  
86  
79  
90  
90  
100  
**Output** | 84.3  
1 | 89.0  
2  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Here is the python code based on the given skeleton:

```python
num_tests = int(input(""Enter the number of tests: ""))
tests = []

for i in range(num_tests):
    score = int(input(""Enter score for test #""+str(i+1)+"": ""))
    tests.append(score)

average = sum(tests) / num_tests

count = 0
for test in tests:
    if test < average:
        count += 1

print(average)
print(count)
```
This code first takes the number of tests from the user and creates an empty list `tests` to store all test scores. It then runs a loop for the number of times provided by the user and continues asking for test scores until the given number is reached. 

In this code, `num_tests` is the total number of tests and `tests` is a list storing all test scores. 

The average is then calculated by summing all the test scores and dividing by the total number of tests.

After the average is calculated, the code runs another loop and checks each test score. If the score is less than the average, it increments a counter `count`.

Finally, the program prints out the average score and the count of tests that scored below average."
147,a3_6_sami,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes the cadet wing's
performance on a recent SAMI. Write a program that gets from the user the
number of squadrons scored, and gets that many squadron SAMI scores (which you
may assume are whole numbers) from the user. Your program must print out:

  * The average score of all squadrons.
  * The count of squadrons that scored higher than the average.



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
75  
90  
88  
  
  
| 5  
86  
79  
90  
90  
100  
**Output** | 84.3  
2 | 89.0  
3  
  






Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_squadrons = int(input())

sami_scores = []
for _ in range(num_squadrons):
    sami_scores.append(int(input()))

avg_score = sum(sami_scores) / num_squadrons

above_avg_squadrons = [score for score in sami_scores if score > avg_score]

print(avg_score)
print(len(above_avg_squadrons))
"
148,a3_6_pushups,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes number of pushups done
by a group of cadets. Write a program that gets from the user the number of
people tested, and gets that many pushup scores (which you may assume are
whole numbers) from the user. Your program must print out:

  * The average number of pushups for the group.
  * The count of cadets that scored higher than the average.



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
75  
90  
88  
  
  
| 5  
86  
79  
90  
90  
100  
**Output** | 84.3  
2 | 89.0  
3  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code
def main():
    # Get the number of people tested
    num_people = int(input())
    # Initialize a list to hold the scores
    scores = []
    # Loop through and get each individual's score
    for i in range(num_people):
        scores.append(int(input()))
    # Calculate the average
    average = sum(scores) / num_people
    # Print out the average
    print(average)
    # Use list comprehension to get the count of individuals with scores above the average
    above_average = len([i for i in scores if i > average])
    # Print out the count of scores above average
    print(above_average)

# Call the function
if __name__==""__main__"":
    main()
"
149,a3_6_missiletest,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes the results acquired
from several missile tests executed last week. Write a program that gets from
the user the number missile tests preformed, and gets the result from each
test (which you may assume are whole numbers) from the user. Your program must
print out:

  * The average result for the missile tests.
  * The count of missile tests that scored above the average.



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
350  
410  
256  
  
  
| 5  
178  
98  
200  
200  
154  
**Output** | 338.7  
2 | 166.0  
3



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_tests = int(input())
results = []

for i in range(num_tests):
  test_result = int(input())
  results.append(test_result)

average = sum(results)/num_tests
above_average_tests = len([result for result in results if result > average])

print('%.1f' % average)
print(above_average_tests)
"
150,a3_6_flighttest,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes the results acquired
from several flight tests executed last week. Write a program that gets from
the user the number flight tests preformed, and gets the result from each
flight (which you may assume are whole numbers) from the user. Your program
must print out:

  * The average result for the flight tests.
  * The count of flight tests that scored below the average.



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
350  
410  
256  
  
  
| 5  
178  
98  
200  
200  
154  
**Output** | 338.7  
1 | 166.0  
2



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# get number of flights
num_flights = int(input())

# initialize a list to store flight scores
flights = []

# collect flight scores
for _ in range(num_flights):
  flights.append(int(input()))

# calculate average score
average = sum(flights) / num_flights
print('{:.1f}'.format(average)) 

# count the number of flights that scored below average
below_avg = sum([1 for flight in flights if flight < average])

print(below_avg)
"
151,a3_5_star_map,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a table that describes a simple night sky. In
this code, a list (`simple_map`) is populated with characters representing the
location of various astronomical entities (stars, planets, etc).



    
    
    S = Star; St = Satellite; M = Moon; P = Planet; C = Comet; _ = No Major Feature



Write a program that gets two values from the user in the following order:

1) a row, a 1 indicates the Top row and 8 the Bottom row

2) a column, a 1 indicates the Leftmost column and 8 the Rightmost column



Finally, **Print** out the contents of the table at that particular cell.



**HINT:**

  * Your output should be one of the following letters: ""S"", ""St"", ""M"", ""P"", ""C"", or ""_""



Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 5
# --------------------------------------------------------------
#DO NOT TOUCH THIS LIST!
star_map = [['M', 'C', '_', '_', '_', '_', 'M', 'P'],
              ['S', 'M', '_', '_', 'P', 'M', 'St', 'St'],
              ['C', '_', '_', 'P', 'M', 'M', 'S', 'M'],
              ['C', 'C', '_', 'C', '_', 'S', '_', 'P'],
              ['M', 'St', '_', 'St', '_', '_', 'P', 'S'],
              ['_', '_', '_', '_', '_', '_', '_', '_'],
              ['_', 'M', '_', '_', 'M', '_', '_', 'S'],
              ['_', '_', '_', '_', 'St', 'St', 'P', 'P']]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
star_map = [['M', 'C', '_', '_', '_', '_', 'M', 'P'],
            ['S', 'M', '_', '_', 'P', 'M', 'St', 'St'],
            ['C', '_', '_', 'P', 'M', 'M', 'S', 'M'],
            ['C', 'C', '_', 'C', '_', 'S', '_', 'P'],
            ['M', 'St', '_', 'St', '_', '_', 'P', 'S'],
            ['_', '_', '_', '_', '_', '_', '_', '_'],
            ['_', 'M', '_', '_', 'M', '_', '_', 'S'],
            ['_', '_', '_', '_', 'St', 'St', 'P', 'P']]

row = int(input(""Enter a row between 1 and 8: "")) - 1
col = int(input(""Enter a column between 1 and 8: "")) - 1

print(star_map[row][col])
"
152,a3_5_map,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a table that describes a simple landscape. In
this code, a list (`simple_map`) is populated with characters representing the
location of various landmarks (Road, Water, Trees, Stones, Mud).



    
    
    R = Road; W = Water; T = Trees; S = Stones; M = Mud; _ = Grass



Write a program that gets two values from the user in the following order:

1) a row, a 1 indicates the Top row and 8 the Bottom row

2) a column, a 1 indicates the Leftmost column and 8 the Rightmost column



Finally,  **Print  **out the contents of the table at that particular cell.



**HINT:**

  * Your output should be one of the following letters: ""R"", ""W"", ""T"", ""S"", ""M"", or ""_""



Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 5
# --------------------------------------------------------------
#DO NOT TOUCH THIS LIST!
simple_map = [['_', 'T', '_', '_', '_', 'R', '_', '_'],
                    ['_', '_', 'T', 'S', 'B', 'R', '_', '_'],
                    ['W', '_', '_', '_', '_', '_', 'R', '_'],
                    ['W', 'W', 'S', '_', '_', 'B', '_', '_'],
                    ['W', '_', '_', 'S', '_', '_', 'B', 'R'],
                    ['_', '_', '_', '_', '_', 'T', '_', '_'],
                    ['_', '_', '_', '_', '_', '_', 'T', '_'],
                    ['R', 'R', 'R', 'R', 'R', '_', '_', '_']]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
simple_map = [['_', 'T', '_', '_', '_', 'R', '_', '_'],
              ['_', '_', 'T', 'S', 'B', 'R', '_', '_'],
              ['W', '_', '_', '_', '_', '_', 'R', '_'],
              ['W', 'W', 'S', '_', '_', 'B', '_', '_'],
              ['W', '_', '_', 'S', '_', '_', 'B', 'R'],
              ['_', '_', '_', '_', '_', 'T', '_', '_'],
              ['_', '_', '_', '_', '_', '_', 'T', '_'],
              ['R', 'R', 'R', 'R', 'R', '_', '_', '_']]

row = int(input(""Enter the row you want to check (1 to 8): "")) - 1
column = int(input(""Enter the column you want to check (1 to 8): "")) - 1

print(simple_map[row][column])
```
I hope this is helpful. In this code, you are substracting ""1"" from the user input to account for the fact that python lists are 0-indexed. For example, the first row is indexed as 0, the second as 1, the third as 2 so on and so forth. Similarly for the columns."
153,a3_5_chess,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a table that describes a chess board. In this
code, a list (`chess_board`) is populated with characters representing the
location of each of the pieces(Rook, Knight, Bishop,King,Queen,Pawn).



    
    
    R = Rook; N = Knight; B = Bishop; K = King; Q = Queen; P = pawn; _ = Empty



Write a program that gets two values from the user in the following order:

1) a row, a 1 indicates the Top row and 8 the Bottom row

2) a column, a 1 indicates the Leftmost column and 8 the Rightmost column



Finally,  **Print  **out the contents of the table at that particular cell.



**HINT:**

  * Your output should be one of the following letters: ""R"", ""N"", ""B"", ""K"", ""Q"", ""P"", or ""_""



Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 5
# --------------------------------------------------------------
#DO NOT TOUCH THIS LIST!
chess_board =      [['R', 'N', '_', 'K', '_', 'B', 'N', 'R'],
                    ['p', 'p', 'p', '_', 'p', 'p', 'p', 'p'],
                    ['_', '_', 'Q', '_', '_', '_', '_', '_'],
                    ['_', '_', '_', 'p', '_', 'B', '_', '_'],
                    ['_', '_', '_', 'p', '_', '_', '_', '_'],
                    ['_', '_', '_', '_', 'p', '_', '_', '_'],
                    ['p', 'p', 'p', '_', '_', 'p', 'p', 'p'],
                    ['R', 'N', 'B', 'K', 'Q', 'B', 'N', 'R']]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
#DO NOT TOUCH THIS LIST!
chess_board =      [['R', 'N', '_', 'K', '_', 'B', 'N', 'R'],
                    ['P', 'P', 'P', '_', 'P', 'P', 'P', 'P'],
                    ['_', '_', 'Q', '_', '_', '_', '_', '_'],
                    ['_', '_', '_', 'P', '_', 'B', '_', '_'],
                    ['_', '_', '_', 'P', '_', '_', '_', '_'],
                    ['_', '_', '_', '_', 'P', '_', '_', '_'],
                    ['P', 'P', 'P', '_', '_', 'P', 'P', 'P'],
                    ['R', 'N', 'B', 'K', 'Q', 'B', 'N', 'R']]

#Your code goes here.
row = int(input(""Enter row: ""))
column = int(input(""Enter column: ""))

print(chess_board[row-1][column-1])
"
154,a3_5_carnival,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a table that describes a simple carnival ring
toss. In this code, a list (`simple_map`) is populated with characters
representing the colors of the bottles.



    
    
    G = Green; B = Blue; P = Purple; R = Red; O = Orange; _ = Clear



Write a program that gets two values from the user in the following order:

1) a row, a 1 indicates the Top row and 8 the Bottom row

2) a column, a 1 indicates the Leftmost column and 8 the Rightmost column



Finally,  **Print  **out the contents of the table at that particular cell.



**HINT:**

  * Your output should be one of the following letters: ""G"", ""B"", ""P"", ""R"", ""O"", or ""_""



Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 5
# --------------------------------------------------------------
#DO NOT TOUCH THIS LIST!
simple_map = [['O', '_', '_', 'P', '_', 'R', '_', 'G'],
              ['R', 'O', '_', '_', '_', 'P', '_', '_'],
              ['_', '_', 'O', '_', '_', 'O', 'P', '_'],
              ['R', '_', 'G', '_', '_', '_', '_', 'P'],
              ['B', '_', '_', '_', '_', '_', '_', 'P'],
              ['G', 'R', 'P', 'O', 'O', '_', '_', 'G'],
              ['P', '_', '_', '_', '_', 'G', 'B', '_'],
              ['B', 'R', 'G', 'B', '_', 'G', 'B', 'G']]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
simple_map = [['O', '_', '_', 'P', '_', 'R', '_', 'G'],
              ['R', 'O', '_', '_', '_', 'P', '_', '_'],
              ['_', '_', 'O', '_', '_', 'O', 'P', '_'],
              ['R', '_', 'G', '_', '_', '_', '_', 'P'],
              ['B', '_', '_', '_', '_', '_', '_', 'P'],
              ['G', 'R', 'P', 'O', 'O', '_', '_', 'G'],
              ['P', '_', '_', '_', '_', 'G', 'B', '_'],
              ['B', 'R', 'G', 'B', '_', 'G', 'B', 'G']]

row = int(input(""Enter row number (1 to 8): "")) - 1
column = int(input(""Enter column number (1 to 8): "")) - 1

print(simple_map[row][column])
"
155,a3_5_battleship,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a table that describes the board game,
Battleship. In this code, a list (`battleship_board`) is populated with
characters representing the location of each of the game's ship types
(Carrier, Battleship, Submarine, Cruiser, and Destroyer).



    
    
    C = Carrier; B = Battleship; S = Submarine; R = Cruiser; D = Destroyer; _ = Blank



Write a program that gets two values from the user in the following order:

1) a row, a 1 indicates the Top row and 8 the Bottom row

2) a column, a 1 indicates the Leftmost column and 8 the Rightmost column



Finally,  **Print  **out the contents of the table at that particular cell.



**HINT:**

  * Your output should be one of the following letters: ""C"", ""B"", ""S"", ""R"", ""D"", or ""_""



Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 5
# --------------------------------------------------------------
#DO NOT TOUCH THIS LIST!
battleship_board = [['_', '_', 'C', '_', '_', '_', '_', '_'],
                    ['_', '_', 'C', 'S', 'S', 'S', '_', '_'],
                    ['D', 'D', 'C', '_', '_', '_', '_', '_'],
                    ['_', '_', 'C', '_', '_', '_', '_', '_'],
                    ['_', '_', '_', '_', '_', 'R', 'R', 'R'],
                    ['_', '_', '_', '_', '_', '_', '_', '_'],
                    ['_', '_', '_', '_', '_', '_', '_', '_'],
                    ['_', 'B', 'B', 'B', 'B', '_', '_', '_']]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
#DO NOT TOUCH THIS LIST!
battleship_board = [['_', '_', 'C', '_', '_', '_', '_', '_'],
                    ['_', '_', 'C', 'S', 'S', 'S', '_', '_'],
                    ['D', 'D', 'C', '_', '_', '_', '_', '_'],
                    ['_', '_', 'C', '_', '_', '_', '_', '_'],
                    ['_', '_', '_', '_', '_', 'R', 'R', 'R'],
                    ['_', '_', '_', '_', '_', '_', '_', '_'],
                    ['_', '_', '_', '_', '_', '_', '_', '_'],
                    ['_', 'B', 'B', 'B', 'B', '_', '_', '_']]

#Your code goes here.

row = int(input(""Enter a row (1-8):""))-1
col = int(input(""Enter a column (1-8):""))-1

print(battleship_board[row][col])
"
156,a3_4_weights,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_weights. Write a program
that prints out the range ( _i.e.,  _the difference between the max and min
weight)



**EXAMPLE:  
** If, for example, the list contained the values: 103, 110, 115

Your program should print:

    
    
    12





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def weight_range(list_of_weights):
  print(max(list_of_weights) - min(list_of_weights))

weight_range([103, 110, 115])
"
157,a3_4_run,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_run_times. Write a
program that prints out the range ( _i.e.,  _the difference between the max
and min run time)



**EXAMPLE:  
** If, for example, the list contained the values: 3, 10, 15

Your program should print:

    
    
    12





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def find_range(list_of_run_times):
    # compute the max and min from the list
    max_run_time = max(list_of_run_times)
    min_run_time = min(list_of_run_times)
    # compute and print the difference
    range_run_time = max_run_time - min_run_time
    print(range_run_time)

# example usage
find_range([3, 10, 15])
"
158,a3_4_ptscores,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_pt_scores. Write a
program that prints out the range ( _i.e.,  _the difference between the max
and min pt scores)



**EXAMPLE:  
** If, for example, the list contained the values: 3, 10, 15

Your program should print:

    
    
    12





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_pt_scores = [3, 10, 15]

pt_scores_range = max(list_of_pt_scores) - min(list_of_pt_scores)

print(pt_scores_range)
"
159,a3_4_ages,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_ages. Write a program
that prints out the range ( _i.e.,  _the difference between the max and min
ages)



**EXAMPLE:  
** If, for example, the list contained the values: 50, 64, 72

Your program should print:

    
    
    22





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Here is your code based on the provided skeleton:

"
160,a3_3_ships,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_ship_classes`. Write a
program that prints out each of the items in this list (one item per line).



**EXAMPLE:  
** If, for example, the list contained the items: ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task. 





Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_ship_classes = ['Ford', 'Ticonderoga', 'Arleigh Burke', 'Virginia', 'Zumwalt', 'REDACTED_NAME', 'Legend']

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_ship_classes = ['Ford', 'Ticonderoga', 'Arleigh Burke', 'Virginia', 'Zumwalt', 'REDACTED_NAME', 'Legend']

for item in list_of_ship_classes:
  print(item)
"
161,a3_3_pizza,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_pizza_toppings`. Write a
program that prints out each of the items in this list (one item per line).



**EXAMPLE:  
** If, for example, the list contained the items: ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task. 



Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_pizza_toppings = ['Pepporoni', 'Sausage', 'Onion', 'Mushroom', 'Peppers', 'Chicken', 'Hamburger']

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_pizza_toppings = ['Pepporoni', 'Sausage', 'Onion', 'Mushroom', 'Peppers', 'Chicken', 'Hamburger']

#Your code goes here.
for topping in list_of_pizza_toppings:
    print(topping)
"
162,a3_3_aircraft,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_aircraft_classes`. Write
a program that prints out each of the items in this list (one item per line).



**EXAMPLE:  
** If, for example, the list contained the items: ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task. 



Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_aircraft_classes = ['Attack','Cargo','Drone', 'Fighter', 'Unmanned','Trainer','Tanker']

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_aircraft_classes = ['Attack','Cargo','Drone', 'Fighter', 'Unmanned','Trainer','Tanker']

for aircraft in list_of_aircraft_classes:
    print(aircraft)
```
"
163,a3_2_jets,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_aircraft`. Write a program
that gets two aircraft designator names from the user. Then append the
aircraft (in the same order they were provided) to the list.



**NOTE:**

  * Do not touch the code we provide you. Otherwise, the test cases will not work.





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_aircraft = [""Boeing 747"", ""Airbus A320"", ""Embraer 190""] 

# Complete the function below.
def append_aircrafts():
    # Add your code here
    aircraft1 = input(""Enter the first Aircraft Name: "")
    aircraft2 = input(""Enter the second Aircraft Name: "")
    list_of_aircraft.append(aircraft1)
    list_of_aircraft.append(aircraft2)

append_aircrafts()
"
164,a3_2_grammys,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with a list called `grammy_list`. Write a program that
gets two new Grammy awards categories from the user. Then append the
categories (in the same order they were provided) to the list.



**NOTE:**

  * Do not touch the code we provide you. Otherwise, the test cases will not work.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
grammy_list = [""Best New Artist"", ""Record Of The Year"", ""Song Of The Year"", ""Album Of The Year""]

# Get the new Grammy awards categories from the user
new_category1 = input(""Enter first new Grammy Category: "")
new_category2 = input(""Enter second new Grammy Category: "")

# Append them to the list
grammy_list.append(new_category1)
grammy_list.append(new_category2)
"
165,a3_2_departments,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with a list called `department_list`. Write a program
that gets two new departments from the user. Then append the departments (in
the same order they were provided) to the list.



**NOTE:**

  * Do not touch the code we provide you. Otherwise, the test cases will not work.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
department_list = ['Math', 'CS', 'Physics', 'Chemistry']

department1 = input(""Enter first department: "")
department2 = input(""Enter second department: "")

department_list.append(department1)
department_list.append(department2)
"
166,a3_2_cities,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_cities`. Write a program
that gets two new cities from the user. Then append the cities (in the same
order they were provided) to the list.



**NOTE:**

  * Do not touch the code we provide you. Otherwise, the test cases will not work.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
167,a3_2_cars,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_cars`. Write a program that
gets two new cars from the user. Then append the cars (in the same order they
were provided) to the list.



**NOTE:**

  * Do not touch the code we provide you. Otherwise, the test cases will not work.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_cars = ['Audi', 'BMW', 'Lamborghini', 'Ferrari']

# get two new cars from the user
first_new_car = input(""Please enter the name of the first new car: "")
second_new_car = input(""Please enter the name of the second new car: "")

# append the cars to the list
list_of_cars.append(first_new_car)
list_of_cars.append(second_new_car)
"
168,a3_1_medals,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_medals` that contains the
current Air Force and Space Force approved decorations. Write a program that
prints a single, specified decoration from the list. Your program shall take a
number via user input used to identify which decoration to print. For example,
if the user types a 3, you should print out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_medals = ['Medal1', 'Medal2', 'Medal3', 'Medal4', 'Medal5']

num = int(input('Enter a number: '))

print(list_of_medals[num-1])
"
169,a3_1_countries,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_coalition_countries`. Write
a program that prints a single, specified country from the list. Your program
shall take a number via user input used to identify which country to print.
For example, if the user types a 3, you should print out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_coalition_countries = [""Australia"",""Azerbaijan"",""Bahrain"",""Bangladesh"",""Bulgaria"",""Canada"",""Czech Republic""]

def print_country(index):
    print(list_of_coalition_countries[index])

index = int(input(""Enter an index (note: python indexing starts from 0): ""))
print_country(index-1)
"
170,a3_1_commands,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_usaf_commands`. Write a
program that prints a single, specified command organization from the list.
Your program shall take a number via user input used to identify which command
organization to print. For example, if the user types a 3, you should print
out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_usaf_commands = ['Air Combat Command', 'Air Mobility Command', 'Air Education and Training Command', 'Air Force Material Command', 'Air Force Space Command']

index = int(input(""Please enter the index of the command organization you want to print: "")) - 1
print(list_of_usaf_commands[index])
"
171,a3_1_afbs,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_bases`. Write a program
that prints a single, specified base from the list. Your program shall take a
number via user input used to identify which base to print. For example, if
the user types a 3, you should print out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_bases = [""BaseA"", ""BaseB"", ""BaseC"", ""BaseD""]

# Input from user
user_index = int(input(""Enter index: ""))

# Since the indexing in python starts from 0, we will subtract 1 from user provided index
print(list_of_bases[user_index - 1])
"
172,a2_6_virus,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You are writing a program that will help you decide if there are too many
people at a restaurant for you to dine safely. Your program will ask for the
number of people in the restaurant. It will then ask for the distance between
yourself and each of the people (in feet, which do not have to be whole
numbers). Your program will keep track of how many people are within 6 feet of
you (inclusive). Your program will then print one of the following statements:

**# of People within 6 Feet** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | All Clear | Warning | Find Another Place  
  


**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** | 3  
5.7  
10.2  
12.4 | 2  
7.0  
15.1  
**OUTPUT** | Warning | All Clear



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def dining_counter(number, distances):
    count = 0
    for i in distances:
        if i <= 6:
            count += 1
    if count > 2:
        return ""Find Another Place""
    elif count > 0:
        return ""Warning""
    else:
        return ""All Clear""
"
173,a2_6_traffic_lights,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

The City Manager is having a traffic problem and asked you are to write a
program that will determine whether or not to activate a newly installed
alternate traffic light schedule to help alleviate traffic throughout the city
during peak traffic hours. Your program will ask for the number of traffic
""time periods"" to analyze. It will then ask for the traffic throughput (in
average number of cars per minute, which does not have to be a whole number)
for each ""time period"". Your program will keep track of how many ""time
periods"" are considered heavy traffic, as defined as 15 cars per minutes or
more (inclusive). Your program will then print one of the following
statements:

**# of ""time periods"" of heavy traffic** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | Regular Schedule | Prepare Activation | Activate New Schedule  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

12.8

15.0

6.7

|

3

17.3

15.1

19.2  
  
**OUTPUT** | Prepare Activation | Activate New Schedule



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
n = int(input())
heavy_traffic_periods = 0

for i in range(n):
    cars_per_minute = float(input())
    if cars_per_minute >= 15.0:
        heavy_traffic_periods += 1

if heavy_traffic_periods == 0:
    print('Regular Schedule')
elif heavy_traffic_periods <= 2:
    print('Prepare Activation')
else:
    print('Activate New Schedule')
"
174,a2_6_network_traffic,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

The 10th Communications Squadron (10 CS) recently detected a higher volume of
network traffic on the base network. The 10 CS Director of Operations asked
you are to write a program that will determine whether or not to activate an
additional Network Load Balancer (NLB) to improve the network performance
during these peak loads. Your program will ask for the number of network
traffic ""snapshots"" to analyze. It will then ask for the network load (in
Gigabits per second (Gbps), which does not have to be a whole number) for each
""snapshot"". Your program will keep track of how many ""snapshots"" are
designated as high volume network traffic, defined as loads greater than 512
Gbps. Your program will then print one of the following statements:

**# of ""snapshots"" with high network traffic volume** | **0** | **1-2** | **>
2**  
---|---|---|---  
**Output** | Ops Normal | Initialize NLB | Activate NLB  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

512.0

738.5

199.6

|

3

498.6

372.9

512.0  
  
**OUTPUT** | Initialize NLB | Ops Normal



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def network_load_balancer():
    num_snapshots = int(input())
    high_volume_snapshots = 0

    for i in range(num_snapshots):
        load = float(input())
        
        if load > 512:
            high_volume_snapshots += 1

    if high_volume_snapshots == 0:
        print(""Ops Normal"")
    elif high_volume_snapshots > 2:
        print(""Activate NLB"")
    else:
        print(""Initialize NLB"")

network_load_balancer()
"
175,a2_6_grades,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You are writing a program that will help your instructors analyze student
performance on an exam. Your program will ask for the number of students in
the class. It will then ask for the grade of each student (this grade does not
have to be a whole number). Your program will keep track of how many students
received less than 70 on an assignment. Your program will then print one of
the following statements.



**# of scores below 70** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | Excellent | Satisfactory | Unsatisfactory  
  


**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**INPUT** |

4  
75.6  
80.2  
95.5  
71.0

|

3  
68.2  
72.9  
95.4

|

3  
67.0  
65.5  
68.3  
  
**OUTPUT** | Excellent | Satisfactory | Unsatisfactory  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
number_of_students = int(input())

less_than_70_count = 0
for _ in range(number_of_students):
    grade = float(input())
    if grade < 70:
        less_than_70_count += 1

if less_than_70_count == 0:
    print('Excellent')
elif less_than_70_count <= 2:
    print('Satisfactory')
else:
    print('Unsatisfactory')
"
176,a2_6_gameday,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

The Academy Athletic Director asked you are to write a program that will
determine whether or not a football game in progress should be delayed based
on current weather conditions. Your program will ask for the number of
lightning strikes occurred in the immediate area in the past thirty minutes.
It will then ask for the distance from Falcon Stadium to each lightning strike
(in miles, which do not have to be whole numbers). Your program will keep
track of how many lightning strikes are within 15 miles of the stadium
(inclusive). Your program will then print one of the following statements:

**# of lightning strikes in immediate area** | **0** | **1-3** | **> 3**  
---|---|---|---  
**Output** | All Clear | Weather Warning | Game Delay  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

4

15.0

13.2

6.5

9.8

|

3

17.8

15.1

19.0

  
  
**OUTPUT** | Game Delay | All Clear  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def should_game_be_delayed():
  number_of_lightning_strikes = int(input())
  strikes_within_15_miles = 0
  
  for i in range(number_of_lightning_strikes):
    distance = float(input())
    if distance <= 15:
      strikes_within_15_miles += 1
          
  if strikes_within_15_miles == 0:
    print(""All Clear"")
  elif 1 <= strikes_within_15_miles <= 3:
    print(""Weather Warning"")
  else:
    print(""Game Delay"")

should_game_be_delayed()
"
177,a2_6_combat,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You are writing a program that will determine whether or not a fighter pilot
will need to make an evasive action when enemy aircraft are near. Your program
will ask for the number of enemy planes in the area. It will then ask for the
distance between the pilot and each of the enemy planes (in miles, which do
not have to be whole numbers). Your program will keep track of how many enemy
planes are within 20 miles of the pilot (inclusive). Your program will then
print one of the following statements:

**# of Enemy Planes in Area** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | All Clear | Warning | Evasive Action  
  


**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

10.5

17.2

23.7

|

3

21.4

34.0

27.9  
  
**OUTPUT** | Warning | All Clear



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code
def evasiveAction():
  total_planes = int(input(""Enter the number of enemy planes in the area: ""))
  close_planes = 0
  for i in range(total_planes):
    distance = float(input(f""Enter the distance for plane {i+1}: ""))
    if distance <= 20:
      close_planes += 1
  if close_planes == 0:
    print(""All Clear"")
  elif close_planes <= 2:
    print(""Warning"")
  else:
    print(""Evasive Action"")

# Call the function
evasiveAction()
"
178,a2_4_slash,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with program that gets the following values from the
user:

  * **slash_separated_string** : A slash separated string  
Example: johnson81/4081/30no86/cj4081/Craig/Johnson/Depot/London  
  

  * **column_to_print** : A number representing the value to print from the slash separated string  
NOTE: 0 represents the first value in the slash separated string, 1 represents
the second, etc



Write a Python program that:

  1. Splits the **slash separated string**
  2. Prints the column_to_printth value.



**EXAMPLE:**

If the user types:

    
    
    johnson81/4081/30no86/cj4081/Craig/Johnson/Depot/London  
    2

Your program should then output:

    
    
    30no86





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
slash_separated_string = input(""Enter slash separated string: "")
column_to_print = int(input(""Enter the column to print: ""))

split_string = slash_separated_string.split('/')
print(split_string[column_to_print])
"
179,a2_4_semic,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with program that gets the following values from the
user:

  * **semicolon_separated_string** : A semicolon separated string  
Example: booker12;9012;12se74;rb9012;Rachel;Booker;Sales;Manchester  
  

  * **column_to_print** : A number representing the value to print from the semicolon separated string  
NOTE: 0 represents the first value in the semicolon separated string, 1
represents the second, etc



Write a Python program that:

  1. Splits the **semicolon separated string**
  2. Prints the column_to_printth value.



**EXAMPLE:**

If the user types:

    
    
    booker12;9012;12se74;rb9012;Rachel;Booker;Sales;Manchester  
    2

Your program should then output:

    
    
    12se74





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
semicolon_separated_string = input(""Enter your semicolon separated string: "")
column_to_print = int(input(""Enter the column number: ""))
splitted_values = semicolon_separated_string.split(';')
if column_to_print < len(splitted_values):
    print(splitted_values[column_to_print])
else:
    print(""Column number exceeds total columns in the string"") 
"
180,a2_4_dash,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with program that gets the following values from the
user:

  * **dash_separated_string** : A dash separated string  
Example: johnson81-4081-30no86-cj4081-Craig-Johnson-Depot-London  
  

  * **column_to_print** : A number representing the value to print from the dash separated string  
NOTE: 0 represents the first value in the dash separated string, 1 represents
the second, etc



Write a Python program that:

  1. Splits the **dash separated string**
  2. Prints the column_to_printth value.



**EXAMPLE:**

If the user types:

    
    
    johnson81-4081-30no86-cj4081-Craig-Johnson-Depot-London  
    2

Your program should then output:

    
    
    30no86





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# following is the skeleton code

def print_nth_value(dash_separated_string, column_to_print):
    # convert dash-separated string to list
    string_list = dash_separated_string.split('-')

    # print required value
    print(string_list[column_to_print])

dash_separated_string = input()
column_to_print = int(input())
print_nth_value(dash_separated_string, column_to_print)
"
181,a2_4_comma,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with program that gets the following values from the
user:

  * **comma_separated_string** : A comma separated string  
Example: booker12,9012,12se74,rb9012,Rachel,Booker,Sales,Manchester  
  

  * **column_to_print** : A number representing the value to print from the comma separated string  
NOTE: 0 represents the first value in the comma separated string, 1 represents
the second, etc



Write a Python program that:

  1. Splits the **comma separated** **string**
  2. Prints the column_to_printth value



**EXAMPLE:**

If the user types:

    
    
    booker12,9012,12se74,rb9012,Rachel,Booker,Sales,Manchester  
    2

Your program should then output:

    
    
    12se74





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# get comma separated string from user
comma_separated_string = input()

# get column_to_print from user
column_to_print = int(input())

# split the string
split_string = comma_separated_string.split(',')

# print the value at column_to_print index
print(split_string[column_to_print])
"
182,a2_4_colon,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with program that gets the following values from the
user:

  * **colon_separated_string** : A colon separated string  
Example: jones78:4273:24px47:kj4273:Karyl:Jones:Accounts:Essex  
  

  * **column_to_print** : A number representing the value to print from the colon separated string  
NOTE: 0 represents the first value in the colon separated string, 1 represents
the second, etc



Write a Python program that:

  1. Splits the **colon separated string**
  2. Prints the column_to_printth value.



**EXAMPLE:**

If the user types:

    
    
    jones78:4273:24px47:kj4273:Karyl:Jones:Accounts:Essex  
    2

Your program should then output:

    
    
    24px47





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
colon_separated_string = input()
column_to_print = int(input())

values = colon_separated_string.split(':')

print(values[column_to_print])
"
183,a2_3_twenty_one,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.

Write a program that prints all of the numbers between  **starting_number**
and  **0**  (inclusive), counting down by **21** each time.



For example, if the user types **85** , your program should print:

    
    
    85  
    64  
    43  
    22  
    1

Similarly, if the user types  **51** , your program should print:

    
    
    51  
    30  
    9  
      
    

You may assume that the user will only enter positive numbers.



**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# get the starting number from the user
starting_number = int(input(""Please enter a number: ""))

for i in range(starting_number, -1, -21):
    print(i)
"
184,a2_3_seventeen,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called **starting_number**.  

Write a program that prints all of the numbers between **starting_number** and
**0** (inclusive), counting down by **17** each time.



For example, if the user types **45** , your program should print:

    
    
    45  
    28  
    11

Similarly, if the user types **51** , your program should print:

    
    
    51  
    34  
    17  
    0

You may assume that the user will only enter positive numbers.



**HINT:**

  * This problem can be solved using either a **for** or **while** loop.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
starting_number = int(input(""Enter a number: ""))

for i in range(starting_number, -1, -17):
    print(i)
"
185,a2_3_fourty_two,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.

Write a program that prints all of the numbers between  **starting_number**
and  **0**  (inclusive), counting down by **42** each time.



For example, if the user types  **228** , your program should print:

    
    
    228  
    186  
    144  
    102  
    60  
    18

Similarly, if the user types **106** , your program should print:

    
    
    106  
    64  
    22

You may assume that the user will only enter positive numbers.



**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
starting_number = int(input())

while starting_number >= 0:
  print(starting_number)
  starting_number -= 42
"
186,a2_3_countdown,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.

Write a program that prints all of the numbers between  **starting_number**
and **0** (inclusive), counting down by **13** each time.



For example, if the user types **45** , your program should print:

    
    
    45  
    32  
    19  
    6

Similarly, if the user types **39** , your program should print:

    
    
    39  
    26  
    13  
    0

You may assume that the user will only enter positive numbers.



**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code
# starting_number = int(input(""Enter a number: ""))
while starting_number >= 0:
  print(starting_number)
  starting_number -= 13
"
187,a2_3_19,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.

Write a program that prints all of the numbers between  **starting_number**
and **0** (inclusive), counting down by **19** each time.



For example, if the user types **45** , your program should print:

    
    
    45  
    26  
    7

Similarly, if the user types **57** , your program should print:

    
    
    57  
    38  
    19  
    0  
      
    

You may assume that the user will only enter positive numbers.



**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
starting_number = int(input())
for i in range(starting_number, -1, -19):
    print(i)
"
188,a2_2_unladen,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

The airspeed velocity of an unladen swallow can be estimated using the
following formula:  
  

`SPEED = 3 * F * A`



In this formula:

  * **F** is the number of wing flaps per minute (integer)
  * **A** is the distance the wing travels (up and down) per wing flap (floating point number in meters)



Write a function called **speed_of_unladen_swallow** that takes **F** and
**A** as parameters (in that order), and **returns** the speed in meters per
minute.



**NOTES:**

  * You do NOT need to call this function. Simply define it.





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def speed_of_unladen_swallow(F, A):
    return 3 * F * A
"
189,a2_2_stride,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You can calculate a person's speed using the following formula:

`Speed = Stride * SPM * .011`



In this formula:

  * **Stride** in inches (float)
  * **SPM** is strides per minute (integer)



Write a function called **person_speed** that takes **Stride**  and **SPM**
as parameters (in that order), and **returns** the speed.



**NOTES:**

  * You do NOT need to call this function. Simply define it



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def person_speed(Stride, SPM):
    return Stride * SPM * .011
"
190,a2_2_speed,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You can calculate how fast a vehicle is moving in feet per minute using the
following formula:  
  

`SPEED = RPM * Cir / 12`



In this formula:

  * **RPM** is the rotations per minute of the wheel (integer)
  * **Cir** is the Circumference of the wheel (floating point number in inches)



Write a function called **speed_fpm** that takes **RPM** and **Cir** as
parameters (in that order), and **returns** the speed in feet per minute.



**NOTES:**

  * You do NOT need to call this function. Simply define it.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def speed_fpm(RPM, Cir):
    return RPM * Cir / 12
"
191,a2_2_hp,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM** **STATEMENT:  
**

You can calculate a car's horsepower by using the following formula:

`Horsepower = RPM * Torque / 5252`



In this formula:

  * **RPM** is rotations per minute (integer)
  * **Torque**  in foot pounds (floating point number)



Write a function called  **horsepower**  that takes  **RPM**  and  **Torque**
as parameters (in that order), and  **returns** the calculated horsepower.



**NOTES:**

  * You do NOT need to call this function. Simply define it



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def horsepower(RPM, Torque):
    return RPM * Torque / 5252
"
192,a2_2_bmi,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You can calculate a person's body mass index using the following formula:  
  

`BMI = Weight / Height2 * 703`



In this formula:

  * **height** in inches (integer)
  * **weight** in pounds (floating point number)



Write a function called **body_mass_index** that takes **height** and
**weight** as parameters (in that order), and **returns**  the body mass
index.



**NOTES:**

  * You do NOT need to call this function. Simply define it



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def body_mass_index(height, weight):
    return (weight / (height ** 2)) * 703
"
193,a2_1_surface,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_surface, which takes
two parameters:

  * **radius**
  * **Pi**

Call this function and pass it **5**  for **radius** , and
**3.141592653589793** for **Pi**. Store the result in a variable called
**result**. Do not print. Simply call the function and store the returned
value in the variable **result**.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Here is your solution:

"
194,a2_1_future_value,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_future_value, which
takes two parameters:

  * **present_value**
  * **years**

Call this function and pass it **50000**  for **present_value** , and  **25
**for  **years**. Store the result in a variable called  **result**. Do not
print. Simply call the function and store the returned value in the variable
**result**.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_future_value(present_value, years):
    # Existing code here...

# Call function
result = calculate_future_value(50000, 25)
"
195,a2_1_equation,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_equation, which takes
two parameters:

  * **value**
  * **C**

Call this function and pass it **355000** for **value** , and **2.99 * 10**
**8**  for **C**. Store the result in a variable called **result.** Do not
print. Simply call the function, and store the returned value in the variable
**result**.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
result = calculate_equation(355000, 2.99 * 10**8)
"
196,a2_1_calculate,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_equation, which takes
two parameters:

  * **value**
  * **C**

Call this function and pass it  **278**  for  **value** , and  **6.4 * 2 10**
for  **C**. Store the result in a variable called  **result**. Do not print.
Simply call the function, and store the returned value in the variable
**result**.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code

def calculate_equation(value, C):
  # Your code here
  pass

# Your solution here

result = calculate_equation(278, 6.4 * 2**10)
"
197,a2_1_calculate_volume,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_volume, which takes
two parameters:

  * **radius**
  * **Pi**

Call this function and pass it **15**  for  **radius** , and
**3.141592653589793  **for  **Pi**. Store the result in a variable called
**result**. Do not print. Simply call the function and store the returned
value in the variable  **result**.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_volume(radius, Pi):
    # this code will be provided by the professor
    pass

# Call the function and store the result
result = calculate_volume(15, 3.141592653589793)
"
198,a1_7_pilot_quals,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

C-130 Pilot qualifications usually depend on a pilot's flight experience in
terms of flight hours.

**C-130 Pilot Qualification** | **Flight Hours**  
---|---  
Upgrade Pilot | 600  
Aircraft Commander | 800  
Formation Lead | 1000  
Instructor Pilot | 1250  
Evaluator Pilot | 1500  
  
  
Write a Python program that asks the user to enter the number of flight hours
they currently have (does not need to be a whole number). Then, referencing
the table above, print out all qualifications they should have achieved in the
aircraft (one per line). If the their experience in the C-130 is more than 600
flight hours, output ""Co-Pilot"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 1996 | 1156.7 | 535.4  
**Output** |

Upgrade Pilot  
Aircraft Commander  
Formation Lead  
Instructor Pilot  
Evaluator Pilot

|

Upgrade Pilot  
Aircraft Commander  
Formation Lead

| Co-Pilot  
  
NOTE: The qualifications can be listed in any order, so long as only the ones
in range are printed.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def aircraft_qualification():
    flight_hours = float(input(""\n Enter total flight hours: ""))
    if flight_hours < 600:
        print(""\n Current Position Co-Pilot"")
    elif flight_hours < 800:
        print(""\n Upgrade Pilot"")
    elif flight_hours < 1000:
        print(""\n Upgrade Pilot"")
        print(""\n Aircraft Commander"")
    elif flight_hours < 1250:
        print(""\n Upgrade Pilot"")
        print(""\n Aircraft Commander"")
        print(""\n Formation Lead"")
    elif flight_hours < 1500:
        print(""\n Upgrade Pilot"")
        print(""\n Aircraft Commander"")
        print(""\n Formation Lead"")
        print(""\n Instructor Pilot"")
    else:
        print(""\n Upgrade Pilot"")
        print(""\n Aircraft Commander"")
        print(""\n Formation Lead"")
        print(""\n Instructor Pilot"")
        print(""\n Evaluator Pilot"")

aircraft_qualification()
"
199,a1_7_payload,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:**

The USAF is known for its massive cargo transport capabilities. Below are the
names of 5 aircraft, as well as their maximum payload capacity



**Cargo Aircraft**

|

**Maximum Load (inclusive, in Lbs. )**  
  
---|---  
  
C-5 Galaxy

|

285000  
  
C-17 Globemaster

|

170900  
  
KC-10 Extender

|

169000  
  
C-130 Hercules

|

42000  
  
V-22 Osprey

|

6000  
  
  
Write a Python program that asks the user to enter the payload weight (in
Lbs.) that needs to be moved. Then, referencing the table, print out all of
the Aircraft that could potentially carry that payload (one per line). If no
aircraft can carry the payload, output ""Too Heavy for Airlift"".



**EXAMPLES:**

  |

**Example 1**

|

**Example 2**

|

**Example 3**  
  
---|---|---|---  
  
**Input**

|

150000

|

250000

|

300000  
  
**Output**

|

C-5 Galaxy

C-17 Globemaster

KC-10 Extender

|

C-5 Galaxy

|

Too Heavy for Airlift  
  
NOTE: The aircraft can be listed in any order, so long as only the ones
capable of the lift are printed.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
payload = int(input(""Enter the payload weight (in Lbs): ""))

aircrafts = {
    'C-5 Galaxy': 285000,
    'C-17 Globemaster': 170900,
    'KC-10 Extender': 169000,
    'C-130 Hercules': 42000,
    'V-22 Osprey': 6000
}

valid_aircrafts = [aircraft for aircraft in aircrafts if aircrafts[aircraft] >= payload]
if not valid_aircrafts:
    print(""Too Heavy for Airlift"")
else:
    for aircraft in valid_aircrafts:
        print(aircraft)
"
200,a1_7_missilethreat,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

According to intelligence reports, the North Korean military uses at least 5
different classes of Ballistic Missiles. The names of these missiles, as well
as their maximum theoretical range, are provided below:

**Missile Class** | **Maximum Range (inclusive, in Kilometers)**  
---|---  
Hwasong-6 | 500  
KN-11 | 1200  
Musudan BM-25 | 4000  
Hwasong-14 | 8000  
Taepodong-2 | 12000  
  
  
Write a Python program that asks the user to enter the distance to a potential
target (in Kilometers). Then, referencing the table, print out all of the
Missile Classes that could potentially reach the target (one per line). If no
missiles are in range, output ""Not in range"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 1800 | 8000 | 18000  
**Output** | Musudan BM-25  
Hwason-14  
Taepodong-2 |

Hwasong-14  
Taepodong-2

| Not in range  
  
NOTE: The missiles can be listed in any order, so long as only the ones in
range are printed.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def in_range(distance):
    missiles = {
        ""Hwasong-6"": 500,
        ""KN-11"": 1200,
        ""Musudan BM-25"": 4000,
        ""Hwasong-14"": 8000,
        ""Taepodong-2"": 12000
    }

    valid_missiles = [missile for missile, range in missiles.items() if range >= distance]
    if valid_missiles:
        for missile in valid_missiles:
            print(missile)
    else:
        print(""Not in range"")

distance = int(input(""Enter the distance to target in Km: ""))
in_range(distance)
"
201,a1_7_evacuation,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
PROBLEM STATEMENT:  

Terrorist groups in the past have created improvised explosive devices in
various shapes and sizes. According to the National Counterterrorism Center,
the following evacuation distances are appropriate for certain explosive
devices.

Explosive Container

|

Evacuation Distance (inclusive, in Feet)  
  
---|---  
  
Pipe Bomb

|

850  
  
Suitcase Bomb

|

1850  
  
Sedan

|

2000  
  
Cargo Van

|

2750  
  
Semi-Trailer

|

7000  
  
  
Write a Python program that asks the user to enter a distance to a device (in
feet). Then, referencing the table, print out all of the explosive devices
that could potentially reach a target at the specified distance (one per
line). If no explosives can reach the specified distance, output ""Not in
range"".

EXAMPLES:

|

Example 1

|

Example 2

|

Example 3  
  
---|---|---|---  
  
Input

|

1900

|

2500

|

8000  
  
Output

|

Sedan  
Cargo Van  
Semi-Trailer

|

Cargo Van  
Semi-Trailer

|

Not in range  
  
NOTE: The devices can be listed in any order, so long as only the ones in
range are printed.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def explosive_range():
    distance = int(input(""Enter distance in feet: ""))
    explosives_distances = {'Pipe Bomb': 850, 'Suitcase Bomb': 1850, 
                            'Sedan': 2000, 'Cargo Van': 2750, 'Semi-Trailer': 7000}
    
    explosives_in_range = [explosive for explosive, range in explosives_distances.items() if range >= distance]

    if explosives_in_range:
        for explosive in explosives_in_range:
            print(explosive)
    else:
        print(""Not in range"")

explosive_range()
"
202,a1_7_digitalstorage,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Assume someone takes hundreds of photos on their smartphone every week. They
are seeking the best and least expensive alternatives to store/share their
images because their phone's storage capacity is limited. Using the table
below, determine which storage options they should consider, assuming each
image has an average file size of 6 MB.



**Storage Option** | **Short Name** | **Number of Images (inclusive)**  
---|---|---  
CD-ROM (700 MB) | CD | 116  
DVD-ROM (4.7 GB) | DVD | 780  
USB Thumb Drive (16 GB) | USB Small | 2660  
USB Thumb Drive (64 GB) | USB Large | 10600  
Portable Hard Drive (256 GB) | Portable HDD | 42600  
  
  
Write a Python program that asks the user to enter the number of images that
need to be shared/stored (non-negative, whole number). Then, referencing the
table above, print out all the storage options (by Short Name) capable of
holding that many images (one per line). If no storage options are capable of
storing that many images, output ""Consider Cloud Storage"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 2000 | 4000 | 45000  
**Output** | USB Small  
USB Large  
Portable HDD |

USB Large  
Portable HDD

| Consider Cloud Storage  
  
NOTE: The devices can be listed in any order, so long as only the ones in
range are printed.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def main():
    num_images = int(input('Enter the number of images:'))

    storage_options = ((116, 'CD'), (780, 'DVD'), (2660, 'USB Small'), (10600, 'USB Large'), (42600, 'Portable HDD'))

    viable_options = []

    for images, name in storage_options:
        if images >= num_images:
            viable_options.append(name)
    if viable_options:
        for option in viable_options:
            print(option)
    else:
        print(""Consider Cloud Storage"")

main()
"
203,a1_7_broadband,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Choosing the right broadband speed for your internet connection depends on
which online activities you plan on engaging while online. Using the table
below, determine which activities are possible with a given broadband speed,
given in Kilobits per second (Kbps).



**Activity** | **Short Name** | **Minimum Broadband Speed  
(inclusive, in Kbps)**  
---|---|---  
Social Media | Social Media | 1000  
Multiplayer Gaming | Gaming | 4000  
HD Video Conferencing | Video Conferencing | 6000  
File Downloading | File Downloads | 10000  
Stream Ultra HD 4K Video | HD 4K Video | 25000  
  
  
Write a Python program that asks the user to enter the broadband speed in
Kbps. Then, referencing the table above, print out all the activities (by
Short Name) that can be achieved using that speed (one per line). If the
broadband speed is less than 1000 Kbps, output ""Upgrade to Broadband"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 8500 | 5000 | 750  
**Output** |

Social Media  
Gaming  
Video Conferencing

|

Social Media  
Gaming

| Upgrade to Broadband  
  
NOTE: The activities can be listed in any order, so long as only the ones in
range are printed.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
broadband_speed = int(input('Enter the broadband speed in Kbps: '))

activities = {
    ""Social Media"": 1000,
    ""Gaming"": 4000,
    ""Video Conferencing"": 6000,
    ""File Downloads"": 10000,
    ""HD 4K Video"": 25000,
}

if broadband_speed < 1000:
    print(""Upgrade to Broadband"")
else:
    for activity, speed in activities.items():
        if broadband_speed >= speed:
            print(activity)
"
204,a1_6_woodshop,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have a personal woodshop and want to easily calculate whether you can
afford the board materials for a project. It is unlikely you can obtain the
exact amount of board materials that you may need for the project because wood
planks are provided in fixed lengths.

Write an algorithm that asks for:

  *     * The total length of board materials required for the project
    * The budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The number of boards needed for the project (Hint: use math.ceil(VALUE) to round up to the next full board).
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of boards is greater than or not greater than the budget, respectfully.



Assume your local lumberyard sells each board in **5.33** feet pieces at
**$45.25** per board. You may assume that all inputs are non-negative numbers.



**EXAMPLES:**



  | **Example 1** | **Example 2**  
---|---|---  
Input | 26  
250 |

46  
300  
  
Output | 5  
226.25  
Within Budget | 9  
407.25  
Over Budget  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

def woodCalculation(total_length, budget):
    #define the length of each board and its cost
    board_length = 5.33
    board_cost = 45.25
    
    #calculate the number of boards and the total cost
    num_boards = math.ceil(total_length / board_length)
    total_cost = num_boards * board_cost
    
    #evaluate the budget situation
    if total_cost > budget:
        budget_situation = ""Over Budget""
    else:
        budget_situation = ""Within Budget""
    
    #return the results
    return num_boards, total_cost, budget_situation

#example usage
print(woodCalculation(26, 250))
print(woodCalculation(46, 300))
"
205,a1_6_scuba,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Recreational SCUBA divers have to plan out how many air tanks they will need
in order to safely dive. The amount varies per diver because each person
consumes air at a different rate. This rate is commonly called Surface Air
Consumption. You want to figure whether you can afford the air requirements
for the trips that you are planning.

Write an algorithm that asks for:

  *     * The total dive time for the trip in minutes 
    * The air budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The number of liters needed for the project.
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of compressed air is greater than or not greater than the budget, respectfully.



Assume that your Surface Air Consumption is **14.5** liters/minute, and that
air costs **2 cents** per liter. You may assume that all inputs are non-
negative numbers.



**EXAMPLES:**



  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 180  
70 |

120  
30  
  
**Output** | 2610.0  
52.2  
Within Budget | 1740.0  
34.800000000000004  
Over Budget  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def scuba_dive(dive_time, air_budget):
    SAC = 14.5 #liters/minute
    cost_per_litre = 0.02 #cents/minute

    total_litres_needed = SAC * dive_time
    cost = total_litres_needed * cost_per_litre

    if cost > air_budget:
        return(total_litres_needed, cost, ""Over Budget"")
    else:
        return(total_litres_needed, cost, ""Within Budget"")

print(scuba_dive(180, 70))
print(scuba_dive(120, 30))
"
206,a1_6_runway,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

The CSAF has authorized new runways for any base that can accomplish the
project under their current budget. The new runways will be solid concrete
with their lengths measured in meters.

Write an algorithm that asks for:

  *     * The length of runway to be built (in meters)
    * The base's budget (in dollars--do not worry about the dollar sign, do not round to the nearest)



Your program should then output:

  *     * The amount of concrete (in tons) needed for the base's runway
    * The estimated cost (in dollars--do not output a dollar sign)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of materials is greater than or not greater than the base's budget, respectfully.

Assume that each meter of runway requires **  2.5** tons of concrete to build,
and that concrete costs  **$75.50**  per ton. You may assume that all inputs
are non-negative numbers.



**EXAMPLES:**

  |

Example 1

|

Example 2  
  
---|---|---  
  
Input

|

2000  
400000

|

1500  
250000  
  
Output

|

5000.0  
377500.0  
Within Budget

|

3750.0  
283125.0  
Over Budget  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def runway_finance(length, budget):
    tonnage = length * 2.5
    cost = tonnage * 75.5
    if cost > budget:
        return tonnage, cost, ""Over Budget""
    else:
        return tonnage, cost, ""Within Budget""
```
In this code, length and budget are provided as function parameters. The amount of concrete is calculated by multiplying the length by 2.5. Cost is calculated by multiplying the tonnage by the price per ton ($75.5). If the cost is higher than the budget, the function returns the string ""Over Budget"", otherwise it returns ""Within Budget""."
207,a1_6_printer,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

A 3D printer converts computer generated models into physical objects by
heating and extruding a filament known as Polylactic Acid (PLA). PLA, normally
sold in spools, is directly fed to the printer head like a thread. You want to
determine if you can afford to 3D print a project given its volume of
material.

Write an algorithm that asks for:

  *     * The volume of the 3D model to be printed (in cm3)
    * The user's budget (in dollars--do not worry about the dollar sign, do not round to the nearest)



Your program should then output:

  *     * The length of material (in meters) needed to produce the object
    * The estimated cost (in dollars--do not output a dollar sign)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of materials is greater than or not greater than the user's budget, respectfully.

Assume that each cm3 requires **  0.312** meters of PLA to print, and that PLA
filament costs  **$0.063**  per meter. You may assume that all inputs are non-
negative numbers.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 15.0  
2.5 | 500.0  
5.0  
Output | 4.68  
0.29484  
Within Budget | 156.0  
9.828  
Over Budget  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
volume = float(input())
budget = float(input())

length = volume*0.312
cost = length*0.063

print(round(length, 2))
print(round(cost, 5))

if cost>budget:
    print(""Over Budget"")
else:
    print(""Within Budget"")
```
NOTE:* The outputs are rounded by the respectice decimal places as given in examples."
208,a1_6_fueldepot,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Fuel in the military is essential to conducting operations. Balancing mission
requirements against budgetary constraints is a constant concern.

Write an algorithm that asks for:

  *     * The distance to a target in miles
    * The budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The amount of fuel (in gallons) needed to reach the target
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of fuel is greater than or not greater than the budget, respectfully.

Assume that the convoy can get **  12.5** miles to the gallon, and that the
current price of fuel is  **$3.73**  per gallon. You may assume that all
inputs are non-negative numbers.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 130.7  
50.50 |

750  
100  
  
Output | 10.456  
39.0009  
Within Budget | 60.0  
223.80  
Over Budget  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
distance = float(input())
budget = float(input())
MILES_PER_GALLON = 12.5
COST_PER_GALLON = 3.73

fuel_needed = distance / MILES_PER_GALLON
cost = fuel_needed * COST_PER_GALLON

print(fuel_needed)
print(cost)

if cost > budget:
    print('Over Budget')
else:
    print('Within Budget')
"
209,a1_4_speed,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. aircraft_speed (input by the user in mph)
  2. speed_of_sound (already initialized in mph)



Add code to the end of this program that will output:

  *     *         Faster than Mach 1 

If the aircraft speed is higher than the speed of sound  
  

    *         Mach 1 

If the aircraft speed is equal to the speed of sound  
  

    *         Slower than Mach 1 

If the aircraft speed is lower than the speed of sound  
  



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 800 | 767.269 | 450.8  
**Output** | Faster than Mach 1 | Mach 1 | Slower than Mach 1



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
aircraft_speed = float(input(""Enter the aircraft speed in mph:""))
speed_of_sound = 767.269

if aircraft_speed > speed_of_sound:
  print('Faster than Mach 1')
elif aircraft_speed < speed_of_sound:
  print('Slower than Mach 1')
else:
  print('Mach 1')
"
210,a1_4_satellite,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

You have been provided with a partially complete Python program that contains
2 variables.

  1. satellite_speed (input by the user in km/s)
  2. orbit_speed (already initialize in km/s)



Add code to the end of this program that will output:

    *       *             Crashed to Earth

If the speed of the satellite is below the orbital speed.

      *             In Orbit

If the speed of the satellite is equal to the orbital speed.

      *             Lost to Space

If the speed of the satellite is above the orbital speed.



** **

**EXAMPLES:**

|

**Example 1**

|

**Example 2**

|

**Example 3**  
  
---|---|---|---  
  
**Input**

|

3

|

7.8

|

9  
  
**Output**

|

Crashed to Earth

|

In Orbit

|

Lost to Space  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
satellite_speed = float(input())
orbit_speed = 7.9

if satellite_speed < orbit_speed:
    print(""Crashed to Earth"")
elif satellite_speed == orbit_speed:
    print(""In Orbit"")
else:
    print(""Lost to Space"")
"
211,a1_4_goldilocks,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. porridge_temp (input by the user in °F)
  2. correct_temp (already initialized in °F)



Add code to the end of this program that will output:

  *     *         Too Hot 

When the porridge temp is above the correct temperature.  
  

    *         Just Right 

When the porridge temp is equal to the correct temperature  
  

    *         Too Cold 

When the porridge temp is below the correct temperature.  
  



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 110 | 105 | 98  
**Output** | Too Hot | Just Right | Too Cold



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code
porridge_temp = int(input(""Enter the temperature of the porridge: ""))
correct_temp = 105

# Your code here
if porridge_temp > correct_temp:
    print(""Too Hot"")
elif porridge_temp == correct_temp:
    print(""Just Right"")
else:
    print(""Too Cold"")
"
212,a1_4_cards,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. number_of_cards (input by the user)
  2. cards_needed (already initialized)



Add code to the end of this program that will output whether you have enough
cards to make a full deck of 52 cards (already initialized):

  *     *         Too many cards 

If the number of cards is more than the cards needed  
  

    *         Full deck

If the number of cards is equal to the cards needed  
  

    *         Not enough cards 

If the number of cards is fewer than the cards needed  
  



**EXAMPLES:**



  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 57 | 52 | 38  
**Output** | Too many cards | Full deck | Not enough cards



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton code

number_of_cards = int(input(""Please enter the number of cards you have : ""))
cards_needed = 52

# Your solution here
if number_of_cards > cards_needed:
    print('Too many cards')
elif number_of_cards == cards_needed:
    print('Full deck')
else:
    print('Not enough cards')
"
213,a1_4_arrow,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. arrow_height (input by the user in feet)
  2. apple_height (already initialized in feet)



Add code to the end of this program that will output:

  *     *         Arrow too high 

If the arrow height is higher than the apple  
  

    *         Direct hit

If the arrow height is equal to the apple  
  

    *         Arrow too low 

If the arrow is lower than the apple  
  



**EXAMPLES:**



  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 7.1 | 6.2 | 5.9  
**Output** | Arrow too high | Direct hit | Arrow too low



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
arrow_height = float(input())
apple_height = 6.2

if arrow_height > apple_height:
    print(""Arrow too high"")
elif arrow_height == apple_height:
    print(""Direct hit"")
else:
    print(""Arrow too low"")
"
214,a1_3_spheres,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the volume of a multiple
spheres. The template provided to you defines 2 variables:

  * **radius**  \- radius of the sphere
  * **total**  \- The total amount of spheres



Calculate the volume, using the following formula:

V=4/3 π r3 t

Where . . .

  *     * **π**  is the mathematical constant (approximately equal to 3.14... -- see the HINT for more details)
    * **r**  is the radius of the cylinder
    * **t**  is the total amount of spheres



Store the answer in a variable called **  volume**. You do not need to print
the variable.



**HINT:**

The math module contains the mathematical constant, π. To use it, simply type
**math.pi**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

radius = 2  # example value, replace with your value
total = 3   # example value, replace with your value

volume = 4 / 3 * math.pi * radius**3 * total
"
215,a1_3_radius,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the volume of multiple
identical cylinders. The template provided to you defines 3 variables:

  * **radius**  \- radius of the cylinders
  * **height** \- height of the cylinders
  * **total**  \- The total amount of cylinders



Calculate the volume, using the following formula:

V = π r2 h t

Where . . .

  *     * **π**  is the mathematical constant (approximately equal to 3.14... -- see the HINT for more details)
    * **r**  is the radius of the cylinder
    * **h  **is the height of the cylinder
    * **t**  is the total amount of cylinders



Store the answer in a variable called **volume**. You do not need to print the
variable.



**HINT:**

The math module contains the mathematical constant, π. To use it, simply type
**math.pi**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

# radius of the cylinders
radius = 0 # You fill this in.

# height of the cylinders
height = 0 # You fill this in.

# total amount of cylinders
total = 0 # You fill this in. 

# Calculate the volume
volume = math.pi * (radius**2) * height * total
"
216,a1_3_interest,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the amount of money a person
will earn from an investment. The template provided to you defines 3
variables:

  * **principal_amount**  \- The principal (i.e., starting) amount of money that a person has
  * **interest_rate**  \- The interest rate
  * **time**  \- The length of the investment (in months)



Calculate the amount of money earned, using the following formula:

    
    
    amount = pert

Where . . .

  *     * **p**  is the principal amount
    * **e**  is the mathematical constant (approximately equal to 2.718... -- see the HINT for more details)
    * **r**  is the interest rate
    * **t**  is the time



Store the answer in a variable called  **amount.** You do not need to print
the variable.



**HINT:**

The math module contains the mathematical constant, e. To use it, simply type
**math.e**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math # Import the required module

#Initializing given variable
principal_amount = 
interest_rate = 
time = 

#The formula to calculate the amount from an investment
amount = principal_amount * math.e ** (interest_rate * time)
"
217,a1_3_cones,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the volume of multiple
identical cones. The template provided to you defines 3 variables:

  * **radius**  \- radius of the cones
  * **height** \- height of the cones
  * **total**  \- The total amount of cones



Calculate the volume, using the following formula:

V = π r2(h/3)t

Where . . .

  *     * **π**  is the mathematical constant (approximately equal to 3.14... -- see the HINT for more details)
    * **r**  is the radius of the cones
    * **h  **is the height of the cones
    * **t**  is the total amount of cones



Store the answer in a variable called **volume**. You do not need to print the
variable.



**HINT:**

The math module contains the mathematical constant, e. To use it, simply type
**math.pi**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math #importing math module

radius = ...                                          # given, radius of one cone
height = ...                                          # given, height of one cone
total = ...                                           # given, number of cones                          

volume = math.pi * radius**2 * (height/3)*total       # formula to calculate the volume of multiple cones
"
218,a1_3_circles,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the area of multiple
circles. The template provided to you defines 2 variables:

  * **radius**  \- radius of the circle
  * **total**  \- The total amount of circles



Calculate the volume, using the following formula:

V=π r2t

Where . . .

  *     * **π**  is the mathematical constant (approximately equal to 3.14... -- see the HINT for more details)
    * **r** is the radius of the circle
    * **t** is the total amount of circles



Store the answer in a variable called **area**. You do not need to print the
variable.



**HINT:**

The math module contains the mathematical constant, π. To use it, simply type
**math.pi**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

# Provided variables
radius = 10  # radius of the circles 
total = 5  # total amount of circles

# calculate the volume
area = math.pi * (radius ** 2) * total
"
219,a1_1_squad,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
PROBLEM STATEMENT:  

Write the Python code needed to get three values from the user:

  1. A string representing the name of a cadet squadron (e.g., Grim Reapers). Store this value in a variable called sqd_name
  2. A floating point value representing average age for all cadets in the squadron. Store this value in a variable called sqd_avg_age
  3. An integer representing the weight of the ICBM in kilograms. Store this value in a variable called sqd_number

IMPORTANT: Your template file contains a print statement that combines these
values to produce an output (see Example). Do not modify this line. Simply add
your input statements in the space provided.

EXAMPLE:

If the user types ""Grim Reapers"", 20.5, and 31, your program should print:

    
    
    Cadet Squadron 31, aka ""Grim Reapers"",
    
    
     has an average cadet age of 20.5.

  



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
sqd_name = input(""Enter the name of the squadron: "")
sqd_avg_age = float(input(""Enter the average age of the squadron: ""))
sqd_number = int(input(""Enter the weight of the ICBM: ""))

print(f'Cadet Squadron {sqd_number}, aka ""{sqd_name}"",\n\n has an average cadet age of {sqd_avg_age}.')
"
220,a1_1_icbm,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Write the Python code needed to get three values from the user:

  1. A string representing the name of an Intercontinental Ballistic Missile (ICBM) (e.g., Minuteman). Store this value in a variable called **  icbm** **_name**
  2. A floating point value representing the length of this missile in meters. Store this value in a variable called  **icbm_length**
  3. An integer representing the weight of the ICBM in kilograms. Store this value in a variable called  **icbm_weight**

**IMPORTANT:** Your template file contains a print statement that combines
these values to produce an output (see Example). **Do not modify this line.**
Simply add your input statements in the space provided.



**EXAMPLE:**

If the user types ""Minuteman"", 16.3, and 290000, your program should print:

    
    
    The Minuteman has a total length of 16.3 meters and it weighs 290000 kilograms.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Gets the name of the ICBM
icbm_name = input('Enter ICBM name: ')
# Gets the length of the ICBM
icbm_length = float(input('Enter ICBM length (meters): '))
# Gets the weight of the ICBM
icbm_weight = int(input('Enter ICBM weight (kilograms): '))

print(""The "" + icbm_name + "" has a total length of "" + str(icbm_length) + "" meters and it weighs "" + str(icbm_weight) + "" kilograms."")
"
221,a1_1_dorms,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Write the Python code needed to get three values from the user:

  1. A string representing the name of an USAFA dormitory (e.g., Vandenburg). Store this value in a variable called **dorm** **_name**
  2. A floating point value representing the total area, in square feet, that the dormitory contains. Store this value in a variable called **dorm_area**
  3. An integer representing the number cadets living in this dormitory. Store this value in a variable called **dorm_population**

**IMPORTANT:** Your template file contains a print statement that combines
these values to produce an output (see Example). **Do not modify this line.**
Simply add your input statements in the space provided.



**EXAMPLE:**

If the user types ""Vandenberg"", 63383.5, and 1720, your program should print:

    
    
    The Vandenburg dormitory has an area of 63383.5 square feet and has 1720 cadets living in it.





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton code
dorm_name = input(""Please enter the name of an USAFA dormitory: "")
dorm_area = float(input(""Please enter the total area in square feet that the dormitory contains: ""))
dorm_population = int(input(""Please enter the number of cadets living in this dormitory: ""))

print(""The ""+dorm_name+"" dormitory has an area of ""+str(dorm_area)+"" square feet and has ""+str(dorm_population)+"" cadets living in it."")
```
"
222,a1_1_bases,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Write the Python code needed to get three values from the user:

  1. A string representing the name of an Air Force Base (e.g., Travis). Store this value in a variable called **  base** **_name**
  2. A floating point value representing the area of this base in acres. Store this value in a variable called  **base_acres**
  3. An integer representing the number of buildings on this base. Store this value in a variable called  **building_** **quantity**

**IMPORTANT:** Your template file contains a print statement that combines
these values to produce an output (see Example). **Do not modify this line.**
Simply add your input statements in the space provided.



**EXAMPLE:**

If the user types ""Travis"", 6383.5, and 1720, your program should print:

    
    
    Travis Air Force Base sits on 6383.5 acres and has 1720 buildings on it.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# get input for each base attributes
base_name = input(""Enter the name of the Air Force Base: "")
base_acres = float(input(""Enter the area of the base in acres: ""))
building_quantity = int(input(""Enter the number of buildings on the base: ""))

# output information about the base
print(base_name, ""Air Force Base sits on"", base_acres, ""acres and has"", building_quantity, ""buildings on it."")
"
223,a1_1_aircraft,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


Write the Python code needed to get three values from the user:

  1. A string representing the name of an aircraft (e.g., F-16). Store this value in a variable called  **aircraft_name**
  2. A floating point value representing the maximum speed of the aircraft. Store this value in a variable called  **aircraft_speed**
  3. An integer representing the number of airplanes of this type owned by the USAF. Store this value in a variable called  **quantity**

**IMPORTANT:** Your template file contains a print statement that combines
these values to produce an output (see Example). **Do not modify this line.**
Simply add your input statements in the space provided.



**EXAMPLE:**

If the user types ""F-16"", 1500.1, and 600, your program should print:

    
    
    The F-16 has a top speed of 1500.1 MPH. The USAF has 600 in its inventory. 



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
224,lsn21_bouncingball,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** Using the pythonGraph animation template, create an animation of a bouncing
ball. Your ball should start at a random location, and change direction each
time it hits a side, top, or bottom of the window.  
  



**CHALLENGE:**

  1. Try to make the ball change color every time it hits a wall.





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import random
from cs1lib import *

WINDOW_WIDTH = 400
WINDOW_HEIGHT = 400
BALL_DIAMETER = 20
ball_x = random.randint(0, WINDOW_WIDTH - BALL_DIAMETER)
ball_y = random.randint(0, WINDOW_HEIGHT - BALL_DIAMETER)
ball_dx = 1
ball_dy = 1

def change_color():
    set_fill_color(random.random(), random.random(), random.random())

def move_ball():
    global ball_x, ball_y, ball_dx, ball_dy

    if ball_x + BALL_DIAMETER > WINDOW_WIDTH or ball_x < 0:
        ball_dx = -ball_dx
        change_color()

    if ball_y + BALL_DIAMETER > WINDOW_HEIGHT or ball_y < 0:
        ball_dy = -ball_dy
        change_color()

    ball_x += ball_dx
    ball_y += ball_dy

def draw_ball():
    draw_circle(ball_x, ball_y, BALL_DIAMETER // 2)

def bounce_ball():
    clear()
    move_ball()
    draw_ball()

start_graphics(bounce_ball)
"
225,lsn21_bouncingtriangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Using the Bouncing Ball from the previous lab as a starting point, generate
an animation of a bouncing triangle. The triangle's vertices should start at
random locations, and bounce whenever the triangle hits a wall.





**HINTS** :

  * Try drawing 3 bouncing balls on the screen.
  * Once the balls are moving correctly, draw 3 lines to connect them!



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Import necessary packages
import pygame
import random

# Initialize Pygame
pygame.init()

# Define some colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)

# Set the size of window
size = (700, 500)
screen = pygame.display.set_mode(size)

# List to store each bouncing triangle vertices data
triangles = []

# For each triangle
for i in range(3):  
    x = random.randrange(0, size[0])
    y = random.randrange(0, size[1])
    # Add a dictionary with triangle vertices properties
    triangles.append({""x"": x, ""y"": y, ""change_x"": random.randrange(-2, 3), ""change_y"": random.randrange(-2, 3)})

# Loop until the user clicks the close button.
done = False

# Used to manage how fast the screen updates
clock = pygame.time.Clock()

# -------- Main Program Loop -----------
while not done:
    # --- Handle events
    for event in pygame.event.get(): 
        if event.type == pygame.QUIT:  # When user clicked close
            done = True # Flag that we are done so we exit this loop
            
    # --- Logic code
    for triangle in triangles:
        triangle[""x""] += triangle[""change_x""]
        triangle[""y""] += triangle[""change_y""]
        
        # Bounce ball if needed
        if triangle[""y""] > size[1] or triangle[""y""] < 0:
            triangle[""change_y""] = -triangle[""change_y""]
        if triangle[""x""] > size[0] or triangle[""x""] < 0:
            triangle[""change_x""] = -triangle[""change_x""]

    # --- Draw code
    screen.fill(WHITE)
    
    pygame.draw.lines(screen, BLACK, True, [(triangles[0][""x""], triangles[0][""y""]),
                                            (triangles[1][""x""], triangles[1][""y""]),
                                            (triangles[2][""x""], triangles[2][""y""])], 5)

    # --- Update the screen
    pygame.display.flip()

    # --- Limit to 60 frames per second
    clock.tick(60)

# Close the window and quit.
pygame.quit()
"
226,lsn12_fastestcar,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

Write a Python program with the definition of a new function named fastest_car
and takes two lists of car info as parameters. The function will then
**return** the car model name with the higher top speed or ""Same speed"" if the
top speeds are the same.

The two parameters to the function are both a list with the same 3 types of
elements, as follows:

  
| **Car Model** | **Cost** | **Top Speed**  
---|---|---|---  
**Value** | Ford Mustang | 27205.00 | 163  
  


| **Car Model** | **Cost** | **Top Speed**  
---|---|---|---  
**Value** | Chevy Corvette | 66400.00 | 194  
  


**EXAMPLE** :

| **Example**  
---|---  
**Input Parameters to** `fastest_car()` |

`fastest_car([""Ford Mustang"", 27205.00, 163], [""Chevy Corvette"", 66400.00,
194])`  
  
**Outputs** | Chevy Corvette



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def fastest_car(car1, car2):
    if car1[2] > car2[2]:
        return car1[0]
    elif car2[2] > car1[2]:
        return car2[0]
    else:
        return ""Same speed""
"
227,lsn12_listrange,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

Write a Python program that obtains two whole numbers that represent the start
and stop values for a range of numbers. You may assume the second number is
always greater than the first.

Using these start and stop values, print the two following items in order:

1.  Print a list that starts at the start value and ends at (the list contains) the stop value

**HINT** : Use `range()` to accomplish this. In order to print the result from
range() as a list, surround it with list(), `list(range(#,#))`, like you
surround input() with int() or float(), `int(input())`.

2.  Print the size (how many numbers are contained) of that list



**EXAMPLE:**

| **Example 1** | **Example 2**  
---|---|---  
**Inputs** |

1

10

|

1023

1029  
  
**Outputs** | [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  
10 |

[1023, 1024, 1025, 1026, 1027, 1028, 1029]  
7



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
start = int(input())
stop = int(input())

list_range = list(range(start, stop + 1))

print(list_range)
print(len(list_range))
"
228,lsn22_paint,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Using PythonGraph, create a simple paint application. Your program should draw
circles on the window whenever the user presses the left mouse button. Your
program should also watch for keyboard inputs, and allow the user to change
colors and the size of the circle by pressing on different keys of your
choice.

The code template of a paint program has been provided to you as a starting
point in paint. Use this code and make the necessary modifications in the
Animation while loop.

When you are finished, upload your Python code.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# importing necessary libraries
from graphics import *
import random


def main():
    # create a graphics window
    win = GraphWin('Paint', 500, 500)

    color = 'black'
    rad = 20

    while True:
        # get mouse click and keyboard key press
        clickPoint = win.checkMouse()
        keyPressed = win.checkKey()

        # check if a key is pressed
        if keyPressed != """":
            # m key to change color
            if keyPressed == 'm':
                color = ""#"" + ''.join([random.choice('0123456789ABCDEF') for i in range(6)])
            # r key to increase the radius of the circle
            elif keyPressed == 'r':
                rad += 5
            # l key to decrease the radius of the circle
            elif keyPressed == 'l' and rad > 5:
                rad -= 5

        # check if a mouse is clicked
        if clickPoint:
            # create circle at the mouse click point
            circle = Circle(clickPoint, rad)
            circle.setFill(color)
            circle.setOutline(color)
            circle.draw(win)


if __name__ == '__main__':
    main()
"
229,lsn12_pftscores,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

You are provided a list of PFT scores, already in the lab template, in a
variable `pft_scores` arranged in no particular order.

Write a Python program that obtains a new score from the user. If the score is
valid (above zero and no greater than 500), add it to the list and print out
the following two stats in this order:

1\. **average score  ** HINT: use the functions `len()` and `sum()` on your
list to find the average

2\. **range of scores** , the difference between the largest score and
smallest score. HINT: use the functions `min()` and `max()` on your list to
find the range

If the score is invalid (below zero or above 500), instead print:  ""Invalid
score provided"".



**EXAMPLE:**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | -5 | 328 | 65  
**Outputs** | Invalid score provided |

291.8

403

|

274.26666666666665

408  
  




  





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
pft_scores = [48, 375, 302, 120, 500, 95, 123, 300, 98, 195, 350, 98, 406, 94, 381,
              229, 401, 314, 499, 193, 293, 81, 96, 197, 398]

new_score = int(input(""Enter a score: ""))

if new_score < 0 or new_score > 500:
    print(""Invalid score provided"")
else:
    pft_scores.append(new_score)
    avg_score = sum(pft_scores) / len(pft_scores)
    range_scores = max(pft_scores) - min(pft_scores)
    
    print(avg_score)
    print(range_scores)
"
230,lsn22_soundboard,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Using PythonGraph, create a ""soundboard"" application. Your program should
display a list of colored buttons (i.e., rectangles). When the user clicks
inside of a rectangle, the program plays a different
sound.[](https://canvas.instructure.com/courses/1762383/files/86200052/download?download_frd=1)

The provided template file comes with a single button implemented. Your job is
to study this code and create at least 5 other buttons. Note: The buttons do
not have to be laid out in the same arrangement, but they should look
organized.

When you are finished, upload your Python code. Do NOT upload any of the sound
files.





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import time
from PythonGraph import *

def is_point_in_rect(point, rect):
    """"""Returns True iff the point is inside the rectangle.""""""
    px, py = point
    x, y, w, h = rect
    return x <= px <= x + w and y <= py <= y + h
    

def play_sound(filename):
    """"""Play a sound file.""""""
    print(""Playing"", filename)


def main():
    """"""Run the soundboard program.""""""
    create_canvas(500, 500)

    # Use a list of lists to create the buttons. Each list contains:
    # - The (x, y, width, height) of the button as a list
    # - The color of the button as a string
    # - The soundfile associated with the button as a string
    buttons = [
        [[10, 10, 50, 50], ""blue"", ""sound1.wav""],
        [[70, 10, 50, 50], ""red"", ""sound2.wav""],
        [[130, 10, 50, 50], ""green"", ""sound3.wav""],
        [[10, 70, 50, 50], ""purple"", ""sound4.wav""],
        [[70, 70, 50, 50], ""teal"", ""sound5.wav""]
    ]
    
    # Draw the buttons
    for button in buttons:
        draw_rect_filled(button[0], button[1])

    # Wait for the user to click a button
    while True:

        # Wait for a mouse event
        wait_for_event()

        # If we got a click event
        if get_event_type() == ""click"":
            # For each button
            for button in buttons:
                # If the click was in this button
                if is_point_in_rect(get_click_pos(), button[0]):
                    # Play the sound associated with this button
                    play_sound(button[2])


main()
"
231,lsn8_practice4,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a program that asks the user for the area of three plots of land.

  * The first area will be provided to you in ACRES
  * The second area will be provided to you in SQUARE MILES
  * The third area will be provided to you in SQUARE KILOMETERS

Your program will output ""Plot X is the biggest"", replacing X with either a 1,
2, or 3 depending on if the first, second, or third plot of land is the
biggest, respectively.  For this problem, you may assume that the plots are
all different sizes (e.g., no two plots will be the same size)



**NOTES:**

  * **1 acre = 0.0015625 square miles**
  * **1 sq kilometer = 0.386102 square miles**



**EXAMPLES:**

| **EXAMPLE 1** | **EXAMPLE 2**  
---|---|---  
**Inputs** |

35  
0.25  
1

|

150  
1  
2.2  
  
**Expected Output** | Plot 3 is the biggest | Plot 2 is the biggest  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def check_land_size():
    # Prompt the user for area of the plots
    first_plot = float(input()) * 0.0015625
    second_plot = float(input())
    third_plot = float(input()) * 0.386102

    # Determine which plot is the biggest
    largest_plot = max(first_plot, second_plot, third_plot)

    # Output the plot number of the biggest plot
    if largest_plot == first_plot:
        print(""Plot 1 is the biggest"")
    elif largest_plot == second_plot:
        print(""Plot 2 is the biggest"")
    else:
        print(""Plot 3 is the biggest"")

check_land_size()
"
232,lsn8_practice3,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a program that asks the user for the price of an item in US dollars /
cents.  Then calculate and print out the equivalent price of the item in:

  *     * British Pounds (1.25 USD per Pound)
    * Korean Won (1 Won == 0.00083 USD)
    * Mexican Pesos (1 Peso == 53.81 Won)

Print each currency on a separate line.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# getting the price of the item from the user
price_usd = float(input(""Please enter the price of the item in USD: ""))

# conversion factor for usd to British Pound
usd_to_pound = 1/1.25 
# conversion factor for usd to Korean Won
usd_to_won = 1/0.00083
# conversion factor for Korean Won to Mexican Peso
won_to_peso = 1/53.81

# converting the price to British Pounds
price_pound = price_usd * usd_to_pound
# converting the price to Korean Won
price_won = price_usd * usd_to_won
# converting the price to Mexican Pesos
price_peso = price_won * won_to_peso

print(""The price of the item in British Pounds is: "", price_pound)
print(""The price of the item in Korean Won is: "", price_won)
print(""The price of the item in Mexican Pesos is: "", price_peso)
 "
233,lsn8_practice2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a program that gets two (x, y) coordinates from
the user in the following order: x1, y1, x2, y2.  Write a program that
calculates the distance between these two points, and prints them out. The
distance formula is  ( x 1 x 2 ) 2 + ( y 1 y 2 ) 2

HINT:  You will have to use the math module.



**EXAMPLES:**

| **EXAMPLE 1** | **EXAMPLE 2**  
---|---|---  
**Inputs** |

5.0  
10.0

8.0  
16.0

|

8.3  
-5.0

-9.3  
4.6  
  
**Expected Output (within 0.01)** | 6.708 | 20.047



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# import the library
import math

# get the input from the user
x1 = float(input())
y1 = float(input())
x2 = float(input())
y2 = float(input())

# calculate the distance
distance = math.sqrt((x2 - x1)**2 + (y2 - y1)**2)

# print the output
print(distance)
"
234,lsn8_practice1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with an incomplete Python program that prints out a
message with the class year.  Write the appropriate input statement above this
line to make this program work.



**EXAMPLE:** ****

If the user types ""2014"", your program should print:

    
    
    Members of the class of 2014 arrived at USAFA in 2010



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
class_year = int(input(""Enter the class year: ""))
print(""Members of the class of"", class_year, ""arrived at USAFA in"", class_year - 4)
"
235,lsn4_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a program that gets a cadet's age, and stores it in a variable called
**your_age.**

Print the user's age + 4.

For example, if the user types:

    
    
     18

Your program should print:

    
    
    22



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
your_age = int(input())
print(your_age + 4)
"
236,lsn4_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Create a variable called  **name,  **and set it equal to your name
(represented as a string--don't forget to use the quotation marks!).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Solution
name = ""InsertYourNameHere""
"
237,lsn4_scoreaverage,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write an algorithm that prompts the user for three sports game scores and
outputs the average.

  
**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15  
12 | 89  
103  
63 | 14  
42  
36  
Output | 11.666666666666666 | 85.0 | 30.666666666666668  
  
**Note: Output must match (within a predefined tolerance).**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Initial prompts for user to input three game scores
game_score1 = float(input(""Enter the first game score: ""))
game_score2 = float(input(""Enter the second game score: ""))
game_score3 = float(input(""Enter the third game score: ""))

# Calculation for average of the three scores
average_score = (game_score1 + game_score2 + game_score3) / 3

print(average_score)
"
238,lsn4_pointspread,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

A ""Point Spread"" is a term used to in sports (and gambling) to describe the
difference between two teams' scores. For example, if one team scores 20
points and another team scores 30 points, the point spread is 10. A point
spread is always a positive number.

Write an algorithm that prompts the user for two sports game scores and
outputs the point spread.  
  
**  
EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15 | 89  
103 | 42  
14  
Output | 7 | 14 | 28  
  
**Note: Output must match exactly.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Point Spread Calculator
team1_score = int(input(""Enter the first team's score: ""))
team2_score = int(input(""Enter the second team's score: ""))

# Calculate the point spread
point_spread = abs(team1_score - team2_score)

print(point_spread)
"
239,lsn4_madlib,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Mad Libs are activities that have a person provide various words, which are
then used to complete a short story in unexpected (and hopefully funny) ways.
(EDITOR'S NOTE: Do you kids even do Mad Libs anymore?)

Complete the program to read the needed values from input, that the existing
output statement(s) can use to output a short story.

**EXAMPLE:**

If the input is:

    
    
    Eric
    Chipotle
    12
    burritos
    

Then the output is:

    
    
    Eric went to Chipotle to buy 12 different types of burritos



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
person = input()
place = input()
numeric_value = input()
objects = input()

print(person + ' went to ' + place + ' to buy ' + numeric_value + ' different types of ' + objects)
"
240,lsn4_girlscouts,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a program that asks the user for the amount of money he/she has on
hand, and outputs the number of girl scout cookies that he/she can purchase.
Use the following prices:

$5 per box for the ""Super Six"" (Thin Mints, Samoas, Tagalongs, Do-Si-Dos,
Trefoils, Savannah Smiles)  
$6 per box for the Specialty Cookies (S'mores, Toffee-tastic)

**For this problem, assume that the user will buy all of one or the other. In
other words, output the number of boxes that he/she would be able to obtain if
he/she bought nothing but the Super Six, and nothing but the Specialty
Cookies.**

**HINT:**  
You can convert a number to an integer by using the int() function. For
example:  
 **int(2.51)** will convert the number to 2

EXAMPLE:  
If the input is:

    
    
    26

Then the output is:

    
    
    5 boxes of Thin Mints, Samoas, Tagalongs, Do-Si-Dos, Trefoils, or Savannah Smiles  
    4 boxes of S'mores and Toffee-tastic



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
money = int(input())

# computing number of boxes of super six and specialty cookies
super_six_boxes = money // 5
specialty_boxes = money // 6

print(f""{super_six_boxes} boxes of Thin Mints, Samoas, Tagalongs, Do-Si-Dos, Trefoils, or Savannah Smiles"")
print(f""{specialty_boxes} boxes of S'mores and Toffee-tastic"")
"
241,lsn4_arrivaltime,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write an algorithm that prompts the user for a distance to travel (in miles)
and a speed (in mph) and outputs time of arrival in hours.

  
**For Example:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 72  
60 | 1282  
85 | 120.5  
59.2  
Output | 1.2 | 15.0823 | 2.0355  
  
**Note: Output needs to match the examples.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
distance = float(input(""Enter distance to travel in miles: ""))
speed = float(input(""Enter speed in mph: ""))

time = distance / speed

print(""{:.4f}"".format(time))
"
242,lsn23_tokens,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write a Python program that asks the user for the name of a file.

Your program should then read this file and count how many times each token
(i.e., word) appears (NOTE: to keep it simple, and split on the ). Finally,
let the user type a token, and print how many times that token appears (if a
word is not in your dictionary, print 0).



**HINTS:**

  * You have been provided with the file review.txt to test your code.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
file_name = input(""Enter the name of a file: "")

try:
    with open(file_name, 'r') as file:
        tokens = file.read().split()

        counter_dict = {}

        for token in tokens:
            if token not in counter_dict:
                counter_dict[token] = 1
            else:
                counter_dict[token] += 1

        token_input = input(""Enter a token: "")

        if token_input in counter_dict:
            print(""The token"", token_input, ""appears"", counter_dict[token_input], ""times."")
        else:
            print(""The token"", token_input, ""appears 0 times."")
except FileNotFoundError:
    print(""The file"", file_name, ""does not exist."")
"
243,lsn23_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You are being provided with a function called `mini_sort` that takes two
numbers as parameters. Modify this function so that it returns a tuple
containing the numbers in ascending order.



**EXAMPLES:**

`mini_sort(1, 2)` should return the tuple:  (1, 2)

`mini_sort(50, 40)` should return the tuple:  (40, 50)





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def mini_sort(a, b):
    if a > b:
        return (b, a)
    else:
        return (a, b)
"
244,lsn18_triangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write an algorithm that asks the user for X and Y coordinates of a single
point (the coordinates of the top left point on the triangle), the length of
the base, and the height of a right triangle. Then, open a graphics window and
draw the triangle. The area of the triangle is should be displayed at the
bottom center of the window in black.



**HINTS:**

  * Make sure you get the user input BEFORE you open the window. Otherwise, the program will freeze.
  * The `draw_text` function will draw text on a screen. Don't worry about getting the text EXACTLY in the center (it's hard!).





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import graphics

# Get the top-left coordinates, base length and triangle height
top_left_x = float(input(""Enter the x-coordinate for the top-left point: ""))
top_left_y = float(input(""Enter the y-coordinate for the top-left point: ""))
base_len = float(input(""Enter the base length of the triangle: ""))
height = float(input(""Enter the height of the triangle: ""))

# Open a graphics window
win = graphics.GraphWin(""Triangle"", 600, 600)

# Create the three points of the triangle
p1 = graphics.Point(top_left_x, top_left_y)
p2 = graphics.Point(top_left_x + base_len, top_left_y)
p3 = graphics.Point(top_left_x, top_left_y + height)

# Draw the triangle
triangle = graphics.Polygon(p1, p2, p3)
triangle.draw(win)

# Calculate the area and display it
area = 0.5 * base_len * height
area_text = graphics.Text(graphics.Point(win.getWidth() / 2, win.getHeight() - 10), ""Area: "" + str(area))
area_text.setTextColor(""black"")
area_text.draw(win)

# Wait for the user to close the window
win.getMouse()
win.close()
```
This code first asks the user for the necessary input, then opens a graphics window, creates the points for the triangle based on the user's input, draws the triangle, calculates and draws the area of the triangle, and finally waits for the user to close the window."
245,lsn18_stamp,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Create a pythonGraph function called `draw_stamp` that accepts an x and y
coordinate as parameters. Add code so that this function will then draw a
picture (of your choosing) centered on that coordinate.



To test your function, create a pythonGraph window, and call your function
several times (each time, passing it a different set of x and y coordinates).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pythonGraph as pG

def draw_stamp(x, y):
    pG.draw_circle(x, y, 20, pG.GREEN, True)

pG.create_window(900, 600)

# Call draw_stamp function to draw stamp at various coordinates
draw_stamp(200, 300)
draw_stamp(400, 500)
draw_stamp(600, 100)
draw_stamp(800, 400)

pG.draw_window()
"
246,lsn18_simpledrawing,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Using pythonGraph (and the documentation for pythonGraph), experiment with
each of the drawing commands listed (drawing commands begin with the keyword
""draw""). Draw something interesting using at least 4 different drawing
commands. One of those drawing commands must be `draw_image`

**NOTE:  
** The best files will be added to our Python ""Hall of Fame"".



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from pythonGraph import *

# Initialize a window with the defined size
init_graph()

# Use draw command to draw Circle
draw_circle(280, 50, 25, ""yellow"")

# Use draw command to draw Line
draw_line(280, 50, 150, 150, ""gray"")

# Use draw command to draw Rectangle
draw_rectangle(150, 150, 300, 200, ""cyan"")

# Use draw command to draw Image
draw_image(""example_image.jpg"", 150, 150)

# Update the graphics window
update_graph()
"
247,lsn18_randomcircles,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Create a pythonGraph that asks the user for the number of circles to draw.
Your program should then open a pythonGraph window and then draw that many
circles somewhere within view.

**Hints**

  * Import the `random` module in order to generate random numbers. There are specifically two functions that are useful:
  * `random.random()` returns a random number between 0.0 and 1.0
  * `random.randint(start, end)` returns a random integer between `start` and `end`





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from graphics import *
import random

def main():
    window = GraphWin(""Circles"", 500, 500)
    num_circles = int(input(""Enter the number of circles: ""))
    
    for i in range(num_circles):
        center = Point(random.random()*500, random.random()*500)
        rand_circle = Circle(center, random.randint(5,50))
        rand_circle.draw(window)
    
    window.getMouse() 
    window.close()

main()
"
248,lsn11_in_circle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a function that determines if a point is within a circle. You will
name your function `in_circle()`. It has five parameters:

  1. The coordinates of the point that is to be tested (x, y)
  2. The center of a circle (cir_x, cir_y)
  3. The radius of the circle (radius)

 The `in_circle()` function will return **True** if the point is on or inside
the circle, and **False** otherwise.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def in_circle(x, y, cir_x, cir_y, radius):
    # Formula to calculate distance between two points in a 2D plane
    distance = ((x-cir_x)**2 + (y-cir_y)**2)**0.5
    
    # If distance is greater than radius then point is outside the circle
    if distance > radius:
        return False
    # Otherwise it's inside or on the circle
    else:
        return True
"
249,lsn11_distance,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a function that computes the distance between two points. You will
name your function `dist_points`. It has four parameters, the cordinates of
the two points as `x1, y1, x2, y2`. The `dist_points()` function will return
the distance between the two points as a floating point number.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math 

def dist_points(x1, y1, x2, y2):
    return math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)

    # Uncomment these lines for local testing
    # print(dist_points(1, 2, 4, 6))
    # print(dist_points(3, 2, 4, 6))
    # print(dist_points(100, 200, 300, 400))
```
In your local machine, you can uncomment the bottom lines to test the function."
250,lsn11_circle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a function that computes the area of a circle. You will name your
function `area_circle`. It has one parameter, the radius of the circle,
`radius`. The `area_circle()` function will return the area of the circle.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

def area_circle(radius):
    return math.pi * radius ** 2
"
251,lsn11_asteroids,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

""Asteroids"" was an arcade game created in 1979 by Atari, Inc. In the game, the
player is given control of a spaceship that has the ability to shoot bullets.
The player is then placed in a field of floating rocks, and is tasked with
destroying them without running into them.

In this lab, you will write a ""collision detection"" function that will be used
by the game to determine if the player's ship has hit a rock. To make this
simple, assume that an imaginary circle extends from the center of the
asteroid and the player's ship (see below image). If the two circles ever
overlap one another, then a collision has occurred. (NOTE: There are more
accurate ways to detect a collision. [Click here if you want to learn more
(Links to an external site.)](https://bell0bytes.eu/basic-collision-
detection/)).

![](https://bell0bytes.eu/content/images/2019/03/spaceShipAsteroid.png)

Your function, which you will name `detect_collision()` should have six
parameters: the (x, y) coordinates of the center of player's ship, the ship's
radius, the (x, y) coordinates of the center of an asteroid, and the
asteroid's radius. Your function will return `True` if the player's ship has
hit the asteroid, and `False` otherwise.

**HINT: _  
_** _You may want to copy and paste the_  `dist_points`  _function you created
earlier. It's almost as if we are trying to demonstrate the importance of
reusable functions . . ._

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def detect_collision(ship_x, ship_y, ship_radius, asteroid_x, asteroid_y, asteroid_radius):
    def dist_points(x1, y1, x2, y2):
        return ((x1 - x2) ** 2 + (y1 - y2) ** 2) ** 0.5

    distance = dist_points(ship_x, ship_y, asteroid_x, asteroid_y)
    return distance <= (ship_radius + asteroid_radius)
"
252,lsn10_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_multiple_trees()` that
outputs a tree using ASCII art. Unlike the previous problem, this function
accepts a parameter that tells it how many trees to draw.

Write a program that:

  1. Gets an integer from the user and stores it in a variable. You can name this variable whatever you want.
  2. Calls the function, and passes the variable to it. 

Remember that ""passing a value"" to a function simply means putting the number
inside the parenthesis when you call it.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton code
def draw_multiple_trees(num_trees):
    # This function will output num_trees separate ASCII art trees.
    # You don't need to worry about how it works, just how to call it.

# Actual Answer :
num_of_trees = int(input(""Enter number of trees: ""))
draw_multiple_trees(num_of_trees)
"
253,lsn10_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_tree()` that prints a
tree using ASCII art:

    
    
     *  
     ***  
    *****  
     |

Call this function.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
draw_tree()
"
254,a3_6_situps,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes the number of situps
done by a group of cadets.  Write a program that gets from the user the number
of people tested, and gets that many situp scores (which you may assume are
whole numbers) from the user.  Your program must print out:

  * The average number of situps for the group.
  * The count of cadets that scored higher than the average.



**EXAMPLES:**

| **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
75  
90  
88  
  
  
| 5  
86  
79  
90  
90  
100  
**Output** | 84.3  
2 | 89.0  
3  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
numCadets = int(input())

totalSitups = 0
situpCounts = []
for i in range(numCadets):
    count = int(input())
    situpCounts.append(count)
    totalSitups += count

average = totalSitups / numCadets

aboveAverageCount = 0
for count in situpCounts:
    if count > average:
        aboveAverageCount += 1

print(f""{average:.1f}"")
print(aboveAverageCount)
"
255,a3_5_connect,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a table that describes a connect 4 board. In
this code, a list (`connect_4`) is populated with characters representing the
location of each of the pieces (Red, Yellow, or Blank).



    
    
    X = Red; 0 = Yellow; _ = Blank



Write a program that gets two values from the user in the following order:

1) a row index, a 0 indicates the Top row and 5 the Bottom row

2) a column index, a 0 indicates the Leftmost column and 6 the Rightmost
column



Finally,  **Print  **out the contents of the table at that particular cell.



  

**HINT:**

  * Your output should be one of the following letters:  ""X"", ""0"" or ""_""



Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 5
# --------------------------------------------------------------
#DO NOT TOUCH THIS LIST!
connect_4   =      [['X', '_', '_', '_', '_', '_', '_'],
                    ['X', '_', 'X', '_', '_', '_', '_'],
                    ['0', '_', 'X', '_', '_', '_', '_'],
                    ['0', '_', '0', 'X', '_', '_', '0'],
                    ['0', '_', '0', '0', 'X', '_', 'X'],
                    ['X', '_', 'X', '0', '0', 'X', 'X']]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
connect_4   = [['X', '_', '_', '_', '_', '_', '_'],
               ['X', '_', 'X', '_', '_', '_', '_'],
               ['0', '_', 'X', '_', '_', '_', '_'],
               ['0', '_', '0', 'X', '_', '_', '0'],
               ['0', '_', '0', '0', 'X', '_', 'X'],
               ['X', '_', 'X', '0', '0', 'X', 'X']]

row_index = int(input())
column_index = int(input())

print(connect_4[row_index][column_index])
"
256,a3_4_testscores,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_test_scores. Write a
program that prints out the range ( _i.e.,  _the difference between the max
and min scores)



**EXAMPLE:  
** If, for example, the list contained the values:  50, 64, 72

Your program should print:

    
    
    22





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_range(list_of_test_scores):
  min_score = min(list_of_test_scores)
  max_score = max(list_of_test_scores)
  range_of_scores = max_score - min_score
  print(range_of_scores)

calculate_range([50, 64, 72])  # Example usage
"
257,a3_3_dogs,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_dogs`. Write a program
that prints out each of the items in this list (one item per line).  



**EXAMPLE:  
** If, for example, the list contained the items:  ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task.  



Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_dogs = [""Pug"", ""Lab"", ""Yorkie"", ""Pit Bull"", ""Poodle"", ""Great Dane""]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_dogs = [""Pug"", ""Lab"", ""Yorkie"", ""Pit Bull"", ""Poodle"", ""Great Dane""]

#Your code goes here.
for i in list_of_dogs:
    print(i)
"
258,a3_1_light_aircraft,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_aircraft`. Write a program
that prints a single, specified aircraft from the list. Your program shall
take a number via user input used to identify which aircraft to print. For
example, if the user types a 3, you should print out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_aircraft = [""Airbus A320"", ""Boeing 747"", ""Cessna 172"", ""Piper PA-28"", ""Mooney M20"", ""Beechcraft Bonanza"", ""Gulfstream G650"", ""Embraer Phenom 300"", ""Bombardier Dash 8"", ""Diamond DA40""]

index = int(input(""Please enter a number: "")) - 1
print(list_of_aircraft[index])
"
259,a2_5_virus,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You are writing a program that will help you decide if there are too many
people at a restaurant for you to dine safely. Your program will ask for the
number of people in the restaurant. It will then ask for the distance between
yourself and each of the people (in feet, which do not have to be whole
numbers). Your program will keep track of how many people are within 6 feet of
you (inclusive). Your program will then print one of the following statements:

**# of People within 6 Feet** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | All Clear | Warning | Find Another Place  
  


**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** | 3  
5.7  
10.2  
12.4 | 2  
7.0  
15.1  
**OUTPUT** | Warning | All Clear



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# number of people in the restaurant
num_people = int(input())

# list to store the distances
distances = []

# loop to ask for each person's distance
for i in range(num_people):
    distances.append(float(input()))

# calculate the number of people within 6 feet
within_six_feet = sum(1 for d in distances if d <= 6)

# print the corresponding message
if within_six_feet == 0:
    print(""All Clear"")
elif 1 <= within_six_feet <= 2:
    print(""Warning"")
else:
    print(""Find Another Place"")
"
260,a2_5_traffic_lights,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

The City Manager is having a traffic problem and asked you are to write a
program that will determine whether or not to activate a newly installed
alternate traffic light schedule to help alleviate traffic throughout the city
during peak traffic hours. Your program will ask for the number of traffic
""time periods"" to analyze. It will then ask for the traffic throughput (in
average number of cars per minute, which does not have to be a whole number)
for each ""time period"". Your program will keep track of how many ""time
periods"" are considered heavy traffic, as defined as 15 cars per minutes or
more (inclusive). Your program will then print one of the following
statements:

**# of ""time periods"" of heavy traffic** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | Regular Schedule | Prepare Activation | Activate New Schedule  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

12.8

15.0

6.7

|

3

17.3

15.1

19.2  
  
**OUTPUT** | Prepare Activation | Activate New Schedule



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code
num_periods = int(input())
traffic_periods = [float(input()) for _ in range(num_periods)]

# Solution
def analyze_traffic(num_periods, traffic_periods):
    heavy_periods = 0
    for traffic in traffic_periods:
        if traffic >= 15:
            heavy_periods += 1

    if heavy_periods > 2:
        print(""Activate New Schedule"")
    elif heavy_periods > 0:
        print(""Prepare Activation"")
    else:
        print(""Regular Schedule"")

analyze_traffic(num_periods, traffic_periods)
"
261,a2_5_network_traffic,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

The 10th Communications Squadron (10 CS) recently detected a higher volume of
network traffic on the base network. The 10 CS Director of Operations asked
you are to write a program that will determine whether or not to activate an
additional Network Load Balancer (NLB) to improve the network performance
during these peak loads. Your program will ask for the number of network
traffic ""snapshots"" to analyze. It will then ask for the network load (in
Gigabits per second (Gbps), which does not have to be a whole number) for each
""snapshot"". Your program will keep track of how many ""snapshots"" are
designated as high volume network traffic, defined as loads greater than 512
Gbps. Your program will then print one of the following statements:

**# of ""snapshots"" with high network traffic volume** | **0** | **1-2** | **>
2**  
---|---|---|---  
**Output** | Ops Normal | Initialize NLB | Activate NLB  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

512.0

738.5

199.6

|

3

498.6

372.9

512.0  
  
**OUTPUT** | Initialize NLB | Ops Normal



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Here's one way to solve this problem using Python programming language. This code reads the number of snapshots first. It then reads network load for each of these snapshots, and increments a counting variable for each snapshot where the network load is beyond 512 Gbps. After checking all snapshots, it checks the final count of high-load snapshots and prints out the appropriate message.

```python
# Read the number of snapshots
n_snapshots = int(input())

# Initialize a counter for high-load snapshots
high_load_snapshots = 0

# For each snapshot...
for i in range(n_snapshots):

  # Read the network load
  network_load = float(input())
  
  # If the network load is high (over 512 Gbps), increment the count
  if network_load > 512.0:
    high_load_snapshots += 1

# Now check the total count of high-load snapshots and print the appropriate message
if high_load_snapshots == 0:
  print(""Ops Normal"")
elif high_load_snapshots <= 2:
  print(""Initialize NLB"")
else:
  print(""Activate NLB"")
```

You can introduce this code to the students and walk them through it step by step to make sure they understand the logic."
262,a2_5_grades,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You are writing a program that will help your instructors analyze student
performance on an exam. Your program will ask for the number of students in
the class. It will then ask for the grade of each student (this grade does not
have to be a whole number). Your program will keep track of how many students
received less than 70 on an assignment. Your program will then print one of
the following statements.



**# of scores below 70** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | Excellent | Satisfactory | Unsatisfactory  
  


**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**INPUT** |

4  
75.6  
80.2  
95.5  
71.0

|

3  
68.2  
72.9  
95.4

|

3  
67.0  
65.5  
68.3  
  
**OUTPUT** | Excellent | Satisfactory | Unsatisfactory  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_students = int(input())

below_70 = 0  # keep track of the number of students scoring below 70

for i in range(num_students):
    grade = float(input())  # input grade for each student
    if grade < 70:  # if the score is less than 70
        below_70 += 1  # increment the counter

# based on the value of the counter print the output
if below_70 == 0:
    print(""Excellent"")
elif below_70 <= 2:
    print(""Satisfactory"")
else:
    print(""Unsatisfactory"")
"
263,a2_5_gameday,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

The Academy Athletic Director asked you are to write a program that will
determine whether or not a football game in progress should be delayed based
on current weather conditions. Your program will ask for the number of
lightning strikes occurred in the immediate area in the past thirty minutes.
It will then ask for the distance from Falcon Stadium to each lightning strike
(in miles, which do not have to be whole numbers). Your program will keep
track of how many lightning strikes are within 15 miles of the stadium
(inclusive). Your program will then print one of the following statements:

**# of lightning strikes in immediate area** | **0** | **1-3** | **> 3**  
---|---|---|---  
**Output** | All Clear | Weather Warning | Game Delay  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

4

15.0

13.2

6.5

9.8

|

3

17.8

15.1

19.0

  
  
**OUTPUT** | Game Delay | All Clear  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
lightning_strikes = int(input())
close_strikes = 0

for i in range(lightning_strikes):
  strike_distance = float(input())
  if strike_distance <= 15:
    close_strikes += 1

if close_strikes == 0:
  print(""All Clear"")
elif close_strikes <= 3:
  print(""Weather Warning"")
else:
  print(""Game Delay"")
"
264,a2_5_combat,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

You are writing a program that will determine whether or not a fighter pilot
will need to make an evasive action when enemy aircraft are near. Your program
will ask for the number of enemy planes in the area. It will then ask for the
distance between the pilot and each of the enemy planes (in miles, which do
not have to be whole numbers). Your program will keep track of how many enemy
planes are within 20 miles of the pilot (inclusive). Your program will then
print one of the following statements:

**# of Enemy Planes in Area** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | All Clear | Warning | Evasive Action  
  


**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

10.5

17.2

23.7

|

3

21.4

34.0

27.9  
  
**OUTPUT** | Warning | All Clear



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_enemies = int(input())
enemies_close = 0
for i in range(num_enemies):
    enemy_distance = float(input())
    if enemy_distance <= 20:
        enemies_close += 1

if enemies_close == 0:
    print('All Clear')
elif enemies_close <= 2:
    print('Warning')
else:
    print('Evasive Action')
"
265,a2_4_pipe,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with a Python program that already contains code to get
the following two items from the user:

  * **the_string** :  A pipe-separated string.  
Example: johnson81|4081|30no86|cj4081|Craig|Johnson|Depot|London

  * **column_to_print** :  A number indicating which item from the input string to print  
NOTE:  0 indicates the first item in the string, 1 indicates the second, etc.

Add code to this program that:

  1. Splits the the_string into separate items.
  2. Prints the number of items that result from splitting the_string (not the number of characters in the string).
  3. Prints the item indicated by the column_to_print value.

**EXAMPLE:**

If the user types:

    
    
    johnson81|4081|30no86|cj4081|Craig|Johnson|Depot|London  
    2

Your program should output:

    
    
    8  
    30no86



**HINT: A pipe is this: '|'. On most keyboards it is located on the same key
as the backslash ('\').** **If you cannot find it, ask an instructor for
help.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# This code already exists
the_string = input(""Enter a pipe-separated string: "")
column_to_print = int(input(""Enter the column to print: ""))

# Add your code here
items = the_string.split('|')

print(len(items))
print(items[column_to_print])
"
266,a2_4_hyphen,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with a Python program that already contains code to get
the following two items from the user:

  * **the_string** :  A hyphen-separated string.  
Example: johnson81-4081-30no86-cj4081-Craig-Johnson-Depot-London

  * **column_to_print** :  A number indicating which item from the string to print.  
NOTE:  0 indicates the first item in the string, 1 indicates the second, etc.

Add code to this program that:

  1. Splits the_string into separate items.
  2. Prints the number of items that result from splitting the_string (not the number of characters in the string).
  3. Prints the item indicated by the column_to_print value.

**EXAMPLE:**

If the user types:

    
    
    johnson81-4081-30no86-cj4081-Craig-Johnson-Depot-London  
    2

Your program should output:

    
    
    8  
    30no86

**HINT: A hyphen (dash) is this: '-'. On most keyboards it is located to the
right of the '0' key.** **If you cannot find it, ask an instructor for help.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
the_string = input(""Please enter the hyphen-separated string: "")
column_to_print = int(input(""Please enter the number indicating which item to print: ""))

#split the string into separate items
items = the_string.split('-')

#print the number of items
print(len(items))

#print the item indicated by the column_to_print value
print(items[column_to_print])
"
267,a2_4_hash,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with a Python program that already contains code to get
the following two items from the user:

  * **the_string** :  A hashtag-separated string.  
Example: johnson81#4081#30no86#cj4081#Craig#Johnson#Depot#London

  * **column_to_print** :  A number indicating which item from the string to print.  
NOTE:  0 indicates the first item in the string, 1 indicates the second, etc.

Add code to this program that:

  1. Splits the_string into separate items.
  2. Prints the number of items that result from splitting the_string (not the number of characters in the string).
  3. Prints the item indicated by the column_to_print value.

**EXAMPLE:**

If the user types:

    
    
    johnson81#4081#30no86#cj4081#Craig#Johnson#Depot#London  
    2

Your program should output:

    
    
    8  
    30no86

**HINT: A hashtag (pound sign) looks like this: '#'. On most keyboards it is
on the same key as the '3'. If you cannot find it, ask an instructor for
help.** ****



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Get user input
the_string = input('Enter the string: ')
column_to_print = int(input('Enter the column number: '))

# Split the string
items = the_string.split('#')

# Print number of items
print(len(items))

# Print requested item
print(items[column_to_print])
"
268,a2_3_thirteen,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.  

Write a program that prints all of the numbers between  **starting_number**
and **0** (including **0** ), counting down by **13** each time.



For example, if the user types **45** , your program should print:

    
    
    45  
    32  
    19  
    6

Similarly, if the user types **39** , your program should print:

    
    
    39  
    26  
    13  
    0

You may assume that the user will only enter positive numbers.

**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
starting_number = int(input(""Please enter a starting number: ""))

for i in range(starting_number, -1, -13):
    print(i)
"
269,a2_3_nineteen,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.  

Write a program that prints all of the numbers between  **starting_number**
and **0** (including **0** ), counting down by **19** each time.



For example, if the user types **45** , your program should print:

    
    
    45  
    26  
    7

Similarly, if the user types **57** , your program should print:

    
    
    57  
    38  
    19  
    0

You may assume that the user will only enter positive numbers.

**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
starting_number = int(input(""Enter a number: ""))

for i in range(starting_number, -1, -19): 
   print(i)
"
270,a2_3_nine,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.  

Write a program that prints all of the numbers between  **starting_number**
and  **0** (including **0** ), counting down by **9**  each time.



For example, if the user types ** 45**, your program should print:

    
    
    45  
    36  
    27  
    18  
    9  
    0

Similarly, if the user types **50** , your program should print:

    
    
    50  
    41  
    32  
    23  
    14  
    5

You may assume that the user will only enter positive numbers.

**HINT:**

  * This problem can be solved using either a  **for** or  **while** loop.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
271,a2_3_eighteen,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.  

Write a program that prints all of the numbers between  **starting_number**
and  **0**  (including **0** ), counting down by **18** each time.



For example, if the user types  **108** , your program should print:

    
    
    108  
    90  
    72  
    54  
    36  
    18  
    0

Similarly, if the user types **92** , your program should print:

    
    
    92  
    74  
    56  
    38  
    20  
    2

You may assume that the user will only enter positive numbers.

**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
starting_number = int(input(""Please enter a number: ""))
for number in range(starting_number, -1, -18):
    print(number)
"
272,a2_2_orbit,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

The oribt period of a planet can be calculated using the following formula:



`Period = (D * 3.14)/ V`





In this formula:

  * **D**  is the diameter of the orbit path (a floating point number)
  * **V**  is the velocity of the planet (a floating point number)



Write a function called  **orbit_period**  that takes **D**  and **V**  as
parameters (in that order), and  **returns**  the orbit period.  



**NOTES:**

  * You do NOT need to call this function.  Simply define it.





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def orbit_period(D, V):
    return (D * 3.14) / V
"
273,a2_1_right_triangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_hypotenuse, which
takes two parameters:

  * **side_1**
  * **side_2**

Call this function and pass it  **15**  for  **side_1** , and  **6.786**  for
**side_2**.  Store the result in a variable called  **result**.  Do not print.
Simply call the function, and store the returned value in the variable
**result**.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
result = calculate_hypotenuse(15, 6.786)
"
274,a1_6_pilot_quals,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

C-130 Pilot qualifications usually depend on a pilot's flight experience in
terms of flight hours.

**C-130 Pilot Qualification** | **Flight Hours**  
---|---  
Upgrade Pilot | 600  
Aircraft Commander | 800  
Formation Lead | 1000  
Instructor Pilot | 1250  
Evaluator Pilot | 1500  
  
  
Write a Python program that asks the user to enter the number of flight hours
they currently have (does not need to be a whole number). Then, referencing
the table above, print out all qualifications they should have achieved in the
aircraft (one per line). If the their experience in the C-130 is more than 600
flight hours, output ""Co-Pilot"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 1996 | 1156.7 | 535.4  
**Output** |

Upgrade Pilot  
Aircraft Commander  
Formation Lead  
Instructor Pilot  
Evaluator Pilot

|

Upgrade Pilot  
Aircraft Commander  
Formation Lead

| Co-Pilot  
  
NOTE: The qualifications can be listed in any order, so long as only the ones
in range are printed.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
flight_hours = float(input(""Enter your flight hours: ""))

if flight_hours >= 600:
    print(""Upgrade Pilot"")
    if flight_hours >= 800:
        print(""Aircraft Commander"")
        if flight_hours >= 1000:
            print(""Formation Lead"")
            if flight_hours >= 1250:
                print(""Instructor Pilot"")
                if flight_hours >= 1500:
                    print(""Evaluator Pilot"")

else:
    print(""Co-Pilot"")
"
275,a1_6_payload,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:**

The USAF is known for its massive cargo transport capabilities. Below are the
names of 5 aircraft, as well as their maximum payload capacity



**Cargo Aircraft**

|

**Maximum Load (inclusive, in Lbs. )**  
  
---|---  
  
C-5 Galaxy

|

285000  
  
C-17 Globemaster

|

170900  
  
KC-10 Extender

|

169000  
  
C-130 Hercules

|

42000  
  
V-22 Osprey

|

6000  
  
  
Write a Python program that asks the user to enter the payload weight (in
Lbs.) that needs to be moved. Then, referencing the table, print out all of
the Aircraft that could potentially carry that payload (one per line). If no
aircraft can carry the payload, output ""Too Heavy for Airlift"".



**EXAMPLES:**

  |

**Example 1**

|

**Example 2**

|

**Example 3**  
  
---|---|---|---  
  
**Input**

|

150000

|

250000

|

300000  
  
**Output**

|

C-5 Galaxy

C-17 Globemaster

KC-10 Extender

|

C-5 Galaxy

|

Too Heavy for Airlift  
  
NOTE: The aircraft can be listed in any order, so long as only the ones
capable of the lift are printed.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
aircrafts = {
    ""C-5 Galaxy"" : 285000,
    ""C-17 Globemaster"" : 170900,
    ""KC-10 Extender"" : 169000,
    ""C-130 Hercules"" : 42000,
    ""V-22 Osprey"" : 6000 };

payload = int(input(""Enter the payload weight in lbs: ""))

def print_aircrafts(payload):
    selected_aircrafts = [aircraft for aircraft, capacity in aircrafts.items() if capacity >= payload]

    if len(selected_aircrafts) == 0:
        print(""Too Heavy for Airlift"")

    for aircraft in selected_aircrafts:
        print(aircraft)
        
print_aircrafts(payload)
```
"
276,a1_6_missilethreat,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

According to intelligence reports, the North Korean military uses at least 5
different classes of Ballistic Missiles. The names of these missiles, as well
as their maximum theoretical range, are provided below:

**Missile Class** | **Maximum Range (inclusive, in Kilometers)**  
---|---  
Hwasong-6 | 500  
KN-11 | 1200  
Musudan BM-25 | 4000  
Hwasong-14 | 8000  
Taepodong-2 | 12000  
  
  
Write a Python program that asks the user to enter the distance to a potential
target (in Kilometers). Then, referencing the table, print out all of the
Missile Classes that could potentially reach the target (one per line). If no
missiles are in range, output ""Not in range"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 1800 | 8000 | 18000  
**Output** | Musudan BM-25  
Hwason-14  
Taepodong-2 |

Hwasong-14  
Taepodong-2

| Not in range  
  
NOTE: The missiles can be listed in any order, so long as only the ones in
range are printed.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# function that checks if the missile can reach the target
def can_reach(target, missile_range):
    return target <= missile_range

# user enters the distance to the target
target = int(input())

# dictionary of missiles and their ranges
missiles = {'Hwasong-6': 500, 'KN-11': 1200, 'Musudan BM-25': 4000, 'Hwasong-14': 8000, 'Taepodong-2': 12000}

# list to hold the missiles that can reach the target
in_range = []

# iterate over the missiles and check if they can reach the target
for missile, missile_range in missiles.items():
    if can_reach(target, missile_range):
        in_range.append(missile)

# if no missile can reach the target print ""Not in range""
if not in_range:
    print(""Not in range"")
else:
    for missile in in_range:
        print(missile)
  "
277,a1_6_evacuation,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
PROBLEM STATEMENT:  

Terrorist groups in the past have created improvised explosive devices in
various shapes and sizes. According to the National Counterterrorism Center,
the following evacuation distances are appropriate for certain explosive
devices.

Explosive Container

|

Evacuation Distance (inclusive, in Feet)  
  
---|---  
  
Pipe Bomb

|

850  
  
Suitcase Bomb

|

1850  
  
Sedan

|

2000  
  
Cargo Van

|

2750  
  
Semi-Trailer

|

7000  
  
  
Write a Python program that asks the user to enter a distance to a device (in
feet). Then, referencing the table, print out all of the explosive devices
that could potentially reach a target at the specified distance (one per
line). If no explosives can reach the specified distance, output ""Not in
range"".

EXAMPLES:

|

Example 1

|

Example 2

|

Example 3  
  
---|---|---|---  
  
Input

|

1900

|

2500

|

8000  
  
Output

|

Sedan  
Cargo Van  
Semi-Trailer

|

Cargo Van  
Semi-Trailer

|

Not in range  
  
NOTE: The devices can be listed in any order, so long as only the ones in
range are printed.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
distance = int(input())

explosives = {
    'Pipe Bomb': 850,
    'Suitcase Bomb': 1850,
    'Sedan': 2000,
    'Cargo Van': 2750,
    'Semi-Trailer': 7000
}

in_range = [explosive for explosive, range in explosives.items() if range >= distance]

if in_range:
    for explosive in in_range:
        print(explosive)
else:
    print('Not in range')
"
278,a1_6_digitalstorage,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Assume someone takes hundreds of photos on their smartphone every week. They
are seeking the best and least expensive alternatives to store/share their
images because their phone's storage capacity is limited. Using the table
below, determine which storage options they should consider, assuming each
image has an average file size of 6 MB.



**Storage Option** | **Short Name** | **Number of Images (inclusive)**  
---|---|---  
CD-ROM (700 MB) | CD | 116  
DVD-ROM (4.7 GB) | DVD | 780  
USB Thumb Drive (16 GB) | USB Small | 2660  
USB Thumb Drive (64 GB) | USB Large | 10600  
Portable Hard Drive (256 GB) | Portable HDD | 42600  
  
  
Write a Python program that asks the user to enter the number of images that
need to be shared/stored (non-negative, whole number). Then, referencing the
table above, print out all the storage options (by Short Name) capable of
holding that many images (one per line). If no storage options are capable of
storing that many images, output ""Consider Cloud Storage"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 2000 | 4000 | 45000  
**Output** | USB Small  
USB Large  
Portable HDD |

USB Large  
Portable HDD

| Consider Cloud Storage  
  
NOTE: The devices can be listed in any order, so long as only the ones in
range are printed.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def storage_options(num_images):

    options = [
        (""CD"", 116),
        (""DVD"", 780),
        (""USB Small"", 2660),
        (""USB Large"", 10600),
        (""Portable HDD"", 42600),
    ]
    
    available_options = [option for option, capacity in options if num_images <= capacity]
    
    if not available_options:
        print(""Consider Cloud Storage"")
    else:
        for option in available_options:
            print(option)
  
num_images = int(input(""Enter the number of images: ""))
storage_options(num_images)
"
279,a1_6_broadband,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Choosing the right broadband speed for your internet connection depends on
which online activities you plan on engaging while online. Using the table
below, determine which activities are possible with a given broadband speed,
given in Kilobits per second (Kbps).



**Activity** | **Short Name** | **Minimum Broadband Speed  
(inclusive, in Kbps)**  
---|---|---  
Social Media | Social Media | 1000  
Multiplayer Gaming | Gaming | 4000  
HD Video Conferencing | Video Conferencing | 6000  
File Downloading | File Downloads | 10000  
Stream Ultra HD 4K Video | HD 4K Video | 25000  
  
  
Write a Python program that asks the user to enter the broadband speed in
Kbps. Then, referencing the table above, print out all the activities (by
Short Name) that can be achieved using that speed (one per line). If the
broadband speed is less than 1000 Kbps, output ""Upgrade to Broadband"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 8500 | 5000 | 750  
**Output** |

Social Media  
Gaming  
Video Conferencing

|

Social Media  
Gaming

| Upgrade to Broadband  
  
NOTE: The activities can be listed in any order, so long as only the ones in
range are printed.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
broadband_speed = int(input('Enter the broadband speed in Kbps: '))
activities = {'Social Media': 1000, 'Gaming': 4000, 'Video Conferencing': 6000, 'File Downloads': 10000, 'HD 4K Video': 25000}

if broadband_speed < 1000:
    print('Upgrade to Broadband')
else:
    for activity, speed in activities.items():
        if broadband_speed >= speed:
            print(activity)
"
280,a1_5_scuba,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Recreational SCUBA divers have to plan out how many air tanks they will need
in order to safely dive. The amount varies per diver because each person
consumes air at a different rate. This rate is commonly called Surface Air
Consumption. You want to figure whether you can afford the air requirements
for the trips that you are planning.

Write an algorithm that asks for:

  *     * The total dive time for the trip in minutes 
    * The air budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The number of liters needed for the project.
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of compressed air is greater than or not greater than the budget, respectfully.



Assume that your Surface Air Consumption is **14.5** liters/minute, and that
air costs **2 cents** per liter. You may assume that all inputs are non-
negative numbers.



**EXAMPLES:**



  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 180  
70 |

120  
30  
  
**Output** | 2610.0  
52.2  
Within Budget | 1740.0  
34.800000000000004  
Over Budget  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def dive_plan(dive_time, air_budget):
    # Constants
    Surface_air_consumption = 14.5 # liters/min
    Air_cost = 0.02 # dollars/liter

    # Calculations
    liters_needed = Surface_air_consumption * dive_time
    estimated_cost = Air_cost * liters_needed

    # Check budget
    if estimated_cost > air_budget:
        budget_status = ""Over Budget""
    else:
        budget_status = ""Within Budget""

    # Output
    print(liters_needed)
    print(estimated_cost)
    print(budget_status)

dive_time = int(input())
air_budget = int(input())
dive_plan(dive_time, air_budget)
"
281,a1_5_runway,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

The CSAF has authorized new runways for any base that can accomplish the
project under their current budget. The new runways will be solid concrete
with their lengths measured in meters.

Write an algorithm that asks for:

  *     * The length of runway to be built (in meters)
    * The base's budget (in dollars--do not worry about the dollar sign, do not round to the nearest)



Your program should then output:

  *     * The amount of concrete (in tons) needed for the base's runway
    * The estimated cost (in dollars--do not output a dollar sign)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of materials is greater than or not greater than the base's budget, respectfully.

Assume that each meter of runway requires **  2.5** tons of concrete to build,
and that concrete costs  **$75.50**  per ton. You may assume that all inputs
are non-negative numbers.



**EXAMPLES:**

  |

Example 1

|

Example 2  
  
---|---|---  
  
Input

|

2000  
400000

|

1500  
250000  
  
Output

|

5000.0  
377500.0  
Within Budget

|

3750.0  
283125.0  
Over Budget  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def runway(length, budget):
    ton_of_concrete = length * 2.5
    cost_of_concrete = ton_of_concrete * 75.5
    status = ""Within Budget"" if cost_of_concrete <= budget else ""Over Budget""
    print(ton_of_concrete)
    print(cost_of_concrete)
    print(status)

runway(2000, 400000)
runway(1500, 250000)
"
282,a1_5_printer,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

A 3D printer converts computer generated models into physical objects by
heating and extruding a filament known as Polylactic Acid (PLA). PLA, normally
sold in spools, is directly fed to the printer head like a thread. You want to
determine if you can afford to 3D print a project given its volume of
material.

Write an algorithm that asks for:

  *     * The volume of the 3D model to be printed (in cm3)
    * The user's budget (in dollars--do not worry about the dollar sign, do not round to the nearest)



Your program should then output:

  *     * The length of material (in meters) needed to produce the object
    * The estimated cost (in dollars--do not output a dollar sign)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of materials is greater than or not greater than the user's budget, respectfully.

Assume that each cm3 requires **  0.312** meters of PLA to print, and that PLA
filament costs  **$0.063**  per meter. You may assume that all inputs are non-
negative numbers.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 15.0  
2.5 | 500.0  
5.0  
Output | 4.68  
0.29484  
Within Budget | 156.0  
9.828  
Over Budget  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code
def main():
    # Take input for the volume of 3D model and budget
    vol = float(input())
    budget = float(input())

    # Calculate the length and cost
    length = vol*0.312
    cost = length*0.063
    
    # print length and cost
    print(""%.2f"" % length)
    print(""%.5f"" % cost)

    # check budget and print accordingly
    if cost <= budget:
        print(""Within Budget"")
    else:
        print(""Over Budget"")

main()
"
283,a1_5_paint,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You are tasked to paint a large wall and need to see if your unit can afford
the paint for the project

Write an algorithm that asks for:

  *     * The size of the wall in square feet
    * The budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The amount of paint required to cover the wall
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of paint is greater than or not greater than the budget, respectfully.

Assume that a gallon of paint covers **15** square feet, and that the current
price of paint is  **$12.23**  per gallon. You may assume that all inputs are
non-negative numbers. You should also assume that you can purchase portions of
gallons of paint so do NOT round up to the nearest full gallon.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 120.0  
900.0 |

750.0  
100.0  
  
Output | 8.0  
97.84  
Within Budget | 50.0  
611.5  
Over Budget  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def main():
    wallSize = float(input())
    budget = float(input())
    wallSize = wallSize / 15
    cost = wallSize * 12.23

    if cost > budget:
        print(wallSize)
        print(cost)
        print('Over Budget')
    else:
        print(wallSize)
        print(cost)
        print('Within Budget')
main()
"
284,a1_5_fueldepot,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Fuel in the military is essential to conducting operations. Balancing mission
requirements against budgetary constraints is a constant concern.

Write an algorithm that asks for:

  *     * The distance to a target in miles
    * The budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The amount of fuel (in gallons) needed to reach the target
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of fuel is greater than or not greater than the budget, respectfully.

Assume that the convoy can get **  12.5** miles to the gallon, and that the
current price of fuel is  **$3.73**  per gallon. You may assume that all
inputs are non-negative numbers.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 130.7  
50.50 |

750  
100  
  
Output | 10.456  
39.0009  
Within Budget | 60.0  
223.80  
Over Budget  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def main():
    # receive input
    miles = float(input())
    budget = float(input())
    # calculate fuel and costs
    fuel = miles / 12.5
    cost = fuel * 3.73
    # determine if within budget
    if cost > budget:
        budget_status = ""Over Budget""
    else:
        budget_status = ""Within Budget""
    # print outputs
    print(fuel)
    print(cost)
    print(budget_status)

if __name__ == ""__main__"":
    main()
"
285,a1_4_sickness,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Body temperature (in Fahrenheit)
  * Body aches ( **a string** , which will be either ""yes"" or ""no"")
  * Loss of smell ( **a string** , which will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine a person's
risk of having an infectious disease:

  1. If the person's temperature is above 100.4 degrees, print ""High Risk""
  2. If the person is experiencing both body aches and loss of smell, print ""High Risk""
  3. For all other situations, print ""Low Risk""



**EXAMPLE:  
**

| **Example 1** | **Example 2**  
---|---|---  
Input |

99.0  
yes  
yes

| 100.4  
no  
yes  
Output | High Risk | Low Risk  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
#input from user
body_temp = float(input(""Enter your body temperature: ""))
body_aches = str(input(""Do you have body aches? ""))
loss_of_smell = str(input(""Have you experienced a loss of smell? ""))

#check the risk
if body_temp > 100.4:
    print(""High Risk"")
elif body_aches == ""yes"" and loss_of_smell == ""yes"":
    print(""High Risk"")
else:
    print(""Low Risk"")
"
286,a1_4_run,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Outside Temperature (in Fahrenheit)
  * Is it daytime? **(a string** that will be either ""yes"" or ""no"")
  * Is it raining? ( **a string** that will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine if you go on
a run:

  1. If the outside temperature is above 95 degrees, print ""Do Not Run""
  2. If it is daytime and it is NOT raining, print ""Go Run""
  3. For all other situations, print ""Do Not Run""



**EXAMPLE:  
**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
Input |

99.0  
yes  
no

| 80  
yes  
no | 75  
no  
yes  
Output | Do Not Run | Go Run | Do Not Run  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code:

def main():

    outside_temperature = float(input(""What is the Outside Temperature(in Fahrenheit)? "")) 
    is_daytime = input(""Is it daytime? (yes/no) "") 
    is_raining = input(""Is it raining? (yes/no) "") 

# Add your code here:

    if outside_temperature > 95:
        print(""Do Not Run"")
    elif is_daytime == 'yes' and is_raining == 'no':
        print(""Go Run"")
    else:
        print(""Do Not Run"")


if __name__ == ""__main__"":
    main()
"
287,a1_4_pt,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Outside Temperature (in Fahrenheit)
  * Is it raining? ( **a string** , which will be either ""yes"" or ""no"")
  * Winds over 20 knots? ( **a string** , which will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine if PT is
cancelled or a go:

  1. If the outside temperature is above 90 degrees, print ""PT Cancelled""
  2. If it is raining and there are winds over 20 knots print ""PT Cancelled""
  3. For all other situations, print ""PT is a Go""



**EXAMPLE:  
**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
Input |

99.0  
no  
no

| 85  
yes  
yes | 85  
no  
yes  
Output | PT Cancelled | PT Cancelled | PT is a Go  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def check_PT(outside_temp, is_raining, wind_over_20):
    if outside_temp > 90:
        print(""PT Cancelled"")
    elif is_raining == ""yes"" and wind_over_20 == ""yes"":
        print(""PT Cancelled"")
    else:
        print(""PT is a Go"")

outside_temp = float(input(""Enter the outside temperature (in Fahrenheit): ""))
is_raining = input(""Is it raining? (yes/no): "")
wind_over_20 = input(""Are the winds over 20 knots? (yes/no): "")
check_PT(outside_temp, is_raining, wind_over_20)
"
288,a1_4_dog,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Outside Temperature (in Fahrenheit)
  * Is it raining? ( **a string** that will be either ""yes"" or ""no"")
  * Is it daytime? ( **a string** that will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine if the dog
is outside:

  1. If the outside temperature is above 85 degrees, print ""Dog Inside""
  2. If it is raining outside and it is NOT daytime, print ""Dog Inside""
  3. For all other situations, print ""Dog Outside""



**EXAMPLE:  
**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
Input |

99.0  
no  
yes

| 80  
yes  
no | 75  
no  
yes  
Output | Dog Inside | Dog Inside | Dog Outside  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
outside_temp = float(input(""Enter outside temperature: ""))
is_raining = input(""Is it raining outside? (yes/no): "")
is_daytime = input(""Is it daytime? (yes/no): "")

if (outside_temp > 85) or (is_raining == ""yes"" and is_daytime == ""no""):
    print(""Dog Inside"")
else:
    print(""Dog Outside"")
"
289,a1_3_vspeed,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

You have been provided with a partially complete Python program that contains
2 variables.

  1. speed_of_vehicle(input by the user in mph)
  2. speed_limit (already initialized in mph)



Add code to the end of this program that will output:

  *     *         Too fast, slow down!

If the vehicle speed is higher than the speed limit  
  

    *         Maintain Speed

If the vehicle speed is equal to the speed limit  
  

    *         Too slow, speed up!

If the vehicle speed is lower than the speed limit  
  



**EXAMPLES:** ****

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 80 | 65 | 40  
**Output** | Too fast, slow down! | Maintain Speed | Too slow, speed up!



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code :
speed_of_vehicle = int(input(""Enter the speed of vehicle(mph) : ""))
speed_limit = 65

# Solution : 

if speed_of_vehicle > speed_limit:
    print('Too_fast, slow down!')
elif speed_of_vehicle == speed_limit:
    print('Maintain Speed')
else: 
    print('Too slow, speed up!')
"
290,a1_3_speed,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. aircraft_speed (input by the user in mph)
  2. speed_of_sound (already initialized in mph)



Add code to the end of this program that will output:

  *     *         Faster than Mach 1 

If the aircraft speed is higher than the speed of sound  
  

    *         Mach 1 

If the aircraft speed is equal to the speed of sound  
  

    *         Slower than Mach 1 

If the aircraft speed is lower than the speed of sound  
  



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 800 | 767.269 | 450.8  
**Output** | Faster than Mach 1 | Mach 1 | Slower than Mach 1



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
aircraft_speed = float(input(""Enter aircraft speed in mph: ""))
speed_of_sound = 767.269 # Speed of sound in mph at sea level

if aircraft_speed > speed_of_sound:
    print(""Faster than Mach 1"")
elif aircraft_speed == speed_of_sound:
    print(""Mach 1"")
else:
    print(""Slower than Mach 1"")
"
291,a1_3_satellite,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

You have been provided with a partially complete Python program that contains
2 variables.

  1. satellite_speed (input by the user in km/s)
  2. orbit_speed (already initialize in km/s)



Add code to the end of this program that will output:

    *       *             Crashed to Earth

If the speed of the satellite is below the orbital speed.

      *             In Orbit

If the speed of the satellite is equal to the orbital speed.

      *             Lost to Space

If the speed of the satellite is above the orbital speed.



** **

**EXAMPLES:**

|

**Example 1**

|

**Example 2**

|

**Example 3**  
  
---|---|---|---  
  
**Input**

|

3

|

7.8

|

9  
  
**Output**

|

Crashed to Earth

|

In Orbit

|

Lost to Space  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
satellite_speed = float(input())
orbit_speed = 7.8

if satellite_speed < orbit_speed:
  print('Crashed to Earth')
elif satellite_speed == orbit_speed:
  print('In Orbit')
else:
  print('Lost to Space')
"
292,a1_3_goldilocks,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. porridge_temp (input by the user in °F)
  2. correct_temp (already initialized in °F)



Add code to the end of this program that will output:

  *     *         Too Hot 

When the porridge temp is above the correct temperature.  
  

    *         Just Right 

When the porridge temp is equal to the correct temperature  
  

    *         Too Cold 

When the porridge temp is below the correct temperature.  
  



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 110 | 105 | 98  
**Output** | Too Hot | Just Right | Too Cold



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
porridge_temp = int(input(""Enter the temperature of the porridge: ""))
correct_temp = 105

if porridge_temp > correct_temp:
    print(""Too Hot"")
elif porridge_temp == correct_temp:
    print(""Just Right"")
else:
    print(""Too Cold"")
"
293,a1_3_cards,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. number_of_cards (input by the user)
  2. cards_needed (already initialized)



Add code to the end of this program that will output whether you have enough
cards to make a full deck of 52 cards (already initialized):

  *     *         Too many cards 

If the number of cards is more than the cards needed  
  

    *         Full deck

If the number of cards is equal to the cards needed  
  

    *         Not enough cards 

If the number of cards is fewer than the cards needed  
  



**EXAMPLES:**



  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 57 | 52 | 38  
**Output** | Too many cards | Full deck | Not enough cards



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
number_of_cards = int(input())
cards_needed = 52

# your code here
if number_of_cards > cards_needed:
  print(""Too many cards"")
elif number_of_cards == cards_needed:
  print(""Full deck"")
else:
  print(""Not enough cards"")
"
294,a1_3_arrow,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. arrow_height (input by the user in feet)
  2. apple_height (already initialized in feet)



Add code to the end of this program that will output:

  *     *         Arrow too high 

If the arrow height is higher than the apple  
  

    *         Direct hit

If the arrow height is equal to the apple  
  

    *         Arrow too low 

If the arrow is lower than the apple  
  



**EXAMPLES:**



  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 7.1 | 6.2 | 5.9  
**Output** | Arrow too high | Direct hit | Arrow too low



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# this is the skeleton code
arrow_height = float(input(""Enter the arrow height (in feet): ""))
apple_height = 6.2

# add your code here
if arrow_height > apple_height:
    print(""Arrow too high"")
elif arrow_height == apple_height:
    print(""Direct hit"")
else:
    print(""Arrow too low"")
"
295,a1_2_spheres,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write a program that calculates the volume of a multiple spheres.  The
template provided to you defines 2 variables:

  * **radius**  \- radius of the sphere
  * **total**  \- The number of spheres



Calculate the volume, using the following formula:

    
    
    V=(4/3)r3t

Where . . .

  *     * ****  is the mathematical constant (see the HINT for more details)
    * **r**  is the radius of the cylinder
    * **t** is the number of spheres



Store the answer in a variable called **  volume**.  You do not need to print
the variable.



**HINT:** ****

The math module contains the mathematical constant, .  To use it, simply type
**math.pi**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

# radius and total are already defined
# Calculate volume
volume = (4/3) * math.pi * (radius**3) * total
"
296,a1_2_radius,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write a program that calculates the area of multiple circles.  The template
provided to you defines 2 variables:

  * **radius**  \- radius of the circle
  * **total**  \- The number of circles



Calculate the area, using the following formula:

    
    
    A=r2t

Where . . .

  *     * ****  is the mathematical constant (see the HINT for more details)
    * **r** is the radius of the circle
    * **t** is the number of circles



Store the answer in a variable called **area**.  You do not need to print the
variable.



**HINT:** ****

The math module contains the mathematical constant, .  To use it, simply type
**math.pi**

Variables

Variable | Min | Max | Decimal Places  
---|---|---|---  
  
Formulas

0

0

Possible Solutions

Show Answers for



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

def calculate_area(radius, total):
    area = math.pi * (radius**2) * total
    return area

# You can test the function with the following code:
radius = 5
total = 10
print(calculate_area(radius, total))
"
297,a1_2_interest,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the amount of money a person
will earn from an investment.  The template provided to you defines 3
variables:

  * **principal_amount**  \- The principal (i.e., starting) amount of money that a person has
  * **interest_rate**  \- The interest rate
  * **time**  \- The length of the investment (in months)



Calculate the amount of money earned, using the following formula:

    
    
    amount = pert

Where . . .

  *     * **p**  is the principal amount
    * **e**  is the mathematical constant (approximately equal to 2.718... -- see the HINT for more details)
    * **r**  is the interest rate
    * **t**  is the time



Store the answer in a variable called  **amount.   **You do not need to print
the variable.



**HINT:** ****

The math module contains the mathematical constant, e.  To use it, simply type
**math.e**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

# Provided variables:
principal_amount = 0  # Replace '0' with your desired principal amount
interest_rate = 0  # Replace '0' with your desired interest rate
time = 0  # Replace '0' with your desired time in months

# Calculated variables
amount = principal_amount * math.e**(interest_rate * time)

"
298,a1_2_cones,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write a program that calculates the volume of multiple identical cones.  The
template provided to you defines 3 variables:

  * **radius**  \- radius of the cones
  * **height** \- height of the cones
  * **total**  \- The number of cones



Calculate the volume, using the following formula:

    
    
    V =  r2(h/3)t

Where . . .

  *     * ****  is the mathematical constant (see the HINT for more details)
    * **r**  is the radius of the cones
    * **h  **is the height of the cones
    * **t**  is the total amount of cones



Store the answer in a variable called **volume**.  You do not need to print
the variable.



**HINT:** ****

The math module contains the mathematical constant, .  To use it, simply type
**math.pi**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

# the providing variables
radius = None
height = None
total = None

# calculating the volume
volume = math.pi * radius ** 2 * (height / 3) * total
"
299,a1_2_circles,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write a program that calculates the area of multiple circles.  The template
provided to you defines 2 variables:

  * **radius**  \- radius of the circle
  * **total**  \- The number of circles



Calculate the area, using the following formula:

    
    
    A=r2t

Where . . .

  *     * ****  is the mathematical constant (see the HINT for more details)
    * **r** is the radius of the circle
    * **t** is the number of circles



Store the answer in a variable called **area**.  You do not need to print the
variable.



**HINT:** ****

The math module contains the mathematical constant, .  To use it, simply type
**math.pi**

Variables

Variable | Min | Max | Decimal Places  
---|---|---|---  
  
Formulas

0

0

Possible Solutions

Show Answers for



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

def calculate_area(radius, total):
    area = radius**2 * math.pi * total
    return area

# Set radius and total then call the function to calculate areas
radius = 5
total = 10
area = calculate_area(radius, total)

"
300,a1_1_cadet,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write the Python code needed to get three values from the user:

  1. A string representing the users name.  Store this value in a variable called **cadet** **_name**
  2. A floating point value representing their height in meters.  Store this value in a variable called **cadet_height**
  3. An integer representing their weight.  Store this value in a variable called **cadet_weight**

**IMPORTANT:**   Your template file contains a print statement that combines
these values to produce an output (see Example).   **Do not modify this
line.**   Simply add your input statements in the space provided.



**EXAMPLE:** ****

If the user types ""Snuffy"", 2.1, and 185, your program should print:

    
    
    Cadet Snuffy is 2.1 meters tall and weighs 180 lbs.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
cadet_name = input()
cadet_height = float(input())
cadet_weight = int(input())

print(""Cadet "" + cadet_name + "" is "" + str(cadet_height) + "" meters tall and weighs "" + str(cadet_weight) + "" lbs."")
"
301,PA2_practice4,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `fuelprices.csv` that contains
monthly gasoline prices from 2006 - 2012. Here is a typical line from the
dataset (each line ends with the newline \n character):

`1/1/2006 0:00,Regular,2.314`



Each position in the line (separated by a comma) represents a different data
element, or column. The following table shows how the above line can be
interpreted:

| Day | Gas Type | Price (in Dollars)  
---|---|---|---  
Value | 1/1/2006 0:00 | Regular | 2.314  
  


Write a Python program that asks the user for:

  * A Gas Type (e.g., Regular)



Your program should then read the file and output:

  * The average price of gas for that gas type





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def main():
    gas_type = input('Enter a Gas Type: ')

    total = 0
    count = 0

    with open('fuelprices.csv', 'r') as fp:
        for line in fp:
            cols = line.rstrip().split(',')
            if cols[1] == gas_type:
                total += float(cols[2])
                count += 1
    average_price = total / count
    print('The average price of', gas_type, 'gas is', average_price)

main()
"
302,PA2_practice3,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You are writing a program to analyze the BMI of cadets.  Write a program
that asks for the number of cadets, and then gets that many weights and
heights (alternating, a weight then the corresponding height, in that order).
Your program should then output the number of thin, healthy, overweight, and
obese cadets (based on their BMI), using the following formula and table as a
guide:



**BMI = 703 * (weight / height 2)**



**Rating** | **BMI**  
---|---  
Thin | less than 18.5  
Healthy | at least 18.5 but less than 25  
Overweight | at least 25 but less than 30  
Obese | 30 or more  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

3

180  
60  
149  
68  
168  
72

|

4

139  
71  
141  
75  
191  
62  
176  
58

|

7

194  
70  
159  
66  
167  
63  
173  
75  
161  
66  
186  
72  
131  
60  
  
Outputs | 0  
2  
0  
1 | 1  
1  
0  
2 | 0  
1  
6  
0



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_cadets = int(input())

thin = 0
healthy = 0
overweight = 0
obese = 0

for _ in range(num_cadets):
  weight = int(input())
  height = int(input())

  bmi = 703 * (weight / (height * height))

  if bmi < 18.5:
    thin += 1
  elif 18.5 <= bmi < 25:
    healthy += 1
  elif 25 <= bmi < 30:
    overweight += 1
  elif bmi >= 30:
    obese += 1

print(thin)
print(healthy)
print(overweight)
print(obese)
"
303,PA2_practice2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a function: get_value(n). Your task is to call
this function 6 times.

Get a number from the user (`x`), and print the `x` , `x + 1`, `x + 2`, ... `x
+ 5` values that result from calling get_value() with x to x+5  (i.e., you
should print 6 numbers total).



**HINTS:**

  * You should call this function from inside a loop passing a variable that increases by 1 each loop
  * If the user enters a 2, you should call `get_value(2)`, `get_value(3)`, up to `get_value(7)` and print the results of each call (5, 7, 9, 11, 13, 15) 



**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | 2 | 4 | 11  
Outputs | 5  
7  
9  
11  
13  
15 | 9  
11  
13  
15  
17  
19 | 23  
25  
27  
29  
31  
33



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def main():
    x = int(input())
    
    for i in range(x, x+6):
        print(get_value(i))
```
This solution assumes that `get_value(n)` is already defined elsewhere in the code to get some output with `n` as input. In the example `get_value(n)` was assumed to give the output `n*2+1`. The few sentences before the skeleton code in this problem description were more about setting the context, and are not going to influence the solution code.

Notice that here we are converting `x` to integer as Python takes command-line inputs as string by default."
304,PA2_practice1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Define a function called `add_values`. The function should take 3
parameters (x, y, z), and return the sum of these values.



**NOTES:**

  * You do not need to call the function.  Simply define it.





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def add_values(x, y, z):
    return x + y + z
"
305,lsn9_triangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a function that computes the area of a triangle. You will name your
function `area_triangle()`. It has two parameters, the height of the triangle,
`height`, and the length of the base, `base`. The `area_triangle()` function
will print the area of the triangle.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
submit to the server for grading, only the function will be tested.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def area_triangle(height, base):
    # Compute the area of the triangle
    area = (height * base) / 2
    # Print the result
    print(area)
```
You could also test this function by using this piece of code:

"
306,lsn9_skill3,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Define a function called `print_hello()`. Your function should, when
called, simply print out a message of your choosing that would be a greeting
to someone.

**IMPORTANT NOTE:**  
Functions only run when a program calls them. For the purposes of this
exercise, you do not need to call the function. If you don't, however, nothing
will appear on the screen when you run it in Thonny.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def print_hello():
    print(""Hello, how are you?"")
"
307,lsn9_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_multiple_trees()` that
outputs a tree using ASCII art. Unlike the previous problem, this function
accepts a parameter that tells it how many trees to draw.

Write a program that:

  1. Gets an integer from the user and stores it in a variable. You can name this variable whatever you want.
  2. Calls the function, and passes the variable to it. 

Remember that ""passing a value"" to a function simply means putting the number
inside the parenthesis when you call it.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def draw_multiple_trees(n):
  # Assumes this function is already defined
  for i in range(n):
    print(""  *  "")
    print("" *** "")
    print(""*****"")
    print(""  *  "")

# Start of the solution
number_of_trees = int(input(""Please enter the number of trees you want to draw: ""))
draw_multiple_trees(number_of_trees)
"
308,lsn9_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_tree()` that prints a
tree using ASCII art:

    
    
     *  
     ***  
    *****  
     |

Call this function 3 times.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def draw_tree():
    print(' * ')
    print('***')
    print('*****')
    print(' | ')

# Call the function 3 times
draw_tree()
draw_tree()
draw_tree()
"
309,lsn9_imagesize,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
PROBLEM STATEMENT:  
Write a function that computes the size of an uncompressed image. You will
name your function calculate_size_of_image(), and it will have three
parameters: the width of the image, the height of the image, and the bit depth
(i.e., # of bits per pixel).

The function should print the size of the image in kilobytes.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_size_of_image(width, height, bit_depth):
    total_bits = width * height * bit_depth
    total_bytes = total_bits / 8
    total_kilobytes = total_bytes / 1024
    print(total_kilobytes)
"
310,lsn9_callme,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with three functions. Open the template file, and
perform the following tasks: **  
**

  * **Task 1:** Ask the user to enter a width and height. Do **NOT** assume they are whole numbers. Call area_rectangle and give it the user values
  * **Task 2:** Ask the user to enter a string. Call print_backwards and give it the user value
  * **Task 3:** You have been provided with a variable called my_number. Call positive_or_negative and give it the variable



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# define the functions
def area_rectangle(width, height):
    return width*height
    
def print_backwards(some_string):
    return some_string[::-1]

def positive_or_negative(some_number):
    if some_number > 0:
        return ""Positive""
    elif some_number < 0:
        return ""Negative""
    else:
        return ""Zero""

# Task 1
width = float(input(""Please enter a width: ""))
height = float(input(""Please enter a height: ""))
print(area_rectangle(width, height))

# Task 2
user_string = str(input(""Please enter a string: ""))
print(print_backwards(user_string))

# Task 3
my_number = # assume this value is provided to you
print(positive_or_negative(my_number))
"
311,lsn7_triangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.




**PROBLEM STATEMENT:  
**

Write an algorithm that asks the user for X and Y coordinates of a single
point (the coordinates of the top left point on the triangle), the length of
the base, and the height of a right triangle. Then, open a graphics window and
draw the triangle. The area of the triangle is should be displayed at the
bottom center of the window in black.



**HINTS:**

  * Make sure you get the user input BEFORE you open the window. Otherwise, the program will freeze.
  * The `draw_text` function will draw text on a screen. Don't worry about getting the text EXACTLY in the center (it's hard!).





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import turtle

# Welcome message
print(""This program will draw a right triangle."")
print(""Enter the coordinates for top left corner of the triangle:"")

# Get user's input for X and Y coordinates
x = int(input(""Enter X-coordinate: ""))
y = int(input(""Enter Y-coordinate: ""))

# Get user's input for base and height of the triangle
base = int(input(""Enter the length of the base: ""))
height = int(input(""Enter the height of the triangle: ""))

# Calculate the area of the triangle
area = 0.5 * base * height

# Set up the screen
window = turtle.Screen()

# Create a turtle object
t = turtle.Turtle()

# Set the position of the turtle object
t.penup()
t.setpos(x, y)
t.pendown()

# Draw the triangle
t.forward(base)
t.right(90)
t.forward(height)
t.right(135)
t.forward((base**2 + height**2)**0.5)

# Write the area at the bottom center of the window
t.penup()
t.setpos(0, -window.window_height()//2 + 20)
t.pendown()
t.write(f""Area of the triangle is {area} sq. units"", align=""center"")

# Hide the turtle
t.hideturtle()

# Wait for user to close the window
turtle.done()
"
312,lsn7_stamp,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** Create a pythonGraph function called `draw_stamp` that accepts an x and y
coordinate as parameters. Add code so that this function will then draw a
picture (of your choosing) centered on that coordinate.



To test your function, create a pythonGraph window, and call your function
several times (each time, passing it a different set of x and y coordinates).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pythonGraph

def draw_stamp(x, y):
    pythonGraph.draw_circle(x, y, 10, [255, 0, 0])
    pythonGraph.draw_circle(x + 5, y - 5, 5, [0, 255, 0])
    pythonGraph.draw_rectangle(x - 5, y - 5, 10, 10, [0, 0, 255])

def main():
    pythonGraph.open_window(1000, 1000)
    draw_stamp(200, 200)
    draw_stamp(300, 300)
    draw_stamp(800, 100)
    pythonGraph.await_click()
    pythonGraph.close_window()

if __name__ == ""__main__"":
    main()
```
Please note that your pythonGraph library might be slightly different from mine. Therefore, you may need to adjust function parameters according to your library's documentation. This sample draws a circle and a rectangle with the center at given x,y coordinates. Multiple stamps are drawn by calling the `draw_stamp` function with different coordinates."
313,lsn7_simpledrawing,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Using pythonGraph (and the documentation for pythonGraph), experiment with
each of the drawing commands listed (drawing commands begin with the keyword
""draw""). Draw something interesting using at least 4 different drawing
commands. One of those drawing commands must be `draw_image`

**NOTE:  
** The best files will be added to our Python ""Hall of Fame"".



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from pythonGraph import *

def draw_hall_of_fame():
    create_canvas(800, 800)

    # Draw a rectangle
    draw_rectangle(100, 200, 600, 400, 'red')

    # Draw a line
    draw_line(100, 200, 700, 600, 'blue')

    # Draw a circle
    draw_circle(400, 400, 100, 'green')

    # Draw an image
    draw_image(""image.jpg"", 200, 200, 400, 400)

draw_hall_of_fame()
"
314,lsn7_randomcircles,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** Create a pythonGraph that asks the user for the number of circles to draw.
Your program should then open a pythonGraph window and then draw that many
circles somewhere within view.

**Hints**

  * Import the `random` module in order to generate random numbers. There are specifically two functions that are useful:
  * `random.random()` returns a random number between 0.0 and 1.0
  * `random.randint(start, end)` returns a random integer between `start` and `end`





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Here is your solution:

```python
import pythonGraph
import random

def draw_random_circles():
    num_circles = int(input(""How many circles would you like to draw? ""))
    pythonGraph.open_window(500, 500)
    
    for _ in range(num_circles):
        x = random.random() * 500
        y = random.random() * 500
        r = random.random() * 50
        pythonGraph.draw_circle(x, y, r, pythonGraph.colors.BLACK, True)
    
    pythonGraph.wait_for_close()

if __name__ == '__main__':
    draw_random_circles()
```

This program will only run if the `pythonGraph` package is installed or it's within the libraries in your local project directory. The package is not available in the default python however, you might find it in some custom environments like an educational environment."
315,lsn6_uod,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

You've been asked to develop a tool to help identify the uniform of the day,
based on temperature and wind speed.

The command center has provided the following table for guidance:

| Temperature  
---|---  
Wind Speed |  | <40 | 40 | >40 and <60 | 60 | >60  
<15 | Parkas | A-Jackets | A-Jackets | A-Jackets | Blues  
15 | ABUs | ABUs | Parkas | Parkas | Blues  
>15 | ABUs | ABUs | Parkas | Parkas | A-Jackets  
  
Create a Python program that first gets the temperature (in degrees
Fahrenheit) and then the wind speed (in knots) from the user. You may assume
that all inputs are non-negative numbers.

It should then output the correct response, as described above.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def main():
    temperature = float(input(""Enter the temperature: ""))
    wind_speed = float(input(""Enter the wind speed: ""))

    if temperature < 15:
        if wind_speed < 40:
            print(""Parkas"")
        elif wind_speed == 40:
            print(""A-jackets"")
        elif 40 < wind_speed < 60:
            print(""A-jackets"")
        elif wind_speed == 60:
            print(""A-jackets"")
        else:
            print(""Blues"")
    elif temperature == 15:
        if wind_speed < 40:
            print(""ABUs"")
        elif wind_speed == 40:
            print(""ABUs"")
        elif 40 < wind_speed < 60:
            print(""Parkas"")
        elif wind_speed == 60:
            print(""Parkas"")
        else:
            print(""Blues"")
    else:
        if wind_speed < 40:
            print(""ABUs"")
        elif wind_speed == 40:
            print(""ABUs"")
        elif 40 < wind_speed < 60:
            print(""Parkas"")
        elif wind_speed == 60:
            print(""Parkas"")
        else:
            print(""A-Jackets"")

if __name__ == ""__main__"":
    main()
"
316,lsn6_speeding,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a program that gets a speed (in miles per hour). You may assume that
all inputs are non-negative numbers.

It should output the kind of ticket a police officer should give the driver
(according to the table below).

Speed (mph) | <= 65 | >65 and <= 70 | >70 and <= 75 | > 75 and <= 80 | > 80  
---|---|---|---|---|---  
Ticket | No Ticket | Warning | Speeding | Reckless Driving | Reckless
Endangerment  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3 | Example 4 | Example 5  
---|---|---|---|---|---  
Input | 48 | 68 | 72 | 78 | 136  
Expected Output  | No Ticket | Warning | Speeding | Reckless Driving |
Reckless Endangerment



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def ticket(speed):
    if speed <= 65:
        return 'No Ticket'
    elif 65 < speed <= 70:
        return 'Warning'
    elif 70 < speed <=75:
        return 'Speeding'
    elif 75 < speed <=80:
        return 'Reckless Driving'
    else:
        return 'Reckless Endangerment'
"
317,lsn6_roundtrip,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write a Python program that gets three values from the user:

  * The distance to a destination (in miles)
  * The amount of fuel in the user's car (in gallons)
  * The # of miles the user's car can travel per gallon of gas (i.e., Miles Per Gallon)

You may assume that all inputs are non-negative numbers.

Calculate the amount of fuel needed to reach the destination. Then output
whether or not the user needs to refuel during a round trip, using the below
table as a guide:

Fuel Consumed (One-Way) | =< 50% | > 50% and <= 100% | > 100%  
---|---|---|---  
Output | No Refueling Needed | Refuel on Way Back | Refuel En Route  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 100  
10  
30 | 100  
5  
20 | 100  
7  
10  
Output | No Refueling Needed | Refuel on Way Back | Refuel En Route  
  
**NOTE: Your Output Must Match Exactly**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# get the inputs
distance_to_destination = float(input())
amount_of_fuel = float(input())
miles_per_gallon = float(input())

# calculate the fuel consumed
fuel_consumed = distance_to_destination / miles_per_gallon

# check the fuel consumed, and print the appropriate message
if fuel_consumed <= amount_of_fuel/2:
    print('No Refueling Needed')
elif fuel_consumed <= amount_of_fuel:
    print('Refuel on Way Back')
else:
    print('Refuel En Route')
"
318,lsn6_lists,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write an algorithm that gets a decimal GPA, APA, and MPA from the user (in
that order). You may assume that all inputs are non-negative whole numbers.

It then reports which meritorious list the cadet is on. If the GPA is equal to
or above 3.0, the cadet is on the ""Dean's List"", and if the APA is equal to or
above 3.0, the cadet is on the ""Athletic Director's List"", and if the MPA is
equal to or above 3.0, the cadet is on the ""Commandant's List"". Finally, if
the cadet qualifies for all three individual lists, then the cadet is on the
""Superintendent's List"". The algorithm should report all the lists the cadet
is on (in the order defined above), unless the cadet is on the Superintendents
List, in which case, it should report only, ""Superintendent's List"".

| No List | Dean's List | Athletic Director's List | Commandant's List |
Superintendent's List  
---|---|---|---|---|---  
GPA | < 3.0 | >= 3.0 | n/a | n/a | >= 3.0  
APA | < 3.0 | n/a | >= 3.0 | n/a | >= 3.0  
MPA | < 3.0 | n/a | n/a | >= 3.0 | >= 3.0  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3 | Example 4 | Example 5  
---|---|---|---|---|---  
Input | 2.8  
2.6  
2.5 | 3.5  
3.2  
2.8 | 3.3  
2.8  
3.4 | 3.6  
3.8  
3.2 | 2.8  
3.5  
3.8  
Output | No List | Dean's List  
Athletic Director's List | Dean's List  
Commandant's List | Superintendent's List | Athletic Director's List  
Commandant's List



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def cadetClassification(GPA, APA, MPA):
  list = []
  if GPA >= 3.0:
    list.append(""Dean's List"")
  if APA >= 3.0:
    list.append(""Athletic Director's List"")
  if MPA >= 3.0:
    list.append(""Commandant's List"")
  if GPA >= 3.0 and APA >= 3.0 and MPA >= 3.0:
    return [""Superintendent's List""]
  elif len(list) == 0:
    return [""No List""]
  else: 
    return list

GPA = float(input())
APA = float(input())
MPA = float(input())
for status in cadetClassification(GPA, APA, MPA):
  print(status)
"
319,lsn6_fuel,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

Write an algorithm that gets a fuel load (in lbs) and then a distance to base
(in nautical miles). You may assume all inputs are non-negative numbers.

It then outputs what kind of action the pilot should take. If the fuel load is
less than 50 lbs and the distance to base is less than 70 nm, report ""Return
to base"", otherwise, report ""Resume flight"".

**EXAMPLES:**

| Example 1 | Example 2 | Example 3 | Example 4  
---|---|---|---|---  
Input | 30  
60 | 60  
60 | 40  
80 | 60  
80  
Output | Return to base | Resume flight | Resume flight | Resume flight  
  
**Note: Output must match exactly.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def check_flight_parameters(fuel_load: int, distance_to_base: int) -> str:
    if fuel_load < 50 and distance_to_base < 70:
        return 'Return to base'
    else:
        return 'Resume flight'
"
320,lsn5_positive,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write a Python  **program**  that gets a floating point number from the user:

  * If the number is positive, print the word `POSITIVE`
  * Otherwise, print the word `NOT POSITIVE`

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 10 | -5 | 0  
Output | POSITIVE | NOT POSITIVE | NOT POSITIVE



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num = float(input(""Enter a floating point number: ""))
if num > 0:
    print(""POSITIVE"")
else:
    print(""NOT POSITIVE"")
"
321,lsn5_largest,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write a program that takes three integers as parameters, and prints the
largest (i.e., highest) number.

Ex: If the input is:

    
    
    7
    15
    3
    

Your function should return:

    
    
    15
    

  
In the event that all 3 numbers are the same, output that number.

Ex: If the input is:

    
    
    5
    5
    5
    

Your function should return:

    
    
    5



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def max_of_three(a,b,c):
    max_num = max(a,b,c)
    print(max_num)
max_of_three(7,15,3)
"
322,lsn5_classyear,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Using the below table as a guide, write a Python program that takes the user's
class year as input, and outputs their cadet class. If the class year is
before 2021, output ""Graduate"". Alternatively, if the class year is larger
than 2024, output ""Not a Cadet"".

You may assume that all inputs provided to your application are years
(represented as Integers)

| Example 1 | Example 2 | Example 3 | Example 4 | Example 5 | Example 6  
---|---|---|---|---|---|---  
Input | 2021 | 2022 | 2023 | 2024 | 2020 | 2025  
Output | Firstie | Two Degree | Three Degree | Four Degree | Graduate | Not a
Cadet



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def cadet_class(class_year):
    if class_year < 2021:
        return ""Graduate""
    elif class_year == 2021:
        return ""Firstie""
    elif class_year == 2022:
        return ""Two Degree""
    elif class_year == 2023:
        return ""Three Degree""
    elif class_year == 2024:
        return ""Four Degree""
    else:
        return ""Not a Cadet""

class_year = int(input(""Enter your class year: ""))
print(cadet_class(class_year))
"
323,lsn5_atmosphere,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** The Earth's atmosphere is divided into a series of layers. Write an
algorithm that asks the user for the altitude in kilometers. Then output the
corresponding layer according to the following table:

Altitude | ≤10km | >10km&≤50km | >50km&≤85km | >85km&≤1000km |
>1000km&≤100,000km | >100,000km  
---|---|---|---|---|---|---  
**Layer** | Troposphere | Stratosphere | Mesosphere | Thermosphere | Exosphere
| Space



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
altitude = float(input(""Enter altitude in kilometers: ""))

if altitude <= 10:
    print(""Troposphere"")
elif altitude > 10 and altitude <= 50:
    print(""Stratosphere"")
elif altitude > 50 and altitude <= 85:
    print(""Mesosphere"")
elif altitude > 85 and altitude <= 1000:
    print(""Thermosphere"")
elif altitude > 1000 and altitude <= 100000:
    print(""Exosphere"")
else:
    print(""Space"")
"
324,lsn4_temperature,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

Write an algorithm that prompts the user for a temperature in °F and then
outputs K and °C in that order.

**EXAMPLE:**

| Example 1 | Example 2  
---|---|---  
Input | 32 | 0  
Output | 273.15  
0 | 255.372  
-17.778  
  
**Note: Output must match within a predefined tolerance.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def convert_temperature():
    #prompt the user for a temperature in °F
    fahrenheit = float(input(""Enter temperature in Fahrenheit: ""))

    #convert fahrenheit to celsius
    celsius = (fahrenheit - 32) * 5.0/9.0

    #convert fahrenheit to Kelvin
    kelvin = 273.15 + ((fahrenheit - 32.0) * (5.0/9.0))

    #output K and °C in that order
    print(""%.3f"" % kelvin)
    print(""%.3f"" % celsius)

convert_temperature()
```
"
325,lsn4_projectile,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

Write a python program that can calculate the range of a projectile when fired
from an artillery on level ground. Your program will ask the user to input the
initial velocity (`v`) and angle in degrees (`theta`). Your program should
then calculate and print the range using the following formula:

`range = (v^2 * sin(2 * theta)) / 9.8`  
 **WARNING: The above formula is not valid Python.**  
  

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 800  
45 | 600  
30 | 535.2  
81.7  
Output | 65306.122 | 31813.178 | 8350.235  
  
**Hints**

  * You need to use the `math` module's trig functions to solve this problem. Type `import math` at the top of your code to add it to your program.
  * The `sin()` and `cos()` functions assume that the angle is in  **radians**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

# input velocity and angle
v = float(input(""Enter the initial velocity (in m/s): ""))
theta = float(input(""Enter the angle (in degrees): ""))

# convert angle to radians
theta = math.radians(theta)

# calculate range
range = (v ** 2 * math.sin(2 * theta)) / 9.8

print(""The range of the projectile is: {:.3f}"".format(range))
"
326,lsn4_math,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

Given three floating-point numbers x, y, and z, output the square root of x,
the absolute value of (y minus z) , and the factorial of (the ceiling of z).
Each input should be on a new line, and rounded to a maximum of 2 decimal
places.

(Hint: use the [`round` (Links to an external
site.)](https://docs.python.org/3/library/functions.html#round) function to
round your outputs!):

`round(# to round, # of digits to round to)`

**EXAMPLE:**

    
    
    5.0
    6.5
    3.2
    

Then the output is:

    
    
    2.24
    3.30
    24.00
    

NOTE: Decimal places may be slightly off depending on the exact numbers used.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math
x = float(input())
y = float(input())
z = float(input())

#square root of x
result1 = round(math.sqrt(x), 2)

#absolute value of (y minus z) 
result2 = round(abs(y-z), 2)

#factorial of (the ceiling of z)
result3 = round(math.factorial(math.ceil(z)), 2)

# Display the results
print(result1)
print(result2)
print(result3)
"
327,lsn4_calories,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

The following equations estimate the calories burned when exercising ([source
(Links to an external
site.)](https://web.archive.org/web/20121021230025/http://fitnowtraining.com/2012/01/formula-
for-calories-burned/)):

Men: Calories = ( (Age x 0.2017) + (Weight x 0.09036) + (Heart Rate x 0.6309)
-- 55.0969 ) x Time / 4.184

Women: Calories = ( (Age x 0.074) -- (Weight x 0.05741) + (Heart Rate x
0.4472) -- 20.4022 ) x Time / 4.184

Write a program using inputs age (years), weight (pounds), heart rate (beats
per minute), and time (minutes), respectively. Output calories burned for men
and women.

Output each floating-point value (your program will be marked correct so long
as it outputs a value within a predefined range)

**EXAMPLE:**

If the input is:

    
    
    49
    155
    148
    60
    

Then the output is:

    
    
    891.47
    580.94



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
#use the input function to get the input from the user and convert it to integer with int() since the inputs are always integers.
age = int(input())
weight = int(input())
heart_rate = int(input())
time = int(input())

#Use the formula to calculate the calories burned for men and women. 
#The round() function is used to limit the output to two decimal places.
burned_calories_men = round(( (age * 0.2017) + (weight * 0.09036) + (heart_rate * 0.6309) - 55.0969 ) * time / 4.184, 2)
burned_calories_women = round(( (age * 0.074) - (weight * 0.05741) + (heart_rate * 0.4472) - 20.4022 ) * time / 4.184, 2)

# print the result 
print(burned_calories_men)
print(burned_calories_women)
"
328,lsn4_bits_to_kmg,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

One byte is comprised of 8 bits. A typical computer program has a requirement
for much more memory. Therefore, many bytes can be grouped together to make
larger memory amounts. Our convention is for computer memory is scaled in
logical increments of 210 = 1024.

For example:

  * 1024 bytes = 1 kilobyte (KB)
  * 1024 KB = 1 megabyte (MB)
  * 1024 MB = 1 gigabyte (GB)

Write an algorithm that prompts the user for a number of bits and then outputs
the equivalent number of kilobytes, megabytes, and gigabytes.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 1000000 | 6879000 | 92445694  
Output | 122.07  
0.12  
0.00012 | 839.72  
0.82  
.0008 | 11,284.87  
11.02  
0.01  
  
**Note: Output must match within a predefined tolerance.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code
def main():
    bits = int(input(""Enter the number of bits: ""))
    converter(bits)

def converter(bits):
    # Enter your code here
    pass

main()
```

"
329,lsn4_bits_to_bytes,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

The basic unit of computer memory is a bit. A bit can represent two values (on
or off, 0 or 1). To represent more information, bits are grouped together in
larger quantities. Beyond a bit, the next logical grouping is a byte, where 1
byte has 8 bits. Write an algorithm that prompts the user for a number of bits
and then outputs the equivalent number of bytes.

**EXAMPLE:**

Example 1 | Example 2 | Example 3  
---|---|---  
Input | 8 | 800 | 7234  
Output | 1.0 | 100.0 | 904.25  
  
**Note: Output must match exactly.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton code
def bit_to_byte():
    # read number of bits as input, assign to bit
    bit = int(input())
  
    # calculate the equivalent number of bytes, assign to byte
    byte = bit / 8

    # print the output
    print(byte)
```
Note: Call the function bit_to_byte() to execute the function."
330,lsn4_bit_representation,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

One way bits can hold information is computer images. Computer images are
composed of a grid of small, independent colored cells known as pixels. The
number of colors each pixel can hold is related to the number bits allocated
to each pixel. A simple black and white image, for example, would have a
single bit per pixel, where the value of the bit would represent black or
white for that pixel. Allocating 2 bits per pixel would allow each pixel to
have one of four colors.

Generally speaking, the number of color options available to a particular
pixel can be described as:

    
    
    numberofcolors = 2number of bits

In Python, write an algorithm that prompts the user for a number of bits and
then outputs the number of different colors that could be represented by a
single pixel.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 3 | 8 | 24  
Output | 8 | 256 | 16777216  
  
**Note: Output must match exactly.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton code

# Requests the user for the number of bits
bits = int(input(""Enter the number of bits: ""))

# Calculate and print the number of colors
colors = 2 ** bits
print(colors)
"
331,lsn3_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a program that gets a cadet's age, and stores it in a variable called
**your_age.**

Print the user's age + 4.

For example, if the user types:

    
    
     18

Your program should print:

    
    
    22



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
your_age = int(input())
print(your_age + 4)
"
332,lsn3_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Create a variable called  **name,  **and set it equal to your name
(represented as a string--don't forget to use the quotation marks!).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
333,lsn3_scoreaverage,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write an algorithm that prompts the user for three sports game scores and
outputs the average.

  
**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15  
12 | 89  
103  
63 | 14  
42  
36  
Output | 11.666666666666666 | 85.0 | 30.666666666666668  
  
**Note: Output must match (within a predefined tolerance).**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code
def get_score_average():
    # Please write your code here
    pass

get_score_average()
```

"
334,lsn3_pointspread,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

A ""Point Spread"" is a term used to in sports (and gambling) to describe the
difference between two teams' scores. For example, if one team scores 20
points and another team scores 30 points, the point spread is 10. A point
spread is always a positive number.

Write an algorithm that prompts the user for two sports game scores and
outputs the point spread.  
  
**  
EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15 | 89  
103 | 42  
14  
Output | 7 | 14 | 28  
  
**Note: Output must match exactly.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
score1 = int(input(""Please enter the score for Team 1: ""))
score2 = int(input(""Please enter the score for Team 2: ""))

point_spread = abs(score1-score2)

print(point_spread)
"
335,lsn3_madlib,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Mad Libs are activities that have a person provide various words, which are
then used to complete a short story in unexpected (and hopefully funny) ways.
(EDITOR'S NOTE: Do you kids even do Mad Libs anymore?)

Complete the program to read the needed values from input, that the existing
output statement(s) can use to output a short story.

**EXAMPLE:**

If the input is:

    
    
    Eric
    Chipotle
    12
    burritos
    

Then the output is:

    
    
    Eric went to Chipotle to buy 12 different types of burritos



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
name = input()
place = input()
number = input()
item = input()

print(name + "" went to "" + place + "" to buy "" + number + "" different types of "" + item)
"
336,lsn3_girlscouts,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a program that asks the user for the amount of money he/she has on
hand, and outputs the number of girl scout cookies that he/she can purchase.
Use the following prices:

$5 per box for the ""Super Six"" (Thin Mints, Samoas, Tagalongs, Do-Si-Dos,
Trefoils, Savannah Smiles)  
$6 per box for the Specialty Cookies (S'mores, Toffee-tastic)

**For this problem, assume that the user will buy all of one or the other. In
other words, output the number of boxes that he/she would be able to obtain if
he/she bought nothing but the Super Six, and nothing but the Specialty
Cookies.**

**HINT:**  
You can convert a number to an integer by using the int() function. For
example:  
 **int(2.51)** will convert the number to 2

EXAMPLE:  
If the input is:

    
    
    26

Then the output is:

    
    
    5 boxes of Thin Mints, Samoas, Tagalongs, Do-Si-Dos, Trefoils, or Savannah Smiles  
    4 boxes of S'mores and Toffee-tastic



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
money = float(input())
num_super_six = int(money / 5)
num_specialty = int(money / 6)
print(str(num_super_six) + "" boxes of Thin Mints, Samoas, Tagalongs, Do-Si-Dos, Trefoils, or Savannah Smiles"")
print(str(num_specialty) + "" boxes of S'mores and Toffee-tastic"")
"
337,lsn3_arrivaltime,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write an algorithm that prompts the user for a distance to travel (in miles)
and a speed (in mph) and outputs time of arrival in hours.

  
**For Example:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 72  
60 | 1282  
85 | 120.5  
59.2  
Output | 1.2 | 15.0823 | 2.0355  
  
**Note: Output needs to match the examples.**



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_arrival_time():
    distance = float(input(""Enter the distance to be travel in miles: ""))
    speed = float(input(""Enter the speed in mph: ""))

    # calculate time of arrival

    arrival_time = distance / speed
    return round(arrival_time, 4)

print(calculate_arrival_time())
"
338,lsn24_starmap,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a table that describes a simple night sky as a
2D list in your code template.  This list is an exact mapping to the picture
below.  The 2D list (`star_map`) is populated with characters representing the
locations of various astronomical entities (stars, planets, etc).  For
example, you can see in the template that the very first item is 'M', since
there is a Moon in the top left corner.



Write a program that gets two values from the user in the following order:

  1. The horizontal index of the cell in the star map to search (e.g. 0 for the top row)
  2. The vertical index of the cell in the star map to search (e.g. 0 for the leftmost column)



Finally, **print  ** ****out the word associated with the code in the table at
that particular cell.

`S = Star; St = Satellite; M = Moon; P = Planet; _ = Nothing`



**EXAMPLES:**



| Example 1 | Example 2 | Example 3  
---|---|---|---  
**Input** |

0

0

|

0

1

|

4

1  
  
**Output** | Moon | Nothing | Satellite  
  
* * *





Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# ---------------------------------------------------------------------
# Lab: Star Map
# Course: CS110, Spring 2022
# ---------------------------------------------------------------------

# ---------------------------------------------------------------------
# Problem Statement: Write a Python program that prints what is found 
#  at a specific location of the star map represented below.
#  NOTE: See the Canvas Problem Statement for additional details.
# ---------------------------------------------------------------------

#DO NOT TOUCH THIS LIST!
star_map =   [['M', '_', '_', '_', 'S'],
              ['S', 'M', '_', '_', 'P'],
              ['S', '_', '_', 'P', 'M'],
              ['P', 'P', 'S', '_', '_'],
              ['M', 'St', '_', 'St', '_']]
#  S = Star; St = Satellite; M = Moon; P = Planet; _ = Nothing

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# ---------------------------------------------------------------------
# Lab: Star Map
# Course: CS110, Spring 2022
# ---------------------------------------------------------------------

# ---------------------------------------------------------------------
# Problem Statement: Write a Python program that prints what is found 
#  at a specific location of the star map represented below.
#  NOTE: See the Canvas Problem Statement for additional details.
# ---------------------------------------------------------------------

#DO NOT TOUCH THIS LIST!
star_map =   [['M', '_', '_', '_', 'S'],
              ['S', 'M', '_', '_', 'P'],
              ['S', '_', '_', 'P', 'M'],
              ['P', 'P', 'S', '_', '_'],
              ['M', 'St', '_', 'St', '_']]
#  S = Star; St = Satellite; M = Moon; P = Planet; _ = Nothing

# Your code goes here.
def find_in_star_map(x_position, y_position):

    map_dict = {'M': 'Moon', 'St': 'Satellite', 'S': 'Star', 'P': 'Planet', '_': 'Nothing'}

    if x_position >= 0 and x_position < len(star_map) and y_position >= 0 and y_position < len(star_map[0]):
        symbol = star_map[x_position][y_position]
        if symbol in map_dict:
            print(map_dict[symbol])
        else:
            print('Unknown symbol')
    else:
        print('Invalid position')

x_position = int(input(""Enter the x-coordinate: ""))
y_position = int(input(""Enter the y-coordinate: ""))
find_in_star_map(x_position, y_position)
"
339,lsn2_printpractice,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

The template file contains various words/phrases that you need to print out
(exactly as written) using Python's `print()` function. For example:

  1. Print the phrase ""Welcome to Computer Science 110!""

  2. Print the result to the following math expression: (640 * 480 * 24) / 8

  3. etc (see the template for details)

Each print statement should be written directly below the corresponding
comment. While you can technically ""cheat"" on this problem, we encourage you
to practice all the various ways that you can use the `print` function. You
will thank us later!



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","**SOLUTION:**

"
340,lsn2_parking,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

Write a program that prints a formatted ""No parking"" sign as shown below. Note
the first line has two leading spaces. For ALL labs, end with newline (unless
otherwise stated).

    
    
     NO PARKING  
    1:00 - 5:00 a.m.  
      
    



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
print(""  NO PARKING"")
print(""1:00 - 5:00 a.m."")
print()
"
341,lsn2_ascii,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a Python program that prints out a cat:

    
    
    /\ /\
     o o
     = =
     ---  
      
    

_Hint: A backslash  `\` in a string acts as an escape character, such as with
a newline_ `\n`.  _So, to print an actual backslash, escape that backslash by
prepending another backslash. Ex: The following prints a single backslash:_
`print('\\')`



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
print(""/\\ /\\"")
print("" o o"")
print("" = ="")
print("" ---"")
"
342,lsn17_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with the template code for an animation.  Study the
code for a minute, then perform the following tasks:

  * In the `draw()` function, add one line of code that draws a circle.  
For the center, use the `ball_x` and `ball_y` variables defined in the
template.  
  

  * In the `update() function`, add code that modifies the value of `ball_x` and `ball_y`.  
For example, add 1 to the `ball_x` and subtract 1 from `ball_y` every time
`update()` is called. What do you expect to happen? Does what actually happens
match your expectations?





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Existing code
WIDTH = ...
HEIGHT = ...
def draw():
    # Add the following line to draw a circle
    screen.draw.circle((ball_x, ball_y), 30, ""red"")

def update():
    # Add the following two lines to update the ball's position
    global ball_x, ball_y
    ball_x += 1
    ball_y -= 1
"
343,lsn10_in_circle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a function that determines if a point is within a circle. You will
name your function `in_circle()`. It has five parameters:

  1. The coordinates of the point that is to be tested (x, y)
  2. The center of a circle (cir_x, cir_y)
  3. The radius of the circle (radius)

 The `in_circle()` function will return **True** if the point is on or inside
the circle, and **False** otherwise.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def in_circle(x, y, cir_x, cir_y, radius):
    # calculate the distance between the given point (x, y) and the circle's center (cir_x, cir_y)
    distance = ((x - cir_x)**2 + (y - cir_y)**2)**0.5

    # if the distance is less than or equal to the radius, then the point is inside the circle
    if distance <= radius:
        return True
    else:
        return False

# Uncomment the following lines to test the code
# print(in_circle(1, 2, 3, 4, 2)) # should return False
# print(in_circle(0, 0, 0, 0, 1)) # should return True
# print(in_circle(1, 1, 0, 0, 1)) # should return False
# print(in_circle(0, 0, 1, 1, 2)) # should return True
```
"
344,lsn10_distance,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a function that computes the distance between two points. You will
name your function `dist_points`. It has four parameters, the cordinates of
the two points as `x1, y1, x2, y2`. The `dist_points()` function will return
the distance between the two points as a floating point number.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Here is the completed code:

```python
import math

def dist_points(x1,y1,x2,y2):
  return math.sqrt((x2-x1)**2 + (y2-y1)**2) 

# Uncomment below to test the function:
# print(dist_points(1,0,0,1))  
```

The above function `dist_points()` takes in four parameters, `x1, y1, x2, y2`, which represents the coordinates of the two given points. The function computes the difference between the x-coordinates and the y-coordinates, squares each difference, sums the two squares, and returns the square root of that sum. This is based on the Pythagorean theorem from geometry."
345,lsn10_circle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a function that computes the area of a circle. You will name your
function `area_circle`. It has one parameter, the radius of the circle,
`radius`. The `area_circle()` function will return the area of the circle.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

def area_circle(radius):
    return math.pi * (radius ** 2)
```

Here's how to write some tests for the function:

"
346,lsn10_asteroids,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

""Asteroids"" was an arcade game created in 1979 by Atari, Inc. In the game, the
player is given control of a spaceship that has the ability to shoot bullets.
The player is then placed in a field of floating rocks, and is tasked with
destroying them without running into them.

In this lab, you will write a ""collision detection"" function that will be used
by the game to determine if the player's ship has hit a rock. To make this
simple, assume that an imaginary circle extends from the center of the
asteroid and the player's ship (see below image). If the two circles ever
overlap one another, then a collision has occurred. (NOTE: There are more
accurate ways to detect a collision. [Click here if you want to learn more
(Links to an external site.)](https://bell0bytes.eu/basic-collision-
detection/)).

![](https://bell0bytes.eu/content/images/2019/03/spaceShipAsteroid.png)

Your function, which you will name `detect_collision()` should have six
parameters: the (x, y) coordinates of the center of player's ship, the ship's
radius, the (x, y) coordinates of the center of an asteroid, and the
asteroid's radius. Your function will return `True` if the player's ship has
hit the asteroid, and `False` otherwise.

**HINT: _  
_** _You may want to copy and paste the_  `dist_points`  _function you created
earlier. It's almost as if we are trying to demonstrate the importance of
reusable functions . . ._

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def detect_collision(x_ship, y_ship, radius_ship, x_asteroid, y_asteroid, radius_asteroid):
    def dist_points(x1, y1, x2, y2):
        return ((x1-x2)**2 + (y1-y2)**2)**0.5

    distance = dist_points(x_ship, y_ship, x_asteroid, y_asteroid)
    return distance <= radius_ship + radius_asteroid

# Test code can be written as following:

# print(detect_collision(0, 0, 1, 3, 3, 1))  # returns False
# print(detect_collision(0, 0, 2, 3, 3, 2))  # returns True
"
347,Lists3_unpopularnames,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

This lab makes use of the names.csv dataset, which provides a list of over
1200+ names that were given to children in 2011. Here is a typical line from
the file:



`FEMALE, HISPANIC, GIA, 21`



  
Each position in the line (separated by a comma) represents a different ""data
element"". Here is a key for your reference:

Gender | Ethnicity  | Name |  Count  
(i.e., Number of Children Assigned this Name)  
---|---|---|---  
FEMALE | HISPANIC  | GIA | 21  
  
  
  
Write a Python algorithm that gets a gender (all CAPs, ""MALE"" or ""FEMALE"") and
a number, `X`, from the user, and prints out the X least popular names for
that gender, starting with the least popular and working up.

For example, if the user types `MALE` and `2`, and you determine that the two
least popular names are Bill and Ted, your program should output:

    
    
    Bill  
    Ted  
      
    



**HINTS (really really important):**

  * Remember that you can use the `sort()` function to sort a list in ascending order. For example, if your list is named `my_list`, you can sort it by typing:  
`my_list.sort()`

  * `sort()` will work on 2D lists. It will sort by the first column, and then look at the 2nd column in the event of a tie. Think about this when you are building your 2D list.





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

def least_popular_names():
    gender = input(""Enter the gender (MALE or FEMALE): "")
    num_names = int(input(""Enter the number of least popular names desired: ""))
    
    names = []
    
    with open('names.csv') as file:
        reader = csv.reader(file)
        
        for row in reader:
            if row[0] == gender.upper():  
                names.append([int(row[3]), row[2]])
                
    names.sort()
    
    for i in range(num_names):
        print(names[i][1])

least_popular_names()
```
"
348,Lists3_popularnames,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write a Python program that takes two inputs and produces two outputs. NOTE:
This problem does not require creating an additional list to solve.

The inputs from the user are:

  1. A gender, a string which will be MALE or FEMALE
  2. A threshold number for the number of times that a name was used.

Your program will compare the information from the user to the names.csv
dataset, and output two statistics as output:

  1. The count of the number of names that were used above the threshold given for the provided gender
  2. The total count of children with the high usage names and the specified gender. In other words, the sum of the number of children given names above the threshold value from input 2.



This problem makes use of the names.csv dataset, which provides a list of over
1200+ names that were given to children in 2011. Here is a typical line from
the file:

`FEMALE, HISPANIC, GIA, 21`

Each position in the line (separated by a comma) represents a different ""data
element"". Here is a key for your reference:

Gender | Ethnicity | Name | Count  
(i.e., Number of Children Assigned this Name)  
---|---|---|---  
FEMALE | HISPANIC | GIA | 21  
  


**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

MALE

190

|

FEMALE

120

|

MALE

80  
  
Output |

1

224

|

15

2670

|

23

2740  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def high_usage_names():
    gender = input().strip().upper()
    threshold = int(input().strip())
    filename = 'names.csv'

    count_names = 0
    total_children = 0

    with open(filename, 'r') as file:
        next(file)
        for line in file:
            data = line.strip().split(',')
            if data[0] == gender and int(data[3]) > threshold:
                count_names += 1
                total_children += int(data[3])

    print(count_names)
    print(total_children)

high_usage_names()
"
349,Lists3_lowvolume,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write a Python algorithm that opens the file and outputs the lowest (minimum)
traffic count.  Then, output the name of all streets whose traffic count is
within 2500 (inclusive) of the minimum.



This program makes use of the traffic.csv dataset. Here is a typical line from
the file:



`691,6067 North,Kimball Ave,8/15/06,15600,North Bound:7500/South Bound:8100`



As you will recall from class, each position in the line (separated by a
comma) represents a different ""data element"". Here is a key for your
reference:

ID | Address | Street | Sample Date | Total # of Passing Vehicles | # of
Vehicles by Direction  
---|---|---|---|---|---  
691 | 6067 North | Kimball Ave | 8/15/06 | 15600 | North Bound:7500/South
Bound:8100  
  
  
  
Output one street name per line.



For example, if the min traffic count is 500, and the roads within 2500 of
this value are ""Road A"", ""Road B"", ""Road C"", then your program should output:

    
    
    500  
    Road A  
    Road B  
    Road C





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def minimum_traffic():
    minimum = None
    streets = []
    with open(""traffic.csv"", ""r"") as file:
        for line in file.readlines():
            data = line.split("","")
            traffic_count = int(data[4])
            if minimum is None or traffic_count < minimum:
                minimum = traffic_count
                streets = [data[2]]
            elif traffic_count - minimum < 2500:
                streets.append(data[2])
    print(minimum)
    for street in streets:
        print(street)

minimum_traffic()
"
350,Lists3_averagetraffic,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

This program makes use of the traffic.csv dataset. Here is a typical line from
the file:



`691,6067 North,Kimball Ave,8/15/06,15600,North Bound:7500/South Bound:8100`



  
As you will recall from class, each position in the line (separated by a
comma) represents a different ""data element"". Here is a key for your
reference:

ID | Address | Street | Sample Date | Total # of Passing Vehicles  | # of
Vehicles by Direction  
---|---|---|---|---|---  
691 | 6067 North | Kimball Ave | 8/15/06 | 15600 | North Bound:7500/South
Bound:8100  
  
  
  
Write a Python algorithm that opens the file and outputs the # of roads whose
traffic count is greater than (or equal to) the average.  For example, if you
determine that the answer is 20, your program should output:

    
    
    20





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

def count_roads_above_average(fileName):
    total_vehicles_count = []
    with open(fileName, 'r') as csv_file:
        reader = csv.reader(csv_file)
        for row in reader:
            total_vehicles_count.append(int(row[4]))

    total_avg = sum(total_vehicles_count)/len(total_vehicles_count)

    counter = 0
    for count in total_vehicles_count:
        if count >= total_avg:
            counter += 1

    print(counter)

count_roads_above_average(""traffic.csv"")
"
351,Lists2_population,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

You are being provided with a simple 2D list that contains the names and
populations of the 10 largest cities in the world. This list (which is called
`cities_table`) can be logicially visualized as the following:



**City** |  **Population**  
---|---  
Tokyo | 37,435,191  
Delhi | 29,399,141  
Shanghai  | 25,647,805  
Sao Paulo  | 21,846,507  
Mexico City  | 21,671,908  
Cairo | 20,484,965  
Dhaka | 20,283,552  
Mumbai | 20,185,064  
Beijing  | 20,035,455  
Osaka | 19,222,665  
  
  
Write a Python program that gets a population from the user, and prints the
names of all the cities whose populations are at least that big (keep the same
order as in the 2D list). Print each city's name on a separate line.



**EXAMPLES:**

| Example 1 | Example 2  
---|---|---  
Input | 25000000 | 30000000  
Output | Tokyo  
Delhi  
Shanghai | Tokyo



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
cities_table = [[""Tokyo"", 37435191], [""Delhi"", 29399141], [""Shanghai"", 25647805],
                [""Sao Paulo"", 21846507], [""Mexico City"", 21671908],
                [""Cairo"", 20484965], [""Dhaka"", 20283552], [""Mumbai"", 20185064],
                [""Beijing"", 20035455], [""Osaka"", 19222665]]

population_threshold = int(input(""Enter a population: ""))

for city_record in cities_table:
    if city_record[1] >= population_threshold:
        print(city_record[0])
```
"
352,Lists2_movies,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

Write a Python function called `get_movies` that takes three parameters:

  * A two-dimensional list containing movie titles and other stats (see table below for an example)
  * A rating (e.g., ""PG"", ""R"")
  * A run time (in minutes)



Title | Release Year | Rating | Run Time (minutes)  
---|---|---|---  
Star Wars: A New Hope | 1977 | PG | 121  
Star Trek: The Motion Picture | 1979 | G | 132  
Indiana Jones: Raiders of the Lost Ark | 1989 | PG | 115  
  
  
Your function should return the number of movies that have the specified
rating, and run for at least the number of minutes specified.



**EXAMPLE:**  
If the above table were contained within a list called `movie_table`, then
`get_movies(movie_table, ""PG"", 100)` should return 2.





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def get_movies(movies, rating, run_time):
    count = 0
    for movie in movies:
        if movie[2] == rating and movie[3] >= run_time:
            count += 1
    return count
"
353,Lists2_golf,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

The cadet intercollegiate golf team needs some help tracking individual
performance. Create a Python algorithm that inputs repeated pairs of cadet
last-names followed by the golfers score until the word **END** (all capital
letters) is entered at the member last-name prompt.

Your algorithm should output:

  * The last name of the member with the lowest (best) score, if there are two members with the same lowest score, it should output the last name of the first person entered.
  * The percentage of members who are within 5 strokes (inclusive) of the lowest score.

There is no bound on the number of golfers that may be entered, but you may
assume that there will be at least one golfer and score entered.



**EXAMPLES:**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Inputs** |  Woods  
48  
Nicklaus  
51  
Hogan  
49  
Jones  
46  
Palmer  
52  
END |  Snead  
52  
Mickelson  
48  
Nelson  
48  
END |  Player  
51  
Watson  
51  
Singh  
48  
Floyd  
49  
Normal  
54  
END  
**Output** | Jones  
80.0 | Mickelson  
100.0 | Singh  
60.0  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def golf_scores():
    lowest_score_golfer = "" ""
    lowest_score =  float('inf')
    golfer_scores = []
    n = 0 
    while True:
        golfer = input()
        if golfer == 'END':
            break
        golfer_score = int(input())
        
        if golfer_score <= lowest_score:
            lowest_score = golfer_score
            if lowest_score_golfer == "" "":
                lowest_score_golfer = golfer
        golfer_scores.append(golfer_score)
        n += 1
        
    count_within_5_strokes = len([i for i in golfer_scores if abs(i - lowest_score)<=5])
    percentage_within_5_strokes = (count_within_5_strokes/n) * 100
    print(lowest_score_golfer)
    print(percentage_within_5_strokes)

golf_scores()
"
354,Lists2_credit,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

The Air Academy Federal Credit Union wants to identify its best customers and
comes to you for help. To help with the accounting, create a Python program
which inputs repeated pairs of member last-names followed by account balances
until the word **DONE** (all capital letters) is entered at the member last-
name prompt.

Your program should output:

  * The last name of the member with the highest account value, if there are two members with the same highest account value it should output the name of the first person entered.
  * It will then output the percentage members who are within $10,000 (inclusive) of the highest account value.

There is no bound on the number of members that may be entered, but you may
assume that there will be at least one member and balance entered.



**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |  Rockefeller  
120000  
Chase  
115000  
Morgan  
110000  
Gates  
90000  
Jobs  
65000  
DONE  |  Jobs  
150000  
Chase  
150000  
Kennedy  
40000  
DONE |  Morgan  
145000  
Chase  
135000  
Kennedy  
142000  
Gates  
145000  
DONE  
Output | Rockefeller  
60.0 | Jobs  
66.66666666666666 | Morgan  
100.0  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def main():
    highest_account = -1
    highest_names = ''
    near_highest_account = 0
    total_accounts = 0
    
    while True:
        name = input()
        
        if name == 'DONE':
            break
            
        total_accounts += 1
        balance = float(input())
        
        if balance > highest_account:
            highest_account = balance
            highest_names = name
        elif balance == highest_account:
            highest_names.append(name)
        
        if balance >= highest_account - 10000:
            near_highest_account += 1
            
    print(highest_names)
    print((near_highest_account / total_accounts) * 100)

main()
"
355,Lists2_100m,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

You have been asked by your unit to record 100m dash times for an upcoming
USAFA track meet. Create a Python algorithm that first asks for the number of
cadets, and then asks for that many cadet last names, squadrons, and 100m dash
times (in that order).

Your program should output:

  * The cadet squadron containing the cadet with the fastest 100m dash time followed by their 100m dash time. If there is a tie for fastest 100m dash times, you should output the squadron number and time for the LAST cadet entered who had that fastest time.
  * The number of cadets whose 100m dash time was faster than the average.

There is no bound on the number of cadets that may be entered, but you may
assume that there will be at least one cadet and track time entered.



**EXAMPLES:**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Inputs** |  4  
Thorpe  
13  
10.2  
Owens  
22  
9.93  
Mathias  
19  
9.99  
Rudolph  
39  
10.23  |  3  
Johnson  
7  
10.3  
Tyus  
14  
10.02  
Lewis  
40  
9.67 |  2  
Joyner  
1  
10.08  
Kersee  
29  
9.97  
**Output** | 22  
9.93  
2 | 40  
9.67  
1 | 29  
9.97  
1



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_cadets = []

num_cadets = int(input())

for i in range(num_cadets):
    cadet = dict()
    cadet['last_name'] = input()
    cadet['squadron'] = input()
    cadet['100m_dash'] = float(input())
    list_cadets.append(cadet)
   
list_cadets.sort(key = lambda x: x['100m_dash'])

fastest_cadet = list_cadets[-1]

print(fastest_cadet['squadron'])
print(fastest_cadet['100m_dash'])

average_time = sum([cadet['100m_dash'] for cadet in list_cadets]) / len(list_cadets)

faster_than_avg = sum([1 for cadet in list_cadets if cadet['100m_dash'] < average_time])

print(faster_than_avg)
"
356,Lists1_pftscores,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

You are provided a list of PFT scores, already in the lab template, in a
variable `pft_scores` arranged in no particular order.

Write a Python program that obtains a new score from the user. If the score is
valid (above zero and no greater than 500), add it to the list and print out
the following two stats in this order:

1\. **average score  ** HINT: use the functions `len()` and `sum()` on your
list to find the average

2\. **range of scores** , the difference between the largest score and
smallest score. HINT: use the functions `min()` and `max()` on your list to
find the range

If the score is invalid (below zero or above 500), instead print:  ""Invalid
score provided"".



**EXAMPLE:**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | -5 | 328 | 65  
**Outputs** | Invalid score provided |

291.8

403

|

274.26666666666665

408  
  




  





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
pft_scores = [299, 347, 157, 328, 257, 69]

new_score = int(input())

if new_score > 0 and new_score <= 500:
    pft_scores.append(new_score)
    average = sum(pft_scores) / len(pft_scores)
    print(average)
    range_scores = max(pft_scores) - min(pft_scores)
    print(range_scores)
else:
    print(""Invalid score provided"")
"
357,Lists1_listrange,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

Write a Python program that obtains two whole numbers that represent the start
and stop values for a range of numbers. You may assume the second number is
always greater than the first.

Using these start and stop values, print the two following items in order:

1.  Print a list that starts at the start value and ends at (the list contains) the stop value

**HINT** : Use `range()` to accomplish this. In order to print the result from
range() as a list, surround it with list(), `list(range(#,#))`, like you
surround input() with int() or float(), `int(input())`.

2.  Print the size (how many numbers are contained) of that list



**EXAMPLE:**

| **Example 1** | **Example 2**  
---|---|---  
**Inputs** |

1

10

|

1023

1029  
  
**Outputs** | [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  
10 |

[1023, 1024, 1025, 1026, 1027, 1028, 1029]  
7



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
start_val = int(input())
stop_val = int(input())

lst = list(range(start_val, stop_val+1))

print(lst)
print(len(lst))
"
358,Lists1_fastestcar,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:**

Write a Python program with the definition of a new function named fastest_car
and takes two lists of car info as parameters. The function will then
**return** the car model name with the higher top speed or ""Same speed"" if the
top speeds are the same.

The two parameters to the function are both a list with the same 3 types of
elements, as follows:

  
| **Car Model** | **Cost** | **Top Speed**  
---|---|---|---  
**Value** | Ford Mustang | 27205.00 | 163  
  


| **Car Model** | **Cost** | **Top Speed**  
---|---|---|---  
**Value** | Chevy Corvette | 66400.00 | 194  
  


**EXAMPLE** :

| **Example**  
---|---  
**Input Parameters to** `fastest_car()` |

`fastest_car([""Ford Mustang"", 27205.00, 163], [""Chevy Corvette"", 66400.00,
194])`  
  
**Outputs** | Chevy Corvette



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def fastest_car(car1, car2):
    if car1[2] > car2[2]:
        return car1[0]
    elif car2[2] > car1[2]:
        return car2[0]
    else:
        return ""Same speed""
"
359,IterLogic2_timestable,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.




**PROBLEM STATEMENT:  
** Write an algorithm that asks the user for a positive number and then
outputs the multiplication table of that number 1-10.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Inputs | 3 | 9  
Outputs |

3  
6  
9  
12  
15  
18  
21  
24  
27  
30

| 9  
18  
27  
36  
45  
54  
63  
72  
81  
90  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def print_multiplication_table():
    num = int(input(""Enter a positive number: ""))
    for i in range(1, 11):
        print(num * i)
        
print_multiplication_table()
"
360,IterLogic2_printchars,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** Write a Python algorithm that asks the users for two ASCII characters
(e.g., 'a', 'z'), and prints all of the characters between them (inclusive).

  * If the first character has a lower ASCII value than the second (e.g., 'a' - 'z'), print out the letters in ascending order.
  * Alternatively, if the second letter has a lower ASCII value, print out the letters in descending order.



**HINTS:**

  * Use the `ord()` function to convert a character into an integer:  
`ord('a')` returns 141  
  

  * Use the `chr()` function to convert an integer back into a character:  
`chr(142)` returns 'b'



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Inputs | a  
c | f  
a  
Outputs |

a  
b  
c

| f  
e  
d  
c  
b  
a



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# define the start and end ASCII values for the range
start_char = input(""Enter the first character: "")
end_char = input(""Enter the end character: "")

start_value = ord(start_char)
end_value = ord(end_char)

# check the order of input and print characters accordingly in ascending or descending order.
if start_value <= end_value:
  for i in range(start_value, end_value + 1):
      print(chr(i))
else:
  for i in range(start_value, end_value - 1, -1):
      print(chr(i))
"
361,IterLogic2_football,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** In, Python, write an algorithm that first asks the user how many football
players they wish to enter statistics for and then gets that many yearly
passing totals for each player. Output how many of those players that had more
than 5000 passing yards in a year. Also your algorithm will output the average
yardage per year as well as the minimum yardage entered, in that order. You
can assume there is at least one player's yardage to input.



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
**Inputs** | 6  
4924  
4442  
5117  
2700  
1990  
4399 | 5  
2305  
4209  
5100  
5109  
3800 | 4  
4200  
2709  
3757  
2976  
**Outputs** | 1  
3928.6666666666665  
1990 | 2  
4104.6  
2305 | 0  
3410.5  
2709



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_of_players = int(input())
totals = []
for _ in range(num_of_players):
    passing_yards = int(input())
    totals.append(passing_yards)
more_than_5000 = len([yards for yards in totals if yards > 5000])
avg_yard = sum(totals) / num_of_players
min_yard = min(totals)
print(more_than_5000)
print(avg_yard)
print(min_yard)
"
362,IterLogic2_counting,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.




**PROBLEM STATEMENT:  
** Write a Python algorithm that gets three numbers from the user, X, Y, and
Z. Then have the algorithm output all the numbers from X to Y (inclusive),
counting by Z. You may assume that Z is non-zero.



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
**Inputs** | 1  
5  
1 | -5  
-10  
-3 | 15  
15  
100  
**Outputs** | 1  
2  
3  
4  
5 | -5  
-8 | 15



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
x = int(input(""Enter the starting number: ""))
y = int(input(""Enter the ending number: ""))
z = int(input(""Enter the difference: ""))

for i in range(x, y + 1, z):
    print(i)
"
363,IterLogic2_coordinates,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** Write a Python algorithm that prints all the coordinates in a coordinate
plane, given two corners. Your program should get four inputs from the user:

  * the starting x-coordinate,
  * the ending x-coordinate,
  * the starting y-coordinate, and
  * the ending y-coordinate.

Your program will then print out all of the coordinates in x y order
(separating coordinates with a space), listing all of the coordinates in the
x-axis before incrementing y. You may assume that the ending coordinate is
never less than the starting coordinate.  

For example, your algorithm would print out:  
1 2  
2 2  
3 2  
4 2  
5 2  
6 2  
1 3  
2 3  
3 3  
4 3  
5 3  
6 3  
. . . and so on



**HINTS:**

  * Write a loop that first prints all of the x coordinates from start to end
  * Use a nested loop to print all of the y coordinates from start to end



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Inputs** | 0  
1  
0  
1 | 0  
2  
0  
1  
**Outputs** | 0 0  
1 0  
0 1  
1 1 | 0 0  
1 0  
2 0  
0 1  
1 1  
2 1  
  




Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
start_x = int(input(""Enter the starting x-coordinate: ""))
end_x = int(input(""Enter the ending x-coordinate: ""))
start_y = int(input(""Enter the starting y-coordinate: ""))
end_y = int(input(""Enter the ending y-coordinate: ""))

for y in range(start_y, end_y+1):
    for x in range(start_x, end_x+1):
        print(x, y)
"
364,IterLogic2_class2017,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** In Python, write an algorithm that first asks the user how many cadets to
input and then gets that many cadet class years from the user. Output how many
of those cadets were in the class of 2017. You can assume there is at least
one cadet to enter.

**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | 4  
2014  
2016  
2017  
2017 | 5  
2015  
2017  
2014  
2014  
2017 | 4  
2014  
2016  
2014  
2014  
Outputs | 2 | 3 | 0



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_of_cadets = int(input())
cadet_classes = []
for x in range(num_of_cadets):
    cadet_classes.append(int(input()))

cadets_in_2017 = cadet_classes.count(2017)
print(cadets_in_2017)
"
365,IterLogic1_waittimes,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write an algorithm that lets the user input the wait times for various
rides at an amusement park (in minutes) until he/she types the value -999.
Output the shortest waiting time, followed by the number of waiting times that
are over 30 minutes.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

90  
30  
31  
-999

|

35  
15  
90  
120  
15  
-999

|

15  
15  
10  
5  
-999  
  
Outputs | 30  
2 | 15  
3 | 5  
0



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
#initializing variables
shortest_wait = None
over_30_list = []

while True:
  #taking input from user
  wait_time = int(input())
  
  #check if entered value is -999 and break out of loop if true
  if wait_time == -999:
    break 
  
  #checking if wait time is longest wait time
  if shortest_wait == None or wait_time < shortest_wait:
    shortest_wait = wait_time
  if wait_time > 30:
    over_30_list.append(wait_time)
    
#printing shortest wait time and number of times over 30
print(shortest_wait)
print(len(over_30_list))
"
366,IterLogic1_squadrons,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write an algorithm that asks the user for the number of squadrons to input,
and then gets each squadron's number. Output the number  
of squadrons from 1st, 2nd, 3rd, and 4th groups (one per line)

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

3  
3  
19  
24

|

4  
19  
25  
37  
40

|

2  
1  
34  
  
Outputs | 1  
1  
1  
0 | 0  
1  
1  
2 | 1  
0  
0  
1



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
n = int(input().strip())
groups = [0, 0, 0, 0]
for _ in range(n):
    squad = int(input().strip())
    groups[(squad-1)//25] += 1
for group in groups:
    print(group)
"
367,IterLogic1_dvc,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM NAME:  
** IterLogic1_dvc



**PROBLEM STATEMENT:  
** The CS110Z course director, unfortunately, was tricked into purchasing a
Disney Vacation Club timeshare. The good news about DVC is that it lets you
reserve a room at any Disney Resort for one week! The downside, however, is
that members have to pay an annual ""maintenance fee"" so that the mouse can
keep the property looking good (EVEN when Disney World was closed due to
COVID-19 . . . yay).

This year, the maintenance was $623.00. If that isn't bad enough, your course
director discovered that maintenance fees aren't fixed! On the contrary, it
accues each year at a rate of approximately 1.5%.

Write a Python function called `get_years_until` that takes a  **target
value**  as a parameter, and returns the number of years (assuming a fixed
interest rate) before the maintenance fee exceeds this value.



**Example 1**  
`get_years_until(624)` should return 1. This is because:

  * The maintenance fee will increase by $9.35 (i.e., 1.5% of 623) in a year
  * The new maintenance fee will be $623.00 + $9.35 = $632.35, which is obviously more than $624.00

**  
Example 2**  
`get_years_until(1000)` should return 32. This is because:

  * 623 * 1.015 * 1.015 * 1.015 . . . (32 times total) = $1003.23, which is obviously more than $1000.00

  
**Don't Know Where to Start?!?**  
Use a While loop to keep calculating the new maintenance fee until the value
is . . . (we'll let you figure out the rest).



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def get_years_until(target_value):
    maintenance_fee = 623.00
    years = 0
    while maintenance_fee <= target_value:
        maintenance_fee += maintenance_fee * 0.015
        years += 1
    return years
"
368,IterLogic1_countby10s,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Write a program whose input is two integers. Output the first integer and
subsequent increments of 10 as long as the value is less than or equal to the
second integer.

Case #1: If the input is:

    
    
    -15
    30
    

the output is:

    
    
    -15
    -5
    5
    15
    25
    

Case 2: If the second integer is less than the first as in:

    
    
    20
    5
    

the output is:

    
    
    Second integer can't be less than the first.
    

For coding simplicity, output a space after every integer, including the last.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
first_num = int(input())
second_num = int(input())

if second_num < first_num:
    print('Second integer can\'t be less than the first.')
else:
    for i in range(first_num, second_num+1, 10):
        print(i, end=' ')
"
369,IterLogic1_count,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write a Python program that gets 2 inputs from the user

  * a number,  **x**
  * an increment amount,  **y**

Your program will then print out all the numbers from 0 to the user-defined
value (x), counting by the increment amount (y).

**EXAMPLES:**

| Example 1 | Example 2  
---|---|---  
Inputs | 10  
2 | 14  
3  
Outputs | 0  
2  
4  
6  
8  
10 | 0  
3  
6  
9  
12



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Initial skeleton code
x = int(input(""Enter a number: ""))
y = int(input(""Enter an increment amount: ""))

for i in range(0,x+1,y):
  print(i)
"
370,IterLogic1_cargocapacity,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Write an algorithm that lets the user input the cargo capacity (in lbs) of
various transport aircraft until the user enters -1. Your program should
output the min and max cargo capacity, as well as the number of aircraft that
can carry at least 10000 lbs.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

4500  
11000  
9000  
-1

|

9999  
15000  
3500  
17500  
-1

| 10000  
-1  
Outputs | 4500  
11000  
1 | 3500  
17500  
2 | 10000  
10000  
1



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
min_capacity = float('inf')
max_capacity = float('-inf')
aircrafts_above_10k = 0

cargo_capacity = int(input())

while cargo_capacity != -1:
    if cargo_capacity < min_capacity:
        min_capacity = cargo_capacity
    if cargo_capacity> max_capacity:
        max_capacity = cargo_capacity
    
    if cargo_capacity >= 10000:
        aircrafts_above_10k += 1
    
    cargo_capacity = int(input())
    

print(min_capacity)
print(max_capacity)
print(aircrafts_above_10k)
"
371,IterLogic1_averagerun,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** In, Python, write an algorithm that first asks the user how many PFT run
times to input and then gets that many values from the user. Output the
average of all the run times. You can assume there is at least one run time to
input.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | 6  
98  
75  
88  
82  
94  
100 | 5  
99  
83  
79  
86  
87 | 4  
88  
82  
80  
90  
Outputs | 89.5 | 86.8 | 85



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_runs = int(input())
total_time = 0

for i in range(num_runs):
  time = int(input())
  total_time += time

average = total_time / num_runs
print(average)
"
372,Graphics3_soundboard,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Using PythonGraph, create a ""soundboard"" application. Your program should
display a list of colored buttons (i.e., rectangles). When the user clicks
inside of a rectangle, the program plays a different
sound.[](https://canvas.instructure.com/courses/1762383/files/86200052/download?download_frd=1)

The provided template file comes with a single button implemented. Your job is
to study this code and create at least 5 other buttons. Note: The buttons do
not have to be laid out in the same arrangement, but they should look
organized.

When you are finished, upload your Python code. Do NOT upload any of the sound
files.





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pygame, sys
from pygame import *
from pygame.locals import *

# Sound files (replace with your own .wav files)
soundfiles = ['sound1.wav', 'sound2.wav', 'sound3.wav', 'sound4.wav', 'sound5.wav', 'sound6.wav']

pygame.mixer.init(22050, -16, 2, 512)
pygame.init()

screen = pygame.display.set_mode((640,480))

class Button:
    def __init__(self, soundfile, rectangle, color):
        self.sound = pygame.mixer.Sound(soundfile)
        self.rect = pygame.draw.rect(screen, color, rectangle)

    def isPressed(self, pos):
        return self.rect.collidepoint(pos)

    def playSound(self):
        self.sound.play()


# Create a list of buttons
buttons = [
    Button(soundfiles[0], Rect((50, 50, 100, 50)), (255, 0, 0)),
    Button(soundfiles[1], Rect((200, 50, 100, 50)), (0, 255, 0)),
    Button(soundfiles[2], Rect((350, 50, 100, 50)), (0, 0, 255)),
    Button(soundfiles[3], Rect((50, 150, 100, 50)), (255, 255, 0)),
    Button(soundfiles[4], Rect((200, 150, 100, 50)), (0, 255, 255)),
    Button(soundfiles[5], Rect((350, 150, 100, 50)), (255, 0, 255))
]

while True:
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            sys.exit()
        elif event.type == MOUSEBUTTONDOWN:
            pos = pygame.mouse.get_pos()
            for button in buttons:
                if button.isPressed(pos):
                    button.playSound()
    pygame.display.update()
"
373,Graphics3_paint,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
**

Using PythonGraph, create a simple paint application. Your program should draw
circles on the window whenever the user presses the left mouse button. Your
program should also watch for keyboard inputs, and allow the user to change
colors and the size of the circle by pressing on different keys of your
choice.

The code template of a paint program has been provided to you as a starting
point in paint. Use this code and make the necessary modifications in the
Animation while loop.

When you are finished, upload your Python code.



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pythongraph

# Initialize the graphics system
pythongraph.initialize_graphics()

# Constants
circle_size = 10
color = pythongraph.create_random_color()

# Main loop
while pythongraph.graphics_window_open():
    # Process events
    events_list = pythongraph.get_event()
    
    for event in events_list:
        # If the event is a mouse press, draw a circle there
        if event.type == pythongraph.MOUSE_BUTTON_PRESS:
            pythongraph.draw_filled_circle(event.x, event.y, circle_size, color)

        # If the event is a key press, adjust the color or size
        elif event.type == pythongraph.KEY_PRESS:
            if event.key == ""n"":  # if the ""n"" key is pressed, draw a new random color
                color = pythongraph.create_random_color()
            elif event.key == ""+"":  # if the ""+"" key is pressed, make the circles larger
                circle_size += 10
            elif event.key == ""-"":  # if the ""-"" key is pressed, make the circles smaller (but not smaller than 10)
                if circle_size > 10:
                    circle_size -= 10

    # Do the actual drawing on screen
    pythongraph.draw_screen()
"
374,Graphics2_bouncingtriangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** Using the Bouncing Ball from the previous lab as a starting point, generate
an animation of a bouncing triangle. The triangle's vertices should start at
random locations, and bounce whenever the triangle hits a wall.





**HINTS** :

  * Try drawing 3 bouncing balls on the screen.
  * Once the balls are moving correctly, draw 3 lines to connect them!



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Here is a sample solution to the problem using python's Pygame module for creating the animation.

```python
import pygame
import random

# Screen dimensions
WIDTH = 800
HEIGHT = 600

class Point:
    def __init__(self):
        self.x = random.randrange(0, WIDTH)
        self.y = random.randrange(0, HEIGHT)
        self.speed_x = random.randrange(-2, 3)
        self.speed_y = random.randrange(-2, 3)

    def move(self):
        self.x += self.speed_x
        self.y += self.speed_y

        if self.x < 0 or self.x > WIDTH:
            self.speed_x *= -1
        if self.y < 0 or self.y > HEIGHT:
            self.speed_y *= -1

def draw_triangle(screen, points):
    pygame.draw.polygon(screen, (255,255,255), points)

def main():
    pygame.init()

    size = (WIDTH, HEIGHT)
    screen = pygame.display.set_mode(size)

    pygame.display.set_caption(""Bouncing Triangle"")

    done = False
    clock = pygame.time.Clock()

    points = [Point() for _ in range(3)]

    while not done:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                done = True

        screen.fill((0,0,0))

        for point in points:
            point.move()

        draw_triangle(screen, [(point.x, point.y) for point in points])

        pygame.display.flip()

        clock.tick(60)

    pygame.quit()

if __name__ == ""__main__"":
    main()
```
In this code, `Point` class represents each vertex of the triangle, each vertex moves in random speed in both x and y direction. The move method alters the direction of the vertex when it reaches the edge of the window(which resembles bouncing). The main function initializes 3 random points, iterates over main game loop where it moves the vertices points and draws the triangle with these vertices until the user closes the window.
Thus, this generates bouncing triangle animation."
375,Graphics2_bouncingball,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
** Using the pythonGraph animation template, create an animation of a bouncing
ball. Your ball should start at a random location, and change direction each
time it hits a side, top, or bottom of the window.  
  



**CHALLENGE:**

  1. Try to make the ball change color every time it hits a wall.





Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Here is a solution using pygame as it provides better control over animations:

```python
import pygame
import random

# Initialize Pygame
pygame.init()

# Set the dimensions of the screen
WIDTH, HEIGHT = 600, 400
screen = pygame.display.set_mode((WIDTH, HEIGHT))

# Ball properties
RADIUS = 20
x = random.randint(RADIUS, WIDTH - RADIUS)
y = random.randint(RADIUS, HEIGHT - RADIUS)
dx, dy = 3, 3

# Colors
COLORS = [(255, 0, 0), (0, 255, 0), (0, 0, 255), (255, 255, 0), (0, 255, 255), (255, 0, 255)]
color = random.choice(COLORS)

running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    screen.fill((0, 0, 0))

    # Move the ball by changing its position
    x += dx
    y += dy

    # Check for collision with walls
    if x - RADIUS <= 0 or x + RADIUS >= WIDTH:
        dx *= -1
        color = random.choice(COLORS)
    if y - RADIUS <= 0 or y + RADIUS >= HEIGHT:
        dy *= -1
        color = random.choice(COLORS)

    pygame.draw.circle(screen, color, (x, y), RADIUS)
    pygame.display.flip()

pygame.quit()
```

This program will draw a ball moving around the screen. When the ball hits a wall (top/bottom/left/right), it will bounce back in the opposite direction and change its color. The program will quit upon closing the pygame window."
376,FileIO_echo,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.


**PROBLEM STATEMENT:  
**

Write a program that asks the user to type the name of a file (e.g.,
""file.txt""), and a letter. Your program should then open the file, and print
out all of the lines where the first character starts with the letter

For example, if the user types the following filename:

    
    
    input1.txt
    a
    

and the contents of input1.txt are:

    
    
    aspiration
    classified
    federation
    

the output should be:

    
    
    aspiration
    



Notes:

  * Each line ends with the '\n' character. Use `split()` to get each line.
  * Refer to the String Functions slide to see how you can get the first character from a string



Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def find_lines_starting_with_letter():
  filename = input(""Enter name of the file: "")
  letter = input(""Enter a letter: "")

  with open(filename, 'r') as f:
    lines = f.readlines()
    for line in lines:
      if line[0] == letter:
        print(line.strip())  # Use strip to remove the trailing newline

find_lines_starting_with_letter()
"
377,a3_3_chars3,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_characters`. Write a
program that prints out each of the items in this list (one item per line).  



**EXAMPLE:  
** If, for example, the list was:  [""ab"", ""cd"", ""ef""]

Your program should print:

    
    
    ab  
    cd  
    ef



**NOTE:**

  * You must use a loop to complete this task.  



Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_characters = [""sp"",""jm"",""bt"",""cv"",""ti"",""nn"",""ig"",""au"",""hi"",""vc"",""om"",""pf"",""tk"",""ve"",""xd"",""sj"",""bg"",""pk"",""rk"",""vy"",""uz"",""uv"",""jp"",""wg"",""zi"",""eg"",""ov"",""zt"",""sb"",""ki"",""ua"",""ft"",""hq"",""ik"",""xq"",""hz"",""dh"",""gx"",""gg"",""jg"",""dm"",""pb"",""oq"",""tm"",""mx"",""nh"",""kv"",""qk"",""ml"",""li"",""di"",""iy"",""sr"",""ps"",""rz"",""jl"",""mr"",""na"",""ax"",""qb"",""xt"",""fe"",""ay"",""iv"",""kn"",""ky"",""uh"",""dq"",""ib"",""jz"",""vb"",""fq"",""je"",""cy"",""wy"",""xo"",""ex"",""tg"",""jw"",""ii"",""cd"",""do"",""nw"",""zh"",""el"",""tu"",""it"",""kb"",""wp"",""js"",""ei"",""fz"",""ea"",""ie"",""ts"",""md"",""px"",""sq"",""nm"",""gi""]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# This list is being provided to you.  DO NOT TOUCH!
list_of_characters = [""sp"",""jm"",""bt"",""cv"",""ti"",""nn"",""ig"",""au"",""hi"",""vc"",""om"",""pf"",""tk"",""ve"",""xd"",""sj"",""bg"",""pk"",""rk"",""vy"",""uz"",""uv"",""jp"",""wg"",""zi"",""eg"",""ov"",""zt"",""sb"",""ki"",""ua"",""ft"",""hq"",""ik"",""xq"",""hz"",""dh"",""gx"",""gg"",""jg"",""dm"",""pb"",""oq"",""tm"",""mx"",""nh"",""kv"",""qk"",""ml"",""li"",""di"",""iy"",""sr"",""ps"",""rz"",""jl"",""mr"",""na"",""ax"",""qb"",""xt"",""fe"",""ay"",""iv"",""kn"",""ky"",""uh"",""dq"",""ib"",""jz"",""vb"",""fq"",""je"",""cy"",""wy"",""xo"",""ex"",""tg"",""jw"",""ii"",""cd"",""do"",""nw"",""zh"",""el"",""tu"",""it"",""kb"",""wp"",""js"",""ei"",""fz"",""ea"",""ie"",""ts"",""md"",""px"",""sq"",""nm"",""gi""]

#Your code goes here.
for item in list_of_characters:
    print(item)
"
378,a3_3_chars2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_characters`. Write a
program that prints out each of the items in this list (one item per line).  



**EXAMPLE:  
** If, for example, the list was:  [""ab"", ""cd"", ""ef""]

Your program should print:

    
    
    ab  
    cd  
    ef



**NOTE:**

  * You must use a loop to complete this task.  



Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_characters = [""ao"",""rh"",""vs"",""rf"",""et"",""sm"",""eg"",""wf"",""pp"",""mr"",""iq"",""ti"",""pn"",""pm"",""lx"",""ie"",""qh"",""ls"",""gy"",""zv"",""op"",""tc"",""lt"",""vb"",""wh"",""xk"",""qx"",""ud"",""rv"",""oa"",""dr"",""gk"",""qk"",""er"",""mw"",""ea"",""dg"",""by"",""xa"",""gn"",""br"",""ve"",""pr"",""oy"",""xw"",""wy"",""xi"",""bs"",""ae"",""lz"",""nb"",""iy"",""sz"",""yf"",""gs"",""jc"",""zy"",""xv"",""nn"",""vm"",""xt"",""up"",""rn"",""it"",""yc"",""wn"",""hp"",""zp"",""ey"",""fy"",""ld"",""gd"",""is"",""yk"",""fi"",""vi"",""qq"",""yo"",""tj"",""en"",""zm"",""rc"",""os"",""qz"",""yu"",""mv"",""ke"",""my"",""qe"",""az"",""un"",""ox"",""vy"",""ou"",""ia"",""yh"",""ne"",""wd"",""bb"",""dt""]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_characters = [""ao"",""rh"",""vs"",""rf"",""et"",""sm"",""eg"",""wf"",""pp"",""mr"",""iq"",""ti"",""pn"",""pm"",""lx"",""ie"",""qh"",""ls"",""gy"",""zv"",""op"",""tc"",""lt"",""vb"",""wh"",""xk"",""qx"",""ud"",""rv"",""oa"",""dr"",""gk"",""qk"",""er"",""mw"",""ea"",""dg"",""by"",""xa"",""gn"",""br"",""ve"",""pr"",""oy"",""xw"",""wy"",""xi"",""bs"",""ae"",""lz"",""nb"",""iy"",""sz"",""yf"",""gs"",""jc"",""zy"",""xv"",""nn"",""vm"",""xt"",""up"",""rn"",""it"",""yc"",""wn"",""hp"",""zp"",""ey"",""fy"",""ld"",""gd"",""is"",""yk"",""fi"",""vi"",""qq"",""yo"",""tj"",""en"",""zm"",""rc"",""os"",""qz"",""yu"",""mv"",""ke"",""my"",""qe"",""az"",""un"",""ox"",""vy"",""ou"",""ia"",""yh"",""ne"",""wd"",""bb"",""dt""]

#Your code goes here.
for character in list_of_characters:
    print(character)
"
379,a3_3_chars1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.
**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_characters`. Write a
program that prints out each of the items in this list (one item per line).  



**EXAMPLE:  
** If, for example, the list was:  [""ab"", ""cd"", ""ef""]

Your program should print:

    
    
    ab  
    cd  
    ef



**NOTE:**

  * You must use a loop to complete this task.  



Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_characters = [""mz"",""nz"",""oe"",""pq"",""zy"",""uu"",""ir"",""gy"",""tl"",""pd"",""lb"",""ks"",""uf"",""vj"",""as"",""kh"",""pr"",""am"",""cd"",""lh"",""ci"",""sg"",""zt"",""wn"",""np"",""vt"",""me"",""gs"",""qs"",""we"",""xt"",""rc"",""kw"",""xw"",""yk"",""in"",""eq"",""kt"",""fr"",""wi"",""ku"",""aj"",""or"",""oz"",""po"",""vo"",""go"",""xo"",""xx"",""ca"",""xj"",""cj"",""wj"",""xp"",""jd"",""fo"",""xq"",""nj"",""bq"",""lr"",""dw"",""my"",""hj"",""ve"",""cq"",""do"",""jq"",""ld"",""kl"",""eu"",""gw"",""jy"",""vd"",""au"",""wq"",""nt"",""gd"",""vx"",""xz"",""ao"",""tu"",""xb"",""yd"",""ki"",""kj"",""ns"",""da"",""pv"",""rq"",""vf"",""xi"",""lo"",""ue"",""aa"",""ct"",""xr"",""xn"",""mr"",""iv"",""mu""]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_characters = [""mz"",""nz"",""oe"",""pq"",""zy"",""uu"",""ir"",""gy"",""tl"",""pd"",""lb"",""ks"",""uf"",""vj"",""as"",""kh"",""pr"",""am"",""cd"",""lh"",""ci"",""sg"",""zt"",""wn"",""np"",""vt"",""me"",""gs"",""qs"",""we"",""xt"",""rc"",""kw"",""xw"",""yk"",""in"",""eq"",""kt"",""fr"",""wi"",""ku"",""aj"",""or"",""oz"",""po"",""vo"",""go"",""xo"",""xx"",""ca"",""xj"",""cj"",""wj"",""xp"",""jd"",""fo"",""xq"",""nj"",""bq"",""lr"",""dw"",""my"",""hj"",""ve"",""cq"",""do"",""jq"",""ld"",""kl"",""eu"",""gw"",""jy"",""vd"",""au"",""wq"",""nt"",""gd"",""vx"",""xz"",""ao"",""tu"",""xb"",""yd"",""ki"",""kj"",""ns"",""da"",""pv"",""rq"",""vf"",""xi"",""lo"",""ue"",""aa"",""ct"",""xr"",""xn"",""mr"",""iv"",""mu""]

#Your code goes here.

for character in list_of_characters:
    print(character)
"
