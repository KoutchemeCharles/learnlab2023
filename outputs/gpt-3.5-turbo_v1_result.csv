,problem_id,prompts,code
0,a3_3_animals,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_animals`. Write a
program that prints out each of the items in this list (one item per line).



**EXAMPLE:  
** If, for example, the list contained the items: ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task. 




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_animals`. Write a
program that prints out each of the items in this list (one item per line).



**EXAMPLE:  
** If, for example, the list contained the items: ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task. 




 
Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_animals = ['Tiger', 'Deer', 'Zebra', 'Elephant', 'Swordfish', 'Giraffe', 'Sloth']

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_animals = ['Tiger', 'Deer', 'Zebra', 'Elephant', 'Swordfish', 'Giraffe', 'Sloth']

# Your code goes here.
for animal in list_of_animals:
    print(animal)"
1,a3_1_cargo,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_cargo_planes`. Write a
program that prints a single, specified plane from the list. Your program
shall take a number via user input used to identify which plane to print. For
example, if the user types a 3, you should print out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_cargo_planes`. Write a
program that prints a single, specified plane from the list. Your program
shall take a number via user input used to identify which plane to print. For
example, if the user types a 3, you should print out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_cargo_planes = [""Plane 1"", ""Plane 2"", ""Plane 3"", ""Plane 4"", ""Plane 5""]

plane_number = int(input(""Enter the plane number: ""))
print(list_of_cargo_planes[plane_number - 1])
"
2,a3_3_games,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_games`. Write a program
that prints out each of the items in this list (one item per line).



**EXAMPLE:  
** If, for example, the list contained the items: ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task. 




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_games`. Write a program
that prints out each of the items in this list (one item per line).



**EXAMPLE:  
** If, for example, the list contained the items: ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task. 




 
Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_games = ['Monopoly', 'Risk', 'Clue', 'Chess', 'Operation', 'Jenga', 'Jumanji']

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_games = ['Monopoly', 'Risk', 'Clue', 'Chess', 'Operation', 'Jenga', 'Jumanji']

#Your code goes here.
for game in list_of_games:
    print(game)"
3,a3_4_heights,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_heights. Write a program
that prints out the range ( _i.e.,  _the difference between the max and min
height)



**EXAMPLE:  
** If, for example, the list contained the values: 53, 60, 65

Your program should print:

    
    
    12






You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_heights. Write a program
that prints out the range ( _i.e.,  _the difference between the max and min
height)



**EXAMPLE:  
** If, for example, the list contained the values: 53, 60, 65

Your program should print:

    
    
    12






 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_heights = [53, 60, 65]
height_range = max(list_of_heights) - min(list_of_heights)
print(height_range)
"
4,lsn9_practice4,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that asks the user for the area of three plots of land.

  * The first area will be provided to you in ACRES
  * The second area will be provided to you in SQUARE MILES (1 Acre = 0.0015625 Sq Miles)
  * The third area will be provided to you in SQUARE KILOMETERS

Your program will output ""Plot X is the biggest"", replacing X with either a 1,
2, or 3 depending on if the first, second, or third plot of land is the
biggest, respectively. For this problem, you may assume that the plots are all
different sizes (e.g., no two plots will be the same size)

**NOTES:**

  * **1 acre = 0.0015625 square miles**
  * **1 sq kilometer = 0.386102 square miles**

**EXAMPLES:**

**EXAMPLE 1** | **EXAMPLE 2**  
---|---  
**Inputs** |

35  
0.25  
1

|

150  
1  
2.2  
  
**Expected Output** | Plot 3 is the biggest | Plot 2 is the biggest


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that asks the user for the area of three plots of land.

  * The first area will be provided to you in ACRES
  * The second area will be provided to you in SQUARE MILES (1 Acre = 0.0015625 Sq Miles)
  * The third area will be provided to you in SQUARE KILOMETERS

Your program will output ""Plot X is the biggest"", replacing X with either a 1,
2, or 3 depending on if the first, second, or third plot of land is the
biggest, respectively. For this problem, you may assume that the plots are all
different sizes (e.g., no two plots will be the same size)

**NOTES:**

  * **1 acre = 0.0015625 square miles**
  * **1 sq kilometer = 0.386102 square miles**

**EXAMPLES:**

**EXAMPLE 1** | **EXAMPLE 2**  
---|---  
**Inputs** |

35  
0.25  
1

|

150  
1  
2.2  
  
**Expected Output** | Plot 3 is the biggest | Plot 2 is the biggest


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def compare_plot_sizes(acres, square_miles, square_km):
    plot1 = acres
    plot2 = square_miles / 0.0015625
    plot3 = square_km / 0.386102
    
    if plot1 > plot2 and plot1 > plot3:
        return ""Plot 1 is the biggest""
    elif plot2 > plot1 and plot2 > plot3:
        return ""Plot 2 is the biggest""
    else:
        return ""Plot 3 is the biggest""
"
5,lsn9_practice3,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that asks the user for the price of an item in US dollars /
cents. Then calculate and print out the equivalent price of the item in:

  *     * British Pounds (1.25 USD per Pound)
    * Korean Won (1 Won == 0.00083 USD)
    * Mexican Pesos (1 Peso == 53.81 Won)

Print each currency on a separate line.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that asks the user for the price of an item in US dollars /
cents. Then calculate and print out the equivalent price of the item in:

  *     * British Pounds (1.25 USD per Pound)
    * Korean Won (1 Won == 0.00083 USD)
    * Mexican Pesos (1 Peso == 53.81 Won)

Print each currency on a separate line.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
6,lsn9_practice2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a program that gets two (x, y) coordinates from
the user.  Write a program that calculates the distance between these two
points, and prints them out.

HINT:  You will have to use the math module.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a program that gets two (x, y) coordinates from
the user.  Write a program that calculates the distance between these two
points, and prints them out.

HINT:  You will have to use the math module.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

# Read the coordinates from the user
x1 = float(input(""Enter the x-coordinate for the first point: ""))
y1 = float(input(""Enter the y-coordinate for the first point: ""))
x2 = float(input(""Enter the x-coordinate for the second point: ""))
y2 = float(input(""Enter the y-coordinate for the second point: ""))

# Calculate the distance between the two points
distance = math.sqrt((x2 - x1)**2 + (y2 - y1)**2)

# Print the distance
print(""The distance between the two points is:"", distance)
"
7,lsn9_practice1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a program that prints out the class year.
Write the approrpriate input statement above this line to make this program
work.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a program that prints out the class year.
Write the approrpriate input statement above this line to make this program
work.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","year = input(""Enter your class year: "")
print(""Class Year:"", year)"
8,lsn8_uod,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You've been asked to develop a tool to help identify the uniform of the day,
based on temperature and wind speed.

The command center has provided the following table for guidance:

| Temperature  
---|---  
Wind Speed |  | <40 | 40 | >40 and <60 | 60 | >60  
<15 | Parkas | A-Jackets | A-Jackets | A-Jackets | Blues  
15 | ABUs | ABUs | Parkas | Parkas | Blues  
>15 | ABUs | ABUs | Parkas | Parkas | A-Jackets  
  
Create a Python program that first gets the temperature (in degrees
Fahrenheit) and then the wind speed (in knots) from the user. You may assume
that all inputs are non-negative numbers.

It should then output the correct response, as described above.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You've been asked to develop a tool to help identify the uniform of the day,
based on temperature and wind speed.

The command center has provided the following table for guidance:

| Temperature  
---|---  
Wind Speed |  | <40 | 40 | >40 and <60 | 60 | >60  
<15 | Parkas | A-Jackets | A-Jackets | A-Jackets | Blues  
15 | ABUs | ABUs | Parkas | Parkas | Blues  
>15 | ABUs | ABUs | Parkas | Parkas | A-Jackets  
  
Create a Python program that first gets the temperature (in degrees
Fahrenheit) and then the wind speed (in knots) from the user. You may assume
that all inputs are non-negative numbers.

It should then output the correct response, as described above.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
temperature = int(input(""Enter the temperature: ""))
wind_speed = int(input(""Enter the wind speed: ""))

if temperature < 15:
    if wind_speed < 40:
        print(""Parkas"")
    elif wind_speed == 40:
        print(""A-Jackets"")
    elif 40 < wind_speed < 60:
        print(""A-Jackets"")
    elif wind_speed == 60:
        print(""A-Jackets"")
    elif wind_speed > 60:
        print(""Blues"")
elif temperature == 15:
    if wind_speed < 40:
        print(""ABUs"")
    elif wind_speed == 40:
        print(""ABUs"")
    elif 40 < wind_speed < 60:
        print(""Parkas"")
    elif wind_speed == 60:
        print(""Parkas"")
    elif wind_speed > 60:
        print(""Blues"")
elif temperature > 15:
    if wind_speed < 40:
        print(""ABUs"")
    elif wind_speed == 40:
        print(""ABUs"")
    elif 40 < wind_speed < 60:
        print(""Parkas"")
    elif wind_speed == 60:
        print(""Parkas"")
    elif wind_speed > 60:
        print(""A-Jackets"")
"
9,lsn8_speeding,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that gets a speed (in miles per hour). You may assume that
all inputs are non-negative numbers.

It should output the kind of ticket a police officer should give the driver
(according to the table below).

Speed (mph) | <= 65 | >65 and <= 70 | >70 and <= 75 | > 75 and <= 80 | > 80  
---|---|---|---|---|---  
Ticket | No Ticket | Warning | Speeding | Reckless Driving | Reckless
Endangerment  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3 | Example 4 | Example 5  
---|---|---|---|---|---  
Input | 48 | 68 | 72 | 78 | 136  
Expected Output  | No Ticket | Warning | Speeding | Reckless Driving |
Reckless Endangerment


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that gets a speed (in miles per hour). You may assume that
all inputs are non-negative numbers.

It should output the kind of ticket a police officer should give the driver
(according to the table below).

Speed (mph) | <= 65 | >65 and <= 70 | >70 and <= 75 | > 75 and <= 80 | > 80  
---|---|---|---|---|---  
Ticket | No Ticket | Warning | Speeding | Reckless Driving | Reckless
Endangerment  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3 | Example 4 | Example 5  
---|---|---|---|---|---  
Input | 48 | 68 | 72 | 78 | 136  
Expected Output  | No Ticket | Warning | Speeding | Reckless Driving |
Reckless Endangerment


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def get_ticket(speed):
    if speed <= 65:
        return ""No Ticket""
    elif speed <= 70:
        return ""Warning""
    elif speed <= 75:
        return ""Speeding""
    elif speed <= 80:
        return ""Reckless Driving""
    else:
        return ""Reckless Endangerment""
"
10,lsn8_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a program that gets the user's body
temperature. If the body temperature is between 97-99 (inclusive), print
""Normal"". Otherwise, print ""Abnormal""


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a program that gets the user's body
temperature. If the body temperature is between 97-99 (inclusive), print
""Normal"". Otherwise, print ""Abnormal""


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
temperature = float(input(""Enter body temperature: ""))

if temperature >= 97 and temperature <= 99:
    print(""Normal"")
else:
    print(""Abnormal"")
"
11,lsn8_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a program that gets the user's body
temperature. If the body temperature is between 97-99 (inclusive), print
""Normal"". Otherwise, print ""Abnormal""


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a program that gets the user's body
temperature. If the body temperature is between 97-99 (inclusive), print
""Normal"". Otherwise, print ""Abnormal""


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
temperature = float(input(""Enter your body temperature: ""))

if temperature >= 97 and temperature <= 99:
    print(""Normal"")
else:
    print(""Abnormal"")
"
12,lsn8_roundtrip,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python program that gets three values from the user:

  * The distance to a destination (in miles)
  * The amount of fuel in the user's car (in gallons)
  * The # of miles the user's car can travel per gallon of gas (i.e., Miles Per Gallon)

You may assume that all inputs are non-negative numbers.

Calculate the amount of fuel needed to reach the destination. Then output
whether or not the user needs to refuel during a round trip, using the below
table as a guide:

Fuel Consumed (One-Way) | =< 50% | > 50% and <= 100% | > 100%  
---|---|---|---  
Output | No Refueling Needed | Refuel on Way Back | Refuel En Route  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 100  
10  
30 | 100  
5  
20 | 100  
7  
10  
Output | No Refueling Needed | Refuel on Way Back | Refuel En Route  
  
**NOTE: Your Output Must Match Exactly**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python program that gets three values from the user:

  * The distance to a destination (in miles)
  * The amount of fuel in the user's car (in gallons)
  * The # of miles the user's car can travel per gallon of gas (i.e., Miles Per Gallon)

You may assume that all inputs are non-negative numbers.

Calculate the amount of fuel needed to reach the destination. Then output
whether or not the user needs to refuel during a round trip, using the below
table as a guide:

Fuel Consumed (One-Way) | =< 50% | > 50% and <= 100% | > 100%  
---|---|---|---  
Output | No Refueling Needed | Refuel on Way Back | Refuel En Route  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 100  
10  
30 | 100  
5  
20 | 100  
7  
10  
Output | No Refueling Needed | Refuel on Way Back | Refuel En Route  
  
**NOTE: Your Output Must Match Exactly**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# get input from user
distance = float(input(""Enter the distance to the destination (in miles): ""))
fuel = float(input(""Enter the amount of fuel in the car (in gallons): ""))
mpg = float(input(""Enter the miles per gallon of the car: ""))

# calculate fuel needed to reach the destination
fuel_needed = distance / mpg

# check if refueling is needed
if fuel >= fuel_needed:
    output = ""No Refueling Needed""
elif fuel >= fuel_needed / 2 and fuel <= fuel_needed:
    output = ""Refuel on Way Back""
else:
    output = ""Refuel En Route""

# print the output
print(output)
"
13,lsn8_lists,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write an algorithm that gets a decimal GPA, APA, and MPA from the user (in
that order). You may assume that all inputs are non-negative whole numbers.

It then reports which meritorious list the cadet is on. If the GPA is equal to
or above 3.0, the cadet is on the ""Dean's List"", and if the APA is equal to or
above 3.0, the cadet is on the ""Athletic Director's List"", and if the MPA is
equal to or above 3.0, the cadet is on the ""Commandant's List"". Finally, if
the cadet qualifies for all three individual lists, then the cadet is on the
""Superintendent's List"". The algorithm should report all the lists the cadet
is on (in the order defined above), unless the cadet is on the Superintendents
List, in which case, it should report only, ""Superintendent's List"".

| No List | Dean's List | Athletic Director's List | Commandant's List |
Superintendent's List  
---|---|---|---|---|---  
GPA | < 3.0 | >= 3.0 | n/a | n/a | >= 3.0  
APA | < 3.0 | n/a | >= 3.0 | n/a | >= 3.0  
MPA | < 3.0 | n/a | n/a | >= 3.0 | >= 3.0  
  
**EXAMPLES:**

Example 1 | Example 2 | Example 3 | Example 4 | Example 5  
---|---|---|---|---  
Input | 2.8  
2.6  
2.5 | 3.5  
3.2  
2.8 | 3.3  
2.8  
3.4 | 3.6  
3.8  
3.2 | 2.8  
3.5  
3.8  
Output | No List | Dean's List  
Athletic Director's List | Dean's List  
Commandant's List | Superintendent's List | Athletic Director's List  
Commandant's List


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write an algorithm that gets a decimal GPA, APA, and MPA from the user (in
that order). You may assume that all inputs are non-negative whole numbers.

It then reports which meritorious list the cadet is on. If the GPA is equal to
or above 3.0, the cadet is on the ""Dean's List"", and if the APA is equal to or
above 3.0, the cadet is on the ""Athletic Director's List"", and if the MPA is
equal to or above 3.0, the cadet is on the ""Commandant's List"". Finally, if
the cadet qualifies for all three individual lists, then the cadet is on the
""Superintendent's List"". The algorithm should report all the lists the cadet
is on (in the order defined above), unless the cadet is on the Superintendents
List, in which case, it should report only, ""Superintendent's List"".

| No List | Dean's List | Athletic Director's List | Commandant's List |
Superintendent's List  
---|---|---|---|---|---  
GPA | < 3.0 | >= 3.0 | n/a | n/a | >= 3.0  
APA | < 3.0 | n/a | >= 3.0 | n/a | >= 3.0  
MPA | < 3.0 | n/a | n/a | >= 3.0 | >= 3.0  
  
**EXAMPLES:**

Example 1 | Example 2 | Example 3 | Example 4 | Example 5  
---|---|---|---|---  
Input | 2.8  
2.6  
2.5 | 3.5  
3.2  
2.8 | 3.3  
2.8  
3.4 | 3.6  
3.8  
3.2 | 2.8  
3.5  
3.8  
Output | No List | Dean's List  
Athletic Director's List | Dean's List  
Commandant's List | Superintendent's List | Athletic Director's List  
Commandant's List


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def merit_lists(gpa, apa, mpa):
    lists = []
    if gpa >= 3.0:
        lists.append(""Dean's List"")
    if apa >= 3.0:
        lists.append(""Athletic Director's List"")
    if mpa >= 3.0:
        lists.append(""Commandant's List"")
    if len(lists) == 3:
        return ""Superintendent's List""
    return lists

gpa = float(input())
apa = float(input())
mpa = float(input())

lists = merit_lists(gpa, apa, mpa)
for l in lists:
    print(l)
"
14,lsn8_fuel,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write an algorithm that gets a fuel load (in lbs) and then a distance to base
(in nautical miles). You may assume all inputs are non-negative numbers.

It then outputs what kind of action the pilot should take. If the fuel load is
less than 50 lbs and the distance to base is less than 70 nm, report ""Return
to base"", otherwise, report ""Resume flight"".

**EXAMPLES:**

| Example 1 | Example 2 | Example 3 | Example 4  
---|---|---|---|---  
Input | 30  
60 | 60  
60 | 40  
80 | 60  
80  
Output | Return to base | Resume flight | Resume flight | Resume flight  
  
**Note: Output must match exactly.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write an algorithm that gets a fuel load (in lbs) and then a distance to base
(in nautical miles). You may assume all inputs are non-negative numbers.

It then outputs what kind of action the pilot should take. If the fuel load is
less than 50 lbs and the distance to base is less than 70 nm, report ""Return
to base"", otherwise, report ""Resume flight"".

**EXAMPLES:**

| Example 1 | Example 2 | Example 3 | Example 4  
---|---|---|---|---  
Input | 30  
60 | 60  
60 | 40  
80 | 60  
80  
Output | Return to base | Resume flight | Resume flight | Resume flight  
  
**Note: Output must match exactly.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def check_fuel_distance(fuel_load, distance_to_base):
    if fuel_load < 50 and distance_to_base < 70:
        return ""Return to base""
    else:
        return ""Resume flight""
"
15,lsn7_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a program that gets a course name and number
(e.g., Math 243) from the user. Modify the program to do the following:

  * If the course name is equal to ""CS110"", print ""You get to program!""
  * Otherwise, print ""Boo, no programming.""


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a program that gets a course name and number
(e.g., Math 243) from the user. Modify the program to do the following:

  * If the course name is equal to ""CS110"", print ""You get to program!""
  * Otherwise, print ""Boo, no programming.""


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
16,lsn7_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a program that gets a temperature from the
user. Modify the program to do the following:

  * If the temperature is less than or equal to 32, print ""Water Has Frozen""
  * Otherwise (i.e., else), print ""Above Water's Freezing Point""


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a program that gets a temperature from the
user. Modify the program to do the following:

  * If the temperature is less than or equal to 32, print ""Water Has Frozen""
  * Otherwise (i.e., else), print ""Above Water's Freezing Point""


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
temperature = int(input(""Enter the temperature: ""))

if temperature <= 32:
    print(""Water Has Frozen"")
else:
    print(""Above Water's Freezing Point"")
"
17,lsn7_positive,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python  **program**  that gets a floating point number from the user:

  * If the number is positive, print the word `POSITIVE`
  * Otherwise, print the word `NOT POSITIVE`

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 10 | -5 | 0  
Output | POSITIVE | NOT POSITIVE | NOT POSITIVE


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python  **program**  that gets a floating point number from the user:

  * If the number is positive, print the word `POSITIVE`
  * Otherwise, print the word `NOT POSITIVE`

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 10 | -5 | 0  
Output | POSITIVE | NOT POSITIVE | NOT POSITIVE


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num = float(input())

if num > 0:
    print(""POSITIVE"")
else:
    print(""NOT POSITIVE"")
"
18,lsn7_largest,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a program that takes three integers as parameters, and prints the
largest (i.e., highest) number.

Ex: If the input is:

    
    
    7
    15
    3
    

Your function should return:

    
    
    15
    

  
In the event that all 3 numbers are the same, output that number.

Ex: If the input is:

    
    
    5
    5
    5
    

Your function should return:

    
    
    5


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a program that takes three integers as parameters, and prints the
largest (i.e., highest) number.

Ex: If the input is:

    
    
    7
    15
    3
    

Your function should return:

    
    
    15
    

  
In the event that all 3 numbers are the same, output that number.

Ex: If the input is:

    
    
    5
    5
    5
    

Your function should return:

    
    
    5


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def largest_number(num1, num2, num3):
    return max(num1, num2, num3)"
19,lsn7_classyear,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Using the below table as a guide, write a Python program that takes the user's
class year as input, and outputs their cadet class. If the class year is
before 2021, output ""Graduate"". Alternatively, if the class year is larger
than 2024, output ""Not a Cadet"".

You may assume that all inputs provided to your application are years
(represented as Integers)

| Example 1 | Example 2 | Example 3 | Example 4 | Example 5 | Example 6  
---|---|---|---|---|---|---  
Input | 2021 | 2022 | 2023 | 2024 | 2020 | 2025  
Output | Firstie | Two Degree | Three Degree | Four Degree | Graduate | Not a
Cadet


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Using the below table as a guide, write a Python program that takes the user's
class year as input, and outputs their cadet class. If the class year is
before 2021, output ""Graduate"". Alternatively, if the class year is larger
than 2024, output ""Not a Cadet"".

You may assume that all inputs provided to your application are years
(represented as Integers)

| Example 1 | Example 2 | Example 3 | Example 4 | Example 5 | Example 6  
---|---|---|---|---|---|---  
Input | 2021 | 2022 | 2023 | 2024 | 2020 | 2025  
Output | Firstie | Two Degree | Three Degree | Four Degree | Graduate | Not a
Cadet


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
year = int(input())

if year < 2021:
    print(""Graduate"")
elif year > 2024:
    print(""Not a Cadet"")
elif year == 2021:
    print(""Firstie"")
elif year == 2022:
    print(""Two Degree"")
elif year == 2023:
    print(""Three Degree"")
elif year == 2024:
    print(""Four Degree"")
"
20,lsn7_atmosphere,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** The Earth's atmosphere is divided into a series of layers. Write an
algorithm that asks the user for the altitude in kilometers. Then output the
corresponding layer according to the following table:

Altitude | ≤10km | >10km&≤50km | >50km&≤85km | >85km&≤1000km |
>1000km&≤100,000km | >100,000km  
---|---|---|---|---|---|---  
**Layer** | Troposphere | Stratosphere | Mesosphere | Thermosphere | Exosphere
| Space


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** The Earth's atmosphere is divided into a series of layers. Write an
algorithm that asks the user for the altitude in kilometers. Then output the
corresponding layer according to the following table:

Altitude | ≤10km | >10km&≤50km | >50km&≤85km | >85km&≤1000km |
>1000km&≤100,000km | >100,000km  
---|---|---|---|---|---|---  
**Layer** | Troposphere | Stratosphere | Mesosphere | Thermosphere | Exosphere
| Space


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
altitude = float(input(""Enter the altitude in kilometers: ""))

if altitude <= 10:
    layer = ""Troposphere""
elif altitude <= 50:
    layer = ""Stratosphere""
elif altitude <= 85:
    layer = ""Mesosphere""
elif altitude <= 1000:
    layer = ""Thermosphere""
elif altitude <= 100000:
    layer = ""Exosphere""
else:
    layer = ""Space""
    
print(""The corresponding layer is"", layer)
"
21,lsn6_temperature,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write an algorithm that prompts the user for a temperature in °F and then
outputs K and °C in that order.

**EXAMPLE:**

| Example 1 | Example 2  
---|---|---  
Input | 32 | 0  
Output | 273.15  
0 | 255.372  
-17.778  
  
**Note: Output must match within a predefined tolerance.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write an algorithm that prompts the user for a temperature in °F and then
outputs K and °C in that order.

**EXAMPLE:**

| Example 1 | Example 2  
---|---|---  
Input | 32 | 0  
Output | 273.15  
0 | 255.372  
-17.778  
  
**Note: Output must match within a predefined tolerance.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def convert_temperature(temperature_f):
    temperature_c = (temperature_f - 32) * 5/9
    temperature_k = temperature_c + 273.15
    
    return temperature_k, temperature_c
"
22,lsn6_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a template that gets a distance and speed from
the user, and calculates the travel time. Unfortunately, the code does not
work. Analyze the code (and error message) and fix the problem.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a template that gets a distance and speed from
the user, and calculates the travel time. Unfortunately, the code does not
work. Analyze the code (and error message) and fix the problem.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","distance = float(input(""Enter the distance: ""))
speed = float(input(""Enter the speed: ""))

time = distance / speed

print(""The travel time is:"", time)"
23,lsn6_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Prompt the user for 3 different values. Store the values in variables using
the names specified within the template. DO NOT include any prompts when
asking for a value from the user.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Prompt the user for 3 different values. Store the values in variables using
the names specified within the template. DO NOT include any prompts when
asking for a value from the user.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Prompt user for 3 different values
value1 = input()
value2 = input()
value3 = input()
"
24,lsn6_projectile,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a python program that can calculate the range of a projectile when fired
from an artillery on level ground. Your program will ask the user to input the
initial velocity (`v`) and angle in degrees (`theta`). Your program should
then calculate and print the range using the following formula:

`range = (v^2 * sin(2 * theta)) / 9.8`  
 **WARNING: The above formula is not valid Python.**  
  

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 800  
45 | 600  
30 | 535.2  
81.7  
Output | 65306.122 | 31813.178 | 8350.235  
  
**Hints**

  * You need to use the `math` module's trig functions to solve this problem. Type `import math` at the top of your code to add it to your program.
  * The `sin()` and `cos()` functions assume that the angle is in  **radians**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a python program that can calculate the range of a projectile when fired
from an artillery on level ground. Your program will ask the user to input the
initial velocity (`v`) and angle in degrees (`theta`). Your program should
then calculate and print the range using the following formula:

`range = (v^2 * sin(2 * theta)) / 9.8`  
 **WARNING: The above formula is not valid Python.**  
  

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 800  
45 | 600  
30 | 535.2  
81.7  
Output | 65306.122 | 31813.178 | 8350.235  
  
**Hints**

  * You need to use the `math` module's trig functions to solve this problem. Type `import math` at the top of your code to add it to your program.
  * The `sin()` and `cos()` functions assume that the angle is in  **radians**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

v = float(input())
theta = float(input())

range = (v ** 2 * math.sin(2 * math.radians(theta))) / 9.8

print(range)
"
25,lsn6_math,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Given three floating-point numbers x, y, and z, output the square root of x,
the absolute value of (y minus z) , and the factorial of (the ceiling of z).
Each input should be on a new line, and rounded to a maximum of 2 decimal
places.

(Hint: use the [`round` (Links to an external
site.)](https://docs.python.org/3/library/functions.html#round) function to
round your outputs!):

`round(# to round, # of digits to round to)`

**EXAMPLE:**

    
    
    5.0
    6.5
    3.2
    

Then the output is:

    
    
    2.24
    3.30
    24.00
    

NOTE: Decimal places may be slightly off depending on the exact numbers used.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Given three floating-point numbers x, y, and z, output the square root of x,
the absolute value of (y minus z) , and the factorial of (the ceiling of z).
Each input should be on a new line, and rounded to a maximum of 2 decimal
places.

(Hint: use the [`round` (Links to an external
site.)](https://docs.python.org/3/library/functions.html#round) function to
round your outputs!):

`round(# to round, # of digits to round to)`

**EXAMPLE:**

    
    
    5.0
    6.5
    3.2
    

Then the output is:

    
    
    2.24
    3.30
    24.00
    

NOTE: Decimal places may be slightly off depending on the exact numbers used.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

# Read the inputs
x = float(input())
y = float(input())
z = float(input())

# Calculate the square root of x
sqrt_x = round(math.sqrt(x), 2)

# Calculate the absolute value of (y - z)
abs_diff_yz = round(abs(y - z), 2)

# Calculate the factorial of the ceiling of z
fact_ceil_z = round(math.factorial(math.ceil(z)), 2)

# Output the results
print(sqrt_x)
print(abs_diff_yz)
print(fact_ceil_z)
"
26,lsn6_calories,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

The following equations estimate the calories burned when exercising ([source
(Links to an external
site.)](https://web.archive.org/web/20121021230025/http://fitnowtraining.com/2012/01/formula-
for-calories-burned/)):

Men: Calories = ( (Age x 0.2017) + (Weight x 0.09036) + (Heart Rate x 0.6309)
-- 55.0969 ) x Time / 4.184

Women: Calories = ( (Age x 0.074) -- (Weight x 0.05741) + (Heart Rate x
0.4472) -- 20.4022 ) x Time / 4.184

Write a program using inputs age (years), weight (pounds), heart rate (beats
per minute), and time (minutes), respectively. Output calories burned for men
and women.

Output each floating-point value (your program will be marked correct so long
as it outputs a value within a predefined range)

**EXAMPLE:**

If the input is:

    
    
    49
    155
    148
    60
    

Then the output is:

    
    
    891.47
    580.94


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

The following equations estimate the calories burned when exercising ([source
(Links to an external
site.)](https://web.archive.org/web/20121021230025/http://fitnowtraining.com/2012/01/formula-
for-calories-burned/)):

Men: Calories = ( (Age x 0.2017) + (Weight x 0.09036) + (Heart Rate x 0.6309)
-- 55.0969 ) x Time / 4.184

Women: Calories = ( (Age x 0.074) -- (Weight x 0.05741) + (Heart Rate x
0.4472) -- 20.4022 ) x Time / 4.184

Write a program using inputs age (years), weight (pounds), heart rate (beats
per minute), and time (minutes), respectively. Output calories burned for men
and women.

Output each floating-point value (your program will be marked correct so long
as it outputs a value within a predefined range)

**EXAMPLE:**

If the input is:

    
    
    49
    155
    148
    60
    

Then the output is:

    
    
    891.47
    580.94


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
age = int(input())
weight = int(input())
heart_rate = int(input())
time = int(input())

calories_men = ((age * 0.2017) + (weight * 0.09036) + (heart_rate * 0.6309) - 55.0969) * time / 4.184
calories_women = ((age * 0.074) - (weight * 0.05741) + (heart_rate * 0.4472) - 20.4022) * time / 4.184

print(calories_men)
print(calories_women)
"
27,lsn6_bits_to_kmg,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

One byte is comprised of 8 bits. A typical computer program has a requirement
for much more memory. Therefore, many bytes can be grouped together to make
larger memory amounts. Our convention is for computer memory is scaled in
logical increments of 210 = 1024.

For example:

  * 1024 bytes = 1 kilobyte (KB)
  * 1024 KB = 1 megabyte (MB)
  * 1024 MB = 1 gigabyte (GB)

Write an algorithm that prompts the user for a number of bits and then outputs
the equivalent number of kilobytes, megabytes, and gigabytes.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 1000000 | 6879000 | 92445694  
Output | 122.07  
0.12  
0.00012 | 839.72  
0.82  
.0008 | 11,284.87  
11.02  
0.01  
  
**Note: Output must match within a predefined tolerance.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

One byte is comprised of 8 bits. A typical computer program has a requirement
for much more memory. Therefore, many bytes can be grouped together to make
larger memory amounts. Our convention is for computer memory is scaled in
logical increments of 210 = 1024.

For example:

  * 1024 bytes = 1 kilobyte (KB)
  * 1024 KB = 1 megabyte (MB)
  * 1024 MB = 1 gigabyte (GB)

Write an algorithm that prompts the user for a number of bits and then outputs
the equivalent number of kilobytes, megabytes, and gigabytes.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 1000000 | 6879000 | 92445694  
Output | 122.07  
0.12  
0.00012 | 839.72  
0.82  
.0008 | 11,284.87  
11.02  
0.01  
  
**Note: Output must match within a predefined tolerance.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def convert_memory(bits):
    kilobytes = bits / (8 * 1024)
    megabytes = bits / (8 * 1024 ** 2)
    gigabytes = bits / (8 * 1024 ** 3)
    return ""{:.2f}\n{:.2f}\n{:.5f}"".format(kilobytes, megabytes, gigabytes)
"
28,lsn6_bits_to_bytes,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

**PROBLEM STATEMENT:  
**

The basic unit of computer memory is a bit. A bit can represent two values (on
or off, 0 or 1). To represent more information, bits are grouped together in
larger quantities. Beyond a bit, the next logical grouping is a byte, where 1
byte has 8 bits. Write an algorithm that prompts the user for a number of bits
and then outputs the equivalent number of bytes.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8 | 800 | 7234  
Output | 1.0 | 100.0 | 904.25  
  
**Note: Output must match exactly.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

**PROBLEM STATEMENT:  
**

The basic unit of computer memory is a bit. A bit can represent two values (on
or off, 0 or 1). To represent more information, bits are grouped together in
larger quantities. Beyond a bit, the next logical grouping is a byte, where 1
byte has 8 bits. Write an algorithm that prompts the user for a number of bits
and then outputs the equivalent number of bytes.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8 | 800 | 7234  
Output | 1.0 | 100.0 | 904.25  
  
**Note: Output must match exactly.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def convert_bits_to_bytes():
    bits = int(input())
    bytes = bits / 8
    print(bytes)

convert_bits_to_bytes()
"
29,lsn6_bit_representation,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

One way bits can hold information is computer images. Computer images are
composed of a grid of small, independent colored cells known as pixels. The
number of colors each pixel can hold is related to the number bits allocated
to each pixel. A simple black and white image, for example, would have a
single bit per pixel, where the value of the bit would represent black or
white for that pixel. Allocating 2 bits per pixel would allow each pixel to
have one of four colors.

Generally speaking, the number of color options available to a particular
pixel can be described as:

    
    
    numberofcolors = 2number of bits

In Python, write an algorithm that prompts the user for a number of bits and
then outputs the number of different colors that could be represented by a
single pixel.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 3 | 8 | 24  
Output | 8 | 256 | 16777216  
  
**Note: Output must match exactly.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

One way bits can hold information is computer images. Computer images are
composed of a grid of small, independent colored cells known as pixels. The
number of colors each pixel can hold is related to the number bits allocated
to each pixel. A simple black and white image, for example, would have a
single bit per pixel, where the value of the bit would represent black or
white for that pixel. Allocating 2 bits per pixel would allow each pixel to
have one of four colors.

Generally speaking, the number of color options available to a particular
pixel can be described as:

    
    
    numberofcolors = 2number of bits

In Python, write an algorithm that prompts the user for a number of bits and
then outputs the number of different colors that could be represented by a
single pixel.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 3 | 8 | 24  
Output | 8 | 256 | 16777216  
  
**Note: Output must match exactly.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
bits = int(input())
colors = 2 ** bits
print(colors)
"
30,lsn5_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that gets a cadet's age, and stores it in a variable called
**your_age.**

Print the user's age + 4.

For example, if the user types:

    
    
     18

Your program should print:

    
    
    22


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that gets a cadet's age, and stores it in a variable called
**your_age.**

Print the user's age + 4.

For example, if the user types:

    
    
     18

Your program should print:

    
    
    22


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
your_age = int(input())
print(your_age + 4)
"
31,lsn5_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Create a variable called  **name,  **and set it equal to your name
(represented as a string--don't forget to use the quotation marks!).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Create a variable called  **name,  **and set it equal to your name
(represented as a string--don't forget to use the quotation marks!).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
name = ""John Doe""
"
32,lsn5_scoreaverage,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that prompts the user for three sports game scores and
outputs the average.

  
**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15  
12 | 89  
103  
63 | 14  
42  
36  
Output | 11.666666666666666 | 85.0 | 30.666666666666668  
  
**Note: Output must match (within a predefined tolerance).**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that prompts the user for three sports game scores and
outputs the average.

  
**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15  
12 | 89  
103  
63 | 14  
42  
36  
Output | 11.666666666666666 | 85.0 | 30.666666666666668  
  
**Note: Output must match (within a predefined tolerance).**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def calculate_average():
    score1 = float(input())
    score2 = float(input())
    score3 = float(input())
    average = (score1 + score2 + score3) / 3
    return average

print(calculate_average())"
33,lsn5_pointspread,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

A ""Point Spread"" is a term used to in sports (and gambling) to describe the
difference between two teams' scores. For example, if one team scores 20
points and another team scores 30 points, the point spread is 10. A point
spread is always a positive number.

Write an algorithm that prompts the user for two sports game scores and
outputs the point spread.  
  
**  
EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15 | 89  
103 | 42  
14  
Output | 7 | 14 | 28  
  
**Note: Output must match exactly.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

A ""Point Spread"" is a term used to in sports (and gambling) to describe the
difference between two teams' scores. For example, if one team scores 20
points and another team scores 30 points, the point spread is 10. A point
spread is always a positive number.

Write an algorithm that prompts the user for two sports game scores and
outputs the point spread.  
  
**  
EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15 | 89  
103 | 42  
14  
Output | 7 | 14 | 28  
  
**Note: Output must match exactly.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# prompt the user for the first score
score1 = int(input())

# prompt the user for the second score
score2 = int(input())

# calculate the point spread
point_spread = abs(score1 - score2)

# output the point spread
print(point_spread)
"
34,lsn5_madlib,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Mad Libs are activities that have a person provide various words, which are
then used to complete a short story in unexpected (and hopefully funny) ways.
(EDITOR'S NOTE: Do you kids even do Mad Libs anymore?)

Complete the program to read the needed values from input, that the existing
output statement(s) can use to output a short story.

**EXAMPLE:**

If the input is:

    
    
    Eric
    Chipotle
    12
    burritos
    

Then the output is:

    
    
    Eric went to Chipotle to buy 12 different types of burritos


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Mad Libs are activities that have a person provide various words, which are
then used to complete a short story in unexpected (and hopefully funny) ways.
(EDITOR'S NOTE: Do you kids even do Mad Libs anymore?)

Complete the program to read the needed values from input, that the existing
output statement(s) can use to output a short story.

**EXAMPLE:**

If the input is:

    
    
    Eric
    Chipotle
    12
    burritos
    

Then the output is:

    
    
    Eric went to Chipotle to buy 12 different types of burritos


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
name = input()
place = input()
number = int(input())
food = input()

print(name, ""went to"", place, ""to buy"", number, ""different types of"", food)
"
35,lsn5_girlscouts,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that asks the user for the amount of money he/she has on
hand, and outputs the number of girl scout cookies that he/she can purchase.
Use the following prices:

$5 per box for the ""Super Six"" (Thin Mints, Samoas, Tagalongs, Do-Si-Dos,
Trefoils, Savannah Smiles)  
$6 per box for the Specialty Cookies (S'mores, Toffee-tastic)

**For this problem, assume that the user will buy all of one or the other. In
other words, output the number of boxes that he/she would be able to obtain if
he/she bought nothing but the Super Six, and nothing but the Specialty
Cookies.**

**HINT:**  
You can convert a number to an integer by using the int() function. For
example:  
 **int(2.51)** will convert the number to 2

EXAMPLE:  
If the input is:

    
    
    26

Then the output is:

    
    
    5 boxes of Thin Mints, Samoas, Tagalongs, Do-Si-Dos, Trefoils, or Savannah Smiles  
    4 boxes of S'mores and Toffee-tastic


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that asks the user for the amount of money he/she has on
hand, and outputs the number of girl scout cookies that he/she can purchase.
Use the following prices:

$5 per box for the ""Super Six"" (Thin Mints, Samoas, Tagalongs, Do-Si-Dos,
Trefoils, Savannah Smiles)  
$6 per box for the Specialty Cookies (S'mores, Toffee-tastic)

**For this problem, assume that the user will buy all of one or the other. In
other words, output the number of boxes that he/she would be able to obtain if
he/she bought nothing but the Super Six, and nothing but the Specialty
Cookies.**

**HINT:**  
You can convert a number to an integer by using the int() function. For
example:  
 **int(2.51)** will convert the number to 2

EXAMPLE:  
If the input is:

    
    
    26

Then the output is:

    
    
    5 boxes of Thin Mints, Samoas, Tagalongs, Do-Si-Dos, Trefoils, or Savannah Smiles  
    4 boxes of S'mores and Toffee-tastic


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
money = int(input())

super_six = money // 5
specialty_cookies = money // 6

print(super_six, ""boxes of Thin Mints, Samoas, Tagalongs, Do-Si-Dos, Trefoils, or Savannah Smiles"")
print(specialty_cookies, ""boxes of S'mores and Toffee-tastic"")
"
36,lsn5_arrivaltime,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write an algorithm that prompts the user for a distance to travel (in miles)
and a speed (in mph) and outputs time of arrival in hours.

  
**For Example:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 72  
60 | 1282  
85 | 120.5  
59.2  
Output | 1.2 | 15.0823 | 2.0355  
  
**Note: Output needs to match the examples.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write an algorithm that prompts the user for a distance to travel (in miles)
and a speed (in mph) and outputs time of arrival in hours.

  
**For Example:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 72  
60 | 1282  
85 | 120.5  
59.2  
Output | 1.2 | 15.0823 | 2.0355  
  
**Note: Output needs to match the examples.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
distance = float(input())
speed = float(input())

time_of_arrival = distance / speed

print(round(time_of_arrival, 4))
"
37,lsn4_printpractice,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

The template file contains various words/phrases that you need to print out
(exactly as written) using Python's `print()` function. For example:

  1. Print the phrase ""Welcome to Computer Science 110!""

  2. Print the result to the following math expression: (640 * 480 * 24) / 8

  3. etc (see the template for details)

Each print statement should be written directly below the corresponding
comment. While you can technically ""cheat"" on this problem, we encourage you
to practice all the various ways that you can use the `print` function. You
will thank us later!


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

The template file contains various words/phrases that you need to print out
(exactly as written) using Python's `print()` function. For example:

  1. Print the phrase ""Welcome to Computer Science 110!""

  2. Print the result to the following math expression: (640 * 480 * 24) / 8

  3. etc (see the template for details)

Each print statement should be written directly below the corresponding
comment. While you can technically ""cheat"" on this problem, we encourage you
to practice all the various ways that you can use the `print` function. You
will thank us later!


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Print the phrase ""Welcome to Computer Science 110!""
print(""Welcome to Computer Science 110!"")

# Print the result of the math expression: (640 * 480 * 24) / 8
print((640 * 480 * 24) / 8)

# Print the phrase ""This is a sentence.""
print(""This is a sentence."")

# Print the result of the math expression: (2 ** 8) - 1
print((2 ** 8) - 1)

# Print the phrase ""CS1 is fun!""
print(""CS1 is fun!"")
"
38,lsn4_parking,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a program that prints a formatted ""No parking"" sign as shown below. Note
the first line has two leading spaces. For ALL labs, end with newline (unless
otherwise stated).

    
    
     NO PARKING  
    1:00 - 5:00 a.m.  
      
    


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a program that prints a formatted ""No parking"" sign as shown below. Note
the first line has two leading spaces. For ALL labs, end with newline (unless
otherwise stated).

    
    
     NO PARKING  
    1:00 - 5:00 a.m.  
      
    


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","print(""     NO PARKING"")
print(""    1:00 - 5:00 a.m.\n"")"
39,lsn4_ascii,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a Python program that prints out a cat:

    
    
    /\ /\
     o o
     = =
     ---  
      
    

_Hint: A backslash  `\` in a string acts as an escape character, such as with
a newline_ `\n`.  _So, to print an actual backslash, escape that backslash by
prepending another backslash. Ex: The following prints a single backslash:_
`print('\\')`


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a Python program that prints out a cat:

    
    
    /\ /\
     o o
     = =
     ---  
      
    

_Hint: A backslash  `\` in a string acts as an escape character, such as with
a newline_ `\n`.  _So, to print an actual backslash, escape that backslash by
prepending another backslash. Ex: The following prints a single backslash:_
`print('\\')`


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
print(""  /\\ /\\"")
print("" o o"")
print("" = ="")
print("" ---"")
"
40,lsn33_practice8,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

You have been provided with a file called oscar_age_male.csv, which contains
information about male oscar award winners from the 1920s to 2015. Here is a
typical line from the file:

    
    
    1928,44,Emil Jannings,The Last Command

As always, each data element corresponds to a different piece of information.
Here is a table that describes how to interpret each column:

**Year** | **Actor Age** | **Name** | **Film**  
---|---|---|---  
1928 | 44 | Emil Jannings | The Last Command  
  


Write a Python program that reads this file, and gets the following inputs
from the user:

  *     * A start year
    * An end year

Your program should output the age of the youngest actor during that time span
(including the start and end years), as well as the names of all actors that
are within 5 years (inclusive) of the youngest age. For simplicity's sake,
don't try to calculate the current age of the actors; just go with what is in
the file.



For example, if the youngest actor is 25, and the names of the actors within 5
years of the youngest age are Bob and Tom, your program should output:  
  
25  
Bob  
Tom




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

You have been provided with a file called oscar_age_male.csv, which contains
information about male oscar award winners from the 1920s to 2015. Here is a
typical line from the file:

    
    
    1928,44,Emil Jannings,The Last Command

As always, each data element corresponds to a different piece of information.
Here is a table that describes how to interpret each column:

**Year** | **Actor Age** | **Name** | **Film**  
---|---|---|---  
1928 | 44 | Emil Jannings | The Last Command  
  


Write a Python program that reads this file, and gets the following inputs
from the user:

  *     * A start year
    * An end year

Your program should output the age of the youngest actor during that time span
(including the start and end years), as well as the names of all actors that
are within 5 years (inclusive) of the youngest age. For simplicity's sake,
don't try to calculate the current age of the actors; just go with what is in
the file.



For example, if the youngest actor is 25, and the names of the actors within 5
years of the youngest age are Bob and Tom, your program should output:  
  
25  
Bob  
Tom




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

start_year = int(input(""Enter the start year: ""))
end_year = int(input(""Enter the end year: ""))

youngest_age = float('inf')
actors_within_5_years = []

with open('oscar_age_male.csv', 'r') as file:
    reader = csv.reader(file)
    next(reader)  # Skip the header row
    for row in reader:
        year, age, name, film = row
        year = int(year)
        age = int(age)
        
        if year >= start_year and year <= end_year:
            if age < youngest_age:
                youngest_age = age
                actors_within_5_years.clear()
            
            if abs(age - youngest_age) <= 5:
                actors_within_5_years.append(name)

print(youngest_age)
for actor in actors_within_5_years:
    print(actor)
"
41,lsn33_practice7,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**SIMPLE PIG LATIN RULES:**

  *  If the word starts with a vowel, add 'way' to the end of the word. 
  *  If the word starts with a consonant, take the first letter, put it on the end of the word and ad 'ay' to the end.

**PROBLEM STATEMENT:**

Write a function called **pig_latin  **take takes in a string of words and
returns the string converted to pig latin.

Example 1 | Example 2  
---|---  
Input | ""Lets test this out"" | ""Rick Astley is my hero""  
Expected Output | ""etsLay esttay histay outway "" | ""ickRay Astleyway isway
ymay erohay""


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**SIMPLE PIG LATIN RULES:**

  *  If the word starts with a vowel, add 'way' to the end of the word. 
  *  If the word starts with a consonant, take the first letter, put it on the end of the word and ad 'ay' to the end.

**PROBLEM STATEMENT:**

Write a function called **pig_latin  **take takes in a string of words and
returns the string converted to pig latin.

Example 1 | Example 2  
---|---  
Input | ""Lets test this out"" | ""Rick Astley is my hero""  
Expected Output | ""etsLay esttay histay outway "" | ""ickRay Astleyway isway
ymay erohay""


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def pig_latin(sentence):
    vowels = ['a', 'e', 'i', 'o', 'u']
    words = sentence.split()
    pig_latin_sentence = """"
    
    for word in words:
        if word[0].lower() in vowels:
            pig_latin_sentence += word + 'way '
        else:
            pig_latin_sentence += word[1:] + word[0] + 'ay '
    
    return pig_latin_sentence.strip()
"
42,lsn33_practice6,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write a python program that gets a temperature from the user, a level of
precipitation (rain, snow, none), and a humidity level (high, medium, low).
Using the following rules, print the correct output.

  * If the temperature is above 84.9 degrees, and the humidity is 'high' or 'medium', print 'Walk slowly'.
  * If the precipitation is 'snow' or 'rain', print 'Do not run!'.
  * For all other situations, print 'Move quickly'.



  | **Example 1** | **Example 1**  
---|---|---  
**Input(s)** |

85  
rain  
high

|

75  
snow  
low  
  
**Expected Output** | Walk slowly | Do not run!  
  





You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write a python program that gets a temperature from the user, a level of
precipitation (rain, snow, none), and a humidity level (high, medium, low).
Using the following rules, print the correct output.

  * If the temperature is above 84.9 degrees, and the humidity is 'high' or 'medium', print 'Walk slowly'.
  * If the precipitation is 'snow' or 'rain', print 'Do not run!'.
  * For all other situations, print 'Move quickly'.



  | **Example 1** | **Example 1**  
---|---|---  
**Input(s)** |

85  
rain  
high

|

75  
snow  
low  
  
**Expected Output** | Walk slowly | Do not run!  
  





 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
43,lsn33_practice5,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Boyle's Law states, for an ideal gas, that the pressure (p) multiplied by #
the volume of a container (v) is always constant. So, if we have an initial
pressure and volume (p1 * v1 = k) and we decrease the volume (v2) the pressure
(v2) must increase. The formula for this is

    
    
    p1 * v1 = p2 * v2

Write a python program the gets the first pressure, first volume, and second
volume. Calculate the new pressure and print it to the console.



  | **Example 1**  
---|---  
**Input(s)** |

25  
100  
150  
  
**Expected Output** | 16.667  
  





You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Boyle's Law states, for an ideal gas, that the pressure (p) multiplied by #
the volume of a container (v) is always constant. So, if we have an initial
pressure and volume (p1 * v1 = k) and we decrease the volume (v2) the pressure
(v2) must increase. The formula for this is

    
    
    p1 * v1 = p2 * v2

Write a python program the gets the first pressure, first volume, and second
volume. Calculate the new pressure and print it to the console.



  | **Example 1**  
---|---  
**Input(s)** |

25  
100  
150  
  
**Expected Output** | 16.667  
  





 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","The code should prompt the user to enter three inputs: the first pressure, the first volume, and the second volume. Then, it should calculate the new pressure using the formula p1 * v1 = p2 * v2 and print the result.

Here's the solution:

"
44,lsn33_practice4,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You are going to be given values for a dictionary. These will be an historic
landmark as the key and the location of that landmark as the value. You will
continue to receive input until the user types ""DONE"".

After the dictionary is populated, get a landmark key as an input from the
user and print the location where the landmark is. If the landmark isn't in
the dictionary, print ""Landmark not found"".



  | **Example 1**  
---|---  
**Input(s)** |

Pyramids  
Egypt  
Mt Rushmore  
South Dakota  
Empire State Building  
New York City  
DONE  
Mt Rushmore  
  
**Expected Output** | South Dakota  
  





You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You are going to be given values for a dictionary. These will be an historic
landmark as the key and the location of that landmark as the value. You will
continue to receive input until the user types ""DONE"".

After the dictionary is populated, get a landmark key as an input from the
user and print the location where the landmark is. If the landmark isn't in
the dictionary, print ""Landmark not found"".



  | **Example 1**  
---|---  
**Input(s)** |

Pyramids  
Egypt  
Mt Rushmore  
South Dakota  
Empire State Building  
New York City  
DONE  
Mt Rushmore  
  
**Expected Output** | South Dakota  
  





 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
landmarks = {}

while True:
    landmark = input()
    if landmark == ""DONE"":
        break
    location = input()
    landmarks[landmark] = location

search_landmark = input()
print(landmarks.get(search_landmark, ""Landmark not found""))
"
45,lsn33_practice3,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You are being provided with three sets. Each set contains the brands of cars
that a car dealer is willing to sell.

Write a Python Program that gets the name of a brand from the user. Then have
it print ""Dealer 1"", ""Dealer 2"", and/or ""Dealer 3"" (one per line) depending on
whether or not the dealer sells that type of car.

If all 3 dealers sell the car brand, output ""All Dealers""



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input(s)** | Toyota | Acura | Ford  
**Expected Output** | Dealer 2  
Dealer 3 | All Dealers | Dealer 1  
  





You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You are being provided with three sets. Each set contains the brands of cars
that a car dealer is willing to sell.

Write a Python Program that gets the name of a brand from the user. Then have
it print ""Dealer 1"", ""Dealer 2"", and/or ""Dealer 3"" (one per line) depending on
whether or not the dealer sells that type of car.

If all 3 dealers sell the car brand, output ""All Dealers""



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input(s)** | Toyota | Acura | Ford  
**Expected Output** | Dealer 2  
Dealer 3 | All Dealers | Dealer 1  
  





 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","# Problem Solution

# Get the input from the user
brand = input()

# Check if each dealer sells the car brand and print the corresponding output
if brand in set1 and brand in set2 and brand in set3:
    print(""All Dealers"")
else:
    if brand in set1:
        print(""Dealer 1"")
    if brand in set2:
        print(""Dealer 2"")
    if brand in set3:
        print(""Dealer 3"")"
46,lsn33_practice2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

In Star Trek, starships travel across interstellar space at many times the
speed of light.  Due to the immense speeds involved, velocity in Star Trek is
described using a fictitious unit of measurement known as a ""Warp Factor"".
For reference, Warp Factor 1.0 is equivalent to the speed of light, whereas
Warp Factor 9.0 is more than 700 times faster!

Write a program that asks the user for the number of starships to analyze, as
well as a target distance in light years.  Your program will then get the name
of each starship (e.g., ""USS Enterprise) as well as its maximum cruise speed
(e.g., 9.6), in that order.

Your program will then output the following:

  * The number of days it would take for the fastest starship to travel the target distance
  * The names of all ships that can travel the same distance within 7 days (inclusive) of the fastest time



**HINT:   We have provided you with a function called calculate_travel_time,
which takes a warp factor and distance as parameters, and returns the number
of days it would take to travel that distance.  Call this function to solve
the problem.**



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input(s)** | 2  
1.0  
USS Horizon  
2.0  
USS Daedalus  
2.5 | 2  
250  
USS Voyager  
9.975  
USS Enterprise-E  
9.8  
**Expected Output** | 17.2  
USS Daedalus | 42.7  
USS Voyager  
USS Enterprise-E


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

In Star Trek, starships travel across interstellar space at many times the
speed of light.  Due to the immense speeds involved, velocity in Star Trek is
described using a fictitious unit of measurement known as a ""Warp Factor"".
For reference, Warp Factor 1.0 is equivalent to the speed of light, whereas
Warp Factor 9.0 is more than 700 times faster!

Write a program that asks the user for the number of starships to analyze, as
well as a target distance in light years.  Your program will then get the name
of each starship (e.g., ""USS Enterprise) as well as its maximum cruise speed
(e.g., 9.6), in that order.

Your program will then output the following:

  * The number of days it would take for the fastest starship to travel the target distance
  * The names of all ships that can travel the same distance within 7 days (inclusive) of the fastest time



**HINT:   We have provided you with a function called calculate_travel_time,
which takes a warp factor and distance as parameters, and returns the number
of days it would take to travel that distance.  Call this function to solve
the problem.**



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input(s)** | 2  
1.0  
USS Horizon  
2.0  
USS Daedalus  
2.5 | 2  
250  
USS Voyager  
9.975  
USS Enterprise-E  
9.8  
**Expected Output** | 17.2  
USS Daedalus | 42.7  
USS Voyager  
USS Enterprise-E


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_travel_time(warp_factor, distance):
    # Calculate the number of days it would take to travel the distance at the given warp factor
    # Return the result

# Get the number of starships
num_starships = int(input())

# Get the target distance
distance = float(input())

# Initialize variables
fastest_time = float('inf')
fastest_ships = []

# Iterate over the starships
for _ in range(num_starships):
    # Get the name of the starship
    name = input()
    
    # Get the maximum cruise speed of the starship
    speed = float(input())
    
    # Calculate the travel time for the starship
    time = calculate_travel_time(speed, distance)
    
    # Update the fastest time and fastest ships list if necessary
    if time < fastest_time:
        fastest_time = time
        fastest_ships = [name]
    elif time == fastest_time:
        fastest_ships.append(name)

# Print the fastest time and the names of the fastest ships
print(fastest_time)
for ship in fastest_ships:
    print(ship)
"
47,lsn33_practice1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write a Python program that keeps asking the user for positive integers until
the user types -1.

Your program will then output the following:

  * # of even numbers
  * Average of all the even numbers (if no even numbers were input, print 0)
  * # of odd numbers
  * Average of all the odd numbers (if no odd numbers were input, print 0)

You may assume that the user will type AT LEAST one number. You cannot assume,
however, that the user will enter both an odd and even number.



HINT:  
Use the mod function to determine if a number is even or odd  
  
print(5 % 2) will print ""1"" because there is a remainder of 1 when you divide
5 by 2

print(4 % 2) will print ""0"" because there is no remainder when you divide 4 by
2



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input(s)** | 2  
3  
4  
5 | 3  
5  
7  
**Expected Output** | 2  
3  
2  
4 | 0  
0  
3  
5


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write a Python program that keeps asking the user for positive integers until
the user types -1.

Your program will then output the following:

  * # of even numbers
  * Average of all the even numbers (if no even numbers were input, print 0)
  * # of odd numbers
  * Average of all the odd numbers (if no odd numbers were input, print 0)

You may assume that the user will type AT LEAST one number. You cannot assume,
however, that the user will enter both an odd and even number.



HINT:  
Use the mod function to determine if a number is even or odd  
  
print(5 % 2) will print ""1"" because there is a remainder of 1 when you divide
5 by 2

print(4 % 2) will print ""0"" because there is no remainder when you divide 4 by
2



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input(s)** | 2  
3  
4  
5 | 3  
5  
7  
**Expected Output** | 2  
3  
2  
4 | 0  
0  
3  
5


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
even_count = 0
even_sum = 0
odd_count = 0
odd_sum = 0

while True:
    num = int(input(""Enter a positive integer (-1 to quit): ""))
    if num == -1:
        break

    if num % 2 == 0:
        even_count += 1
        even_sum += num
    else:
        odd_count += 1
        odd_sum += num

print(even_count)
print(even_sum / even_count if even_count > 0 else 0)
print(odd_count)
print(odd_sum / odd_count if odd_count > 0 else 0)

"
48,lsn26_plots,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
** In this lab, you are being given the freedom to explore `matplotlib`'s
plotting capabilities.

The template ZIP file contains several interesting datasets that we have
collected from the internet (although you are free to include any other
dataset if you wish). Examine these datasets, and generate at least 2
""interesting"" graphs. Each plot should use a different dataset. Additionally,
each plot must be a different type (line and pie graph, etc)

Use the `subplot` feature to make sure all of the graphs fit on one screen.
Most importantly, make sure you label your axes, give your charts a title, use
color, etc.

  
**HINT**

  * Use numpy's `genfromtxt` function to read the values in the file. If you forget how to use this function, refer to the lecture video.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
** In this lab, you are being given the freedom to explore `matplotlib`'s
plotting capabilities.

The template ZIP file contains several interesting datasets that we have
collected from the internet (although you are free to include any other
dataset if you wish). Examine these datasets, and generate at least 2
""interesting"" graphs. Each plot should use a different dataset. Additionally,
each plot must be a different type (line and pie graph, etc)

Use the `subplot` feature to make sure all of the graphs fit on one screen.
Most importantly, make sure you label your axes, give your charts a title, use
color, etc.

  
**HINT**

  * Use numpy's `genfromtxt` function to read the values in the file. If you forget how to use this function, refer to the lecture video.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","import matplotlib.pyplot as plt
import numpy as np

# Read the first dataset
data1 = np.genfromtxt('dataset1.csv', delimiter=',')

# Read the second dataset
data2 = np.genfromtxt('dataset2.csv', delimiter=',')

# Plot the first graph (line graph)
plt.subplot(2, 1, 1)
plt.plot(data1)
plt.xlabel('X')
plt.ylabel('Y')
plt.title('Dataset 1')

# Plot the second graph (pie graph)
plt.subplot(2, 1, 2)
plt.pie(data2)
plt.title('Dataset 2')

# Show the plots
plt.show()"
49,lsn26_percentile,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Write a Python program that asks the user for the number of assessment
scores to input, and then gets that many values. Analyze the data using
numpy's statistics functions, and print out the following information (one per
line):

  * the average (i.e., mean)
  * the number of scores in the 90th percentile (i.e., the number of scores that are at least as high as the 90th percentile score)
  * the number of scores no more than one standard deviation from the mean


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Write a Python program that asks the user for the number of assessment
scores to input, and then gets that many values. Analyze the data using
numpy's statistics functions, and print out the following information (one per
line):

  * the average (i.e., mean)
  * the number of scores in the 90th percentile (i.e., the number of scores that are at least as high as the 90th percentile score)
  * the number of scores no more than one standard deviation from the mean


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","import numpy as np

# Ask user for the number of assessment scores
num_scores = int(input(""Enter the number of assessment scores: ""))

# Get the assessment scores from the user
scores = []
for i in range(num_scores):
    score = float(input(f""Enter score {i+1}: ""))
    scores.append(score)

# Analyze the data
mean = np.mean(scores)
percentile_90 = np.percentile(scores, 90)
std_dev = np.std(scores)

# Count the number of scores in the 90th percentile or higher
num_percentile_90 = len([score for score in scores if score >= percentile_90])

# Count the number of scores within one standard deviation from the mean
num_within_std_dev = len([score for score in scores if np.abs(score - mean) <= std_dev])

# Print the results
print(mean)
print(num_percentile_90)
print(num_within_std_dev)"
50,lsn26_calculus,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Using the numpy module, write a Python program that does the following and
prints (one answer per line):

  1. Create (and print) the following polynomial as a poly1d: `18x^4 + 12x^2 + 3x + 1`

  2. Print the value of the polynomial when `x = 2`

  3. Print the roots of the polynomial

  4. Print the derivative of the polynomial

  5. Print the instantaneous slope of the polynomial at `x = -1` (HINT: Evaluate the derivative at x = -1)

  6. Print the integral of the polynomial

  7. Calculate area under the curve between `x = 5` and `x = 10` (HINT: Evaluate the integral at x=10, and subtract the integral at x=5)




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Using the numpy module, write a Python program that does the following and
prints (one answer per line):

  1. Create (and print) the following polynomial as a poly1d: `18x^4 + 12x^2 + 3x + 1`

  2. Print the value of the polynomial when `x = 2`

  3. Print the roots of the polynomial

  4. Print the derivative of the polynomial

  5. Print the instantaneous slope of the polynomial at `x = -1` (HINT: Evaluate the derivative at x = -1)

  6. Print the integral of the polynomial

  7. Calculate area under the curve between `x = 5` and `x = 10` (HINT: Evaluate the integral at x=10, and subtract the integral at x=5)




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","import numpy as np

# Create the polynomial
p = np.poly1d([18, 12, 3, 1])
print(p)

# Evaluate the polynomial at x = 2
print(p(2))

# Calculate the roots of the polynomial
print(np.roots(p))

# Calculate the derivative of the polynomial
print(np.polyder(p))

# Evaluate the derivative at x = -1
print(np.polyder(p)(-1))

# Calculate the integral of the polynomial
print(np.polyint(p))

# Calculate the area under the curve between x = 5 and x = 10
print(np.polyint(p)(10) - np.polyint(p)(5))"
51,lsn25_tokens,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write a Python program that asks the user for the name of a file. Your program
should then read this file and counts how many times each token (i.e., word)
appears (NOTE: keep it simple, and split on the "" ""). Finally, let the user
type a token, and print how many times that token appears (if a word is not in
your dictionary, print 0).



**HINTS:**

  * You have been provided with the file review.txt to test your code.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write a Python program that asks the user for the name of a file. Your program
should then read this file and counts how many times each token (i.e., word)
appears (NOTE: keep it simple, and split on the "" ""). Finally, let the user
type a token, and print how many times that token appears (if a word is not in
your dictionary, print 0).



**HINTS:**

  * You have been provided with the file review.txt to test your code.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def count_token_occurrences():
    file_name = input(""Enter the name of the file: "")
    token_dict = {}
    
    with open(file_name, 'r') as file:
        for line in file:
            tokens = line.split()
            for token in tokens:
                token_dict[token] = token_dict.get(token, 0) + 1
                
    search_token = input(""Enter a token to search for: "")
    print(token_dict.get(search_token, 0))

count_token_occurrences()
"
52,lsn25_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You are being provided with a function called mini_sort that takes two
numbers as parameters. Modify this function so that it returns a tuple
containing the numbers in ascending order.



**EXAMPLES:**

mini_sort(1, 2) should return the tuple:  (1, 2)

mini_sort(50, 40) should return the tuple:  (40, 50)




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You are being provided with a function called mini_sort that takes two
numbers as parameters. Modify this function so that it returns a tuple
containing the numbers in ascending order.



**EXAMPLES:**

mini_sort(1, 2) should return the tuple:  (1, 2)

mini_sort(50, 40) should return the tuple:  (40, 50)




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def mini_sort(num1, num2):
    return (min(num1, num2), max(num1, num2))"
53,lsn25_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a dictionary that contains the designator for
an aircraft (e.g., F-16) and its nickname (e.g., Fighting Falcon). Write a
program that gets a new aircraft designator and nickname from the user, and
adds it to the dictionary


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a dictionary that contains the designator for
an aircraft (e.g., F-16) and its nickname (e.g., Fighting Falcon). Write a
program that gets a new aircraft designator and nickname from the user, and
adds it to the dictionary


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
aircraft_dict = {
    ""F-16"": ""Fighting Falcon"",
    ""F-22"": ""Raptor"",
    ""B-2"": ""Spirit""
}

new_designator = input(""Enter the aircraft designator: "")
new_nickname = input(""Enter the aircraft nickname: "")

aircraft_dict[new_designator] = new_nickname

print(aircraft_dict)
"
54,lsn25_rectangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

Write a function called `get_rectangle_info` that takes 2 values as
parameters:

  * A tuple containing the (x, y) coordinate of one corner of a box
  * A tuple containing the (x, y) coordinate of the opposite corner of a box



Your function should return a  **tuple**  containing the following information
(in order):

  * the area of the box
  * the perimeter of the box
  * the length of the largest side
  * the length of the shortest side


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

Write a function called `get_rectangle_info` that takes 2 values as
parameters:

  * A tuple containing the (x, y) coordinate of one corner of a box
  * A tuple containing the (x, y) coordinate of the opposite corner of a box



Your function should return a  **tuple**  containing the following information
(in order):

  * the area of the box
  * the perimeter of the box
  * the length of the largest side
  * the length of the shortest side


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def get_rectangle_info(corner1, corner2):
    x1, y1 = corner1
    x2, y2 = corner2
    
    width = abs(x2 - x1)
    height = abs(y2 - y1)
    
    area = width * height
    perimeter = 2 * (width + height)
    
    if width > height:
        longest_side = width
        shortest_side = height
    else:
        longest_side = height
        shortest_side = width
    
    return (area, perimeter, longest_side, shortest_side)"
55,lsn25_midpoint,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Write a function called get_midpoint that takes four values as parameters:

  * X coordinate of the first point
  * Y coordinate of the first point
  * X coordinate of the second point
  * Y coordinate of the second point

Your function should return a tuple containing the midpoint.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Write a function called get_midpoint that takes four values as parameters:

  * X coordinate of the first point
  * Y coordinate of the first point
  * X coordinate of the second point
  * Y coordinate of the second point

Your function should return a tuple containing the midpoint.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def get_midpoint(x1, y1, x2, y2):
    midpoint_x = (x1 + x2) / 2
    midpoint_y = (y1 + y2) / 2
    return (midpoint_x, midpoint_y)"
56,lsn25_crashes,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
PROBLEM STATEMENT:  

You have been provided with crashdata_subset1.csv file. Here is a typical line
from the file:

2015, 1, 5, 0, 2-Car, No Injury, Following Too Closely, W 3rd

Each position in the line represents a different ""data element"". Here is a key
for your reference:

|

Year

|

Month

|

Day

|

Hour

|

Accident Type

|

Injury Type

|

Reason

|

Location  
  
---|---|---|---|---|---|---|---|---  
  
Value

|

2015

|

1

|

5

|

0

|

2-Car

|

No Injury

|

Following Too Closely

|

W 3rd  
  
  
Create a Python function called get_accident_types that takes the name of a
file as a parameter. Your function should open the file, read its contents,
and return a set containing all of the unique accident types.

  


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
PROBLEM STATEMENT:  

You have been provided with crashdata_subset1.csv file. Here is a typical line
from the file:

2015, 1, 5, 0, 2-Car, No Injury, Following Too Closely, W 3rd

Each position in the line represents a different ""data element"". Here is a key
for your reference:

|

Year

|

Month

|

Day

|

Hour

|

Accident Type

|

Injury Type

|

Reason

|

Location  
  
---|---|---|---|---|---|---|---|---  
  
Value

|

2015

|

1

|

5

|

0

|

2-Car

|

No Injury

|

Following Too Closely

|

W 3rd  
  
  
Create a Python function called get_accident_types that takes the name of a
file as a parameter. Your function should open the file, read its contents,
and return a set containing all of the unique accident types.

  


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def get_accident_types(file_name):
    accident_types = set()
    with open(file_name) as file:
        for line in file:
            data = line.strip().split(',')
            accident_type = data[4].strip()
            accident_types.add(accident_type)
    return accident_types"
57,lsn25_crashanalysis,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:**

Write a Python function called `get_common_accidents` that accepts the
following parameters:

  * the name of a file containing crash data (e.g., crashdata_2015.csv)
  * the name of  **another**  file containing crash data (e.g., crashdata_2003.csv)

Your function should return a set that only contains the accident_types that
are common to both files

  
As a reminder, here is a sample entry from the crash data file. You can assume
that every file is formatted the exact same way.

**`2015, 1, 5, 0, 2-Car, No Injury, Following Too Closely, W 3rd`**



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | Year | Month | Day | Hour | Accident Type | Injury Type | Reason |
Location  
---|---|---|---|---|---|---|---|---  
Value | 2015 | 1 | 5 | 0 | 2-Car | No Injury | Following Too Closely | W 3rd  
  


**HINT**

  * Here is some example code to see if a word (""Bus"") is included in set `s`  
`if ""Bus"" in s:`  
`print(""Bus is in set s"")`  
`else:`  
`print(""Bus is NOT in set s"")`

**  
  
**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:**

Write a Python function called `get_common_accidents` that accepts the
following parameters:

  * the name of a file containing crash data (e.g., crashdata_2015.csv)
  * the name of  **another**  file containing crash data (e.g., crashdata_2003.csv)

Your function should return a set that only contains the accident_types that
are common to both files

  
As a reminder, here is a sample entry from the crash data file. You can assume
that every file is formatted the exact same way.

**`2015, 1, 5, 0, 2-Car, No Injury, Following Too Closely, W 3rd`**



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | Year | Month | Day | Hour | Accident Type | Injury Type | Reason |
Location  
---|---|---|---|---|---|---|---|---  
Value | 2015 | 1 | 5 | 0 | 2-Car | No Injury | Following Too Closely | W 3rd  
  


**HINT**

  * Here is some example code to see if a word (""Bus"") is included in set `s`  
`if ""Bus"" in s:`  
`print(""Bus is in set s"")`  
`else:`  
`print(""Bus is NOT in set s"")`

**  
  
**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def get_common_accidents(file1, file2):
    accidents1 = set()
    accidents2 = set()
    common_accidents = set()

    with open(file1, 'r') as f1:
        lines1 = f1.readlines()
        for line in lines1:
            data_elements = line.strip().split(',')
            accident_type = data_elements[4].strip()
            accidents1.add(accident_type)

    with open(file2, 'r') as f2:
        lines2 = f2.readlines()
        for line in lines2:
            data_elements = line.strip().split(',')
            accident_type = data_elements[4].strip()
            accidents2.add(accident_type)

    common_accidents = accidents1.intersection(accidents2)

    return common_accidents"
58,lsn25_contactlist,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

Write a Python program that stores names and phone numbers for your
classmates. Your program will keep asking the user to input names and phone
numbers until he/she types ""DONE"". Your program will then store the
names/numbers in a dictionary, and allow the user to repeatedly type in names
until he/she types ""DONE"".

  * If name is in the contact list, your program will output the corresponding phone number.
  * If the name is  **not**  in the contact list, your program will output ""NOT FOUND""



**EXAMPLES:**

  | Example  
---|---  
Inputs | Adrian  
555-5555  
Liam  
666-6666  
Michelle  
777-7777  
DONE  
Adrian  
Jim  
DONE  
Outputs | 555-5555  
NOT FOUND


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

Write a Python program that stores names and phone numbers for your
classmates. Your program will keep asking the user to input names and phone
numbers until he/she types ""DONE"". Your program will then store the
names/numbers in a dictionary, and allow the user to repeatedly type in names
until he/she types ""DONE"".

  * If name is in the contact list, your program will output the corresponding phone number.
  * If the name is  **not**  in the contact list, your program will output ""NOT FOUND""



**EXAMPLES:**

  | Example  
---|---  
Inputs | Adrian  
555-5555  
Liam  
666-6666  
Michelle  
777-7777  
DONE  
Adrian  
Jim  
DONE  
Outputs | 555-5555  
NOT FOUND


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
contacts = {}
while True:
    name = input()
    if name == ""DONE"":
        break
    number = input()
    contacts[name] = number

while True:
    name = input()
    if name == ""DONE"":
        break
    if name in contacts:
        print(contacts[name])
    else:
        print(""NOT FOUND"")
"
59,lsn24_nasa,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python program that repeatedly asks the user for names of famous NASA
space missions (e.g., Apollo 11) as well as the year in which the mission took
place, until the user types the word ""DONE"" for the mission.

Your program should output:

  1. Year of the **latest mission** (most recent) 
  2. Names of all missions that occurred within 3 years prior to the most recent mission (inclusive)

**EXAMPLES:**



| Example 1 | Example 2  
---|---|---  
Input | Gemini 3  
1965  
Gemini 4  
1965  
Gemini 12  
1966  
DONE |

Mercury 5  
1961  
Apollo 11  
1969  
DONE  
  
Output | 1966  
Gemini 3  
Gemini 4  
Gemini 12 | 1969  
Apollo 11


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python program that repeatedly asks the user for names of famous NASA
space missions (e.g., Apollo 11) as well as the year in which the mission took
place, until the user types the word ""DONE"" for the mission.

Your program should output:

  1. Year of the **latest mission** (most recent) 
  2. Names of all missions that occurred within 3 years prior to the most recent mission (inclusive)

**EXAMPLES:**



| Example 1 | Example 2  
---|---|---  
Input | Gemini 3  
1965  
Gemini 4  
1965  
Gemini 12  
1966  
DONE |

Mercury 5  
1961  
Apollo 11  
1969  
DONE  
  
Output | 1966  
Gemini 3  
Gemini 4  
Gemini 12 | 1969  
Apollo 11


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
missions = []
years = []

while True:
    mission = input()
    if mission == ""DONE"":
        break
    year = input()

    missions.append(mission)
    years.append(year)

latest_year = max(years)
latest_year_index = years.index(latest_year)

print(latest_year)
for i in range(latest_year_index, -1, -1):
    if int(latest_year) - int(years[i]) <= 3:
        print(missions[i])
"
60,lsn24_mitches,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python Program that analyzes the food at Mitchell Hall. Your program
will ask for the number of meals to analyze and then get both:

  1. The name of the meal
  2. The number of calories per serving

Your program should output the average calorie count of all meals, as well as
the names of meals that are with 200 calories of the average (inclusive).



| **Example 1** | **Example 2**  
---|---|---  
Input |

3  
Shepherd's Pie  
300  
Foot Long Hot Dog  
350  
Hamburger  
960  
  

| 4  
Pizza  
600  
Cheeseburger  
450  
Pancakes  
1100  
Burrito  
900  
Expected Output | 536.6666666666666  
Foot Long Hot Dog | 762.5  
Pizza  
Burrito  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python Program that analyzes the food at Mitchell Hall. Your program
will ask for the number of meals to analyze and then get both:

  1. The name of the meal
  2. The number of calories per serving

Your program should output the average calorie count of all meals, as well as
the names of meals that are with 200 calories of the average (inclusive).



| **Example 1** | **Example 2**  
---|---|---  
Input |

3  
Shepherd's Pie  
300  
Foot Long Hot Dog  
350  
Hamburger  
960  
  

| 4  
Pizza  
600  
Cheeseburger  
450  
Pancakes  
1100  
Burrito  
900  
Expected Output | 536.6666666666666  
Foot Long Hot Dog | 762.5  
Pizza  
Burrito  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def analyze_food():
    n = int(input())
    meals = []
    calories = []
    
    for _ in range(n):
        meal = input()
        calories_per_serving = int(input())
        meals.append(meal)
        calories.append(calories_per_serving)
    
    average_calories = sum(calories) / len(calories)
    
    meals_within_range = []
    for i in range(len(calories)):
        if abs(calories[i] - average_calories) <= 200:
            meals_within_range.append(meals[i])
    
    return average_calories, meals_within_range

average, meals_within_range = analyze_food()
print(average)
for meal in meals_within_range:
    print(meal)"
61,lsn24_education,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Now that you are a Freshman at USAFA, it might be interesting to learn about
how many years men and women spend in school in different countries. In the
problem, we have provided you with a dataset called `education.csv` that
contains information from various countries about years spent in education.
Here is a typical line from the file:



`Zimbabwe,2010,M,15,64,8.04,5.92,2.09,0.03,3926`



Each position in the line represents a different ""data element"". Here is a key
for your reference:

Country | Year | Gender | Start Age | End Age | Total Years in School |
Primary School | Secondary School | Tertiary School | Population (thousands)  
---|---|---|---|---|---|---|---|---|---  
Zimbabwe | 2010 | M | 15 | 64 | 8.04 | 5.92 | 2.09 | 0.03 | 3926  
  


  
Write a Python program that asks the user for the name of country (e.g.,
""Zimbabwe""), followed by a Gender (""M"" or ""F""). Your program should print the
average number of years that gender spends in school followed by the years
that are greater than or equal to the average.

  
For example, if ""Zimbabwe"" and ""M"" were entered as the country and gender of
interest, respectively, then your program should print out:

**`2.5117241379310347`  
`1960`  
`1965`  
`1970`  
`1975`  
`1980`  
`1985`  
`1990`  
`1995`  
`2000`  
`2005`  
`2010`**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Now that you are a Freshman at USAFA, it might be interesting to learn about
how many years men and women spend in school in different countries. In the
problem, we have provided you with a dataset called `education.csv` that
contains information from various countries about years spent in education.
Here is a typical line from the file:



`Zimbabwe,2010,M,15,64,8.04,5.92,2.09,0.03,3926`



Each position in the line represents a different ""data element"". Here is a key
for your reference:

Country | Year | Gender | Start Age | End Age | Total Years in School |
Primary School | Secondary School | Tertiary School | Population (thousands)  
---|---|---|---|---|---|---|---|---|---  
Zimbabwe | 2010 | M | 15 | 64 | 8.04 | 5.92 | 2.09 | 0.03 | 3926  
  


  
Write a Python program that asks the user for the name of country (e.g.,
""Zimbabwe""), followed by a Gender (""M"" or ""F""). Your program should print the
average number of years that gender spends in school followed by the years
that are greater than or equal to the average.

  
For example, if ""Zimbabwe"" and ""M"" were entered as the country and gender of
interest, respectively, then your program should print out:

**`2.5117241379310347`  
`1960`  
`1965`  
`1970`  
`1975`  
`1980`  
`1985`  
`1990`  
`1995`  
`2000`  
`2005`  
`2010`**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

def calculate_average_years(country, gender):
    years = []
    with open('education.csv', 'r') as file:
        reader = csv.reader(file)
        next(reader)  # skip header row
        for row in reader:
            if row[0] == country and row[2] == gender:
                years.append(float(row[5]))
    
    average = sum(years) / len(years)
    greater_than_average = [int(row[1]) for row in reader if float(row[5]) >= average]
    
    return average, greater_than_average

country = input(""Enter the name of country: "")
gender = input(""Enter the Gender (M or F): "")

average, greater_than_average = calculate_average_years(country, gender)
print(average)
for year in greater_than_average:
    print(year)
"
62,lsn24_airspeed,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You are writing a program to determine which aircraft  can fly in formation
based on their (min) safe cruise speed. Write a python program  
that asks the user for:

  1. The number of aircraft to analyze
  2. The target cruise velocity, in mph



Your program will then repeatedly ask the user for the designator for each
aircraft and its cruise velocity. Once all of the values have been input, your
program will output:

  1. The NUMBER of aircraft whose cruise velocity is within 50mph of the target (above or below, inclusive)
  2. The designator of each aircraft that meets the above criteria



| **Example 1** | **Example 2**  
---|---|---  
Input |

3  
400  
F-15  
450  
F-16  
425  
F-22  
500

| 4  
230  
C-130  
250  
F-35  
450  
B-52  
390  
C-141  
375  
Expected Output | 2  
F-15  
F-16 | 1  
C-130  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You are writing a program to determine which aircraft  can fly in formation
based on their (min) safe cruise speed. Write a python program  
that asks the user for:

  1. The number of aircraft to analyze
  2. The target cruise velocity, in mph



Your program will then repeatedly ask the user for the designator for each
aircraft and its cruise velocity. Once all of the values have been input, your
program will output:

  1. The NUMBER of aircraft whose cruise velocity is within 50mph of the target (above or below, inclusive)
  2. The designator of each aircraft that meets the above criteria



| **Example 1** | **Example 2**  
---|---|---  
Input |

3  
400  
F-15  
450  
F-16  
425  
F-22  
500

| 4  
230  
C-130  
250  
F-35  
450  
B-52  
390  
C-141  
375  
Expected Output | 2  
F-15  
F-16 | 1  
C-130  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_aircraft = int(input())
target_velocity = int(input())

aircraft = []

for _ in range(num_aircraft):
    designator = input()
    velocity = int(input())
    aircraft.append((designator, velocity))

count = 0
for designator, velocity in aircraft:
    if abs(velocity - target_velocity) <= 50:
        count += 1
        print(designator)

print(count)
"
63,lsn23_soundboard,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Using PythonGraph, create a ""soundboard"" application. Your program should
display a list of colored buttons (i.e., rectangles). When the user clicks
inside of a rectangle, the program plays a different sound.

The provided template file comes with a single button implemented. Your job is
to study this code and create at least 5 other buttons. Note: The buttons do
not have to be laid out in the same arrangement, but they should look
organized.

When you are finished, upload your python code. Do NOT upload any of the sound
files.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Using PythonGraph, create a ""soundboard"" application. Your program should
display a list of colored buttons (i.e., rectangles). When the user clicks
inside of a rectangle, the program plays a different sound.

The provided template file comes with a single button implemented. Your job is
to study this code and create at least 5 other buttons. Note: The buttons do
not have to be laid out in the same arrangement, but they should look
organized.

When you are finished, upload your python code. Do NOT upload any of the sound
files.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pygame
import random

# Initialize pygame
pygame.init()

# Set up the screen
screen_width = 800
screen_height = 600
screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption(""Soundboard"")

# Define colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
YELLOW = (255, 255, 0)

# Sound files
sound_files = [""sound1.wav"", ""sound2.wav"", ""sound3.wav"", ""sound4.wav"", ""sound5.wav""]

# Button dimensions
button_width = 100
button_height = 50

# Button positions
button1_x = 50
button1_y = 100

button2_x = 200
button2_y = 100

button3_x = 350
button3_y = 100

button4_x = 500
button4_y = 100

button5_x = 650
button5_y = 100

def draw_button(x, y, color):
    pygame.draw.rect(screen, color, (x, y, button_width, button_height))

def play_sound(file):
    pygame.mixer.music.load(file)
    pygame.mixer.music.play()

running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.MOUSEBUTTONDOWN:
            mouse_pos = pygame.mouse.get_pos()
            if button1_x < mouse_pos[0] < button1_x + button_width and button1_y < mouse_pos[1] < button1_y + button_height:
                play_sound(random.choice(sound_files))
            elif button2_x < mouse_pos[0] < button2_x + button_width and button2_y < mouse_pos[1] < button2_y + button_height:
                play_sound(random.choice(sound_files))
            elif button3_x < mouse_pos[0] < button3_x + button_width and button3_y < mouse_pos[1] < button3_y + button_height:
                play_sound(random.choice(sound_files))
            elif button4_x < mouse_pos[0] < button4_x + button_width and button4_y < mouse_pos[1] < button4_y + button_height:
                play_sound(random.choice(sound_files))
            elif button5_x < mouse_pos[0] < button5_x + button_width and button5_y < mouse_pos[1] < button5_y + button_height:
                play_sound(random.choice(sound_files))
                
    screen.fill(WHITE)
    draw_button(button1_x, button1_y, RED)
    draw_button(button2_x, button2_y, GREEN)
    draw_button(button3_x, button3_y, BLUE)
    draw_button(button4_x, button4_y, YELLOW)
    draw_button(button5_x, button5_y, BLACK)
    pygame.display.flip()

pygame.quit()
"
64,lsn23_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM NAME:  
** lsn23_skill1



**PROBLEM STATEMENT:  
** You have been provided with the template code for an animation.  Study the
code for a minute, then modify the code to do the following WHEN THE LEFT
MOUSE BUTTON IS HELD DOWN:

  1. Write the code needed to get the mouse's x and y coordinates
  2. Draw a circle centered at the mouse's x and y coordinates


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM NAME:  
** lsn23_skill1



**PROBLEM STATEMENT:  
** You have been provided with the template code for an animation.  Study the
code for a minute, then modify the code to do the following WHEN THE LEFT
MOUSE BUTTON IS HELD DOWN:

  1. Write the code needed to get the mouse's x and y coordinates
  2. Draw a circle centered at the mouse's x and y coordinates


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pygame

# Initialize the game engine
pygame.init()

# Define the colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)

# Set the width and height of the screen
size = (700, 500)
screen = pygame.display.set_mode(size)

pygame.display.set_caption(""CS1 Programming - Lesson 23 Skill 1"")

# Loop until the user clicks the close button
done = False

# Used to manage how fast the screen updates
clock = pygame.time.Clock()

# Main program loop
while not done:
    # --- Main event loop
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            done = True

        # Check if the left mouse button is held down
        elif event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
            # Get the mouse's x and y coordinates
            mouse_x, mouse_y = pygame.mouse.get_pos()

            # Draw a circle centered at the mouse's x and y coordinates
            pygame.draw.circle(screen, WHITE, (mouse_x, mouse_y), 50)

    # --- Game logic should go here

    # --- Drawing code should go here

    # First, clear the screen to black
    screen.fill(BLACK)

    # --- Go ahead and update the screen with what we've drawn
    pygame.display.flip()

    # --- Limit frames per second
    clock.tick(60)

# Quit the program properly
pygame.quit()
"
65,lsn23_paint,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Using PythonGraph, create a simple paint application. Your program should draw
circles on the window whenever the user presses the left mouse button. Your
program should also listen for keyboard inputs, and allow the user to change
colors and the size of the circle by pressing on different keys.

A simple paint program has been provided to you as a starting point. Study the
code and make the necessary modifications.

When you are finished, upload your python code.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Using PythonGraph, create a simple paint application. Your program should draw
circles on the window whenever the user presses the left mouse button. Your
program should also listen for keyboard inputs, and allow the user to change
colors and the size of the circle by pressing on different keys.

A simple paint program has been provided to you as a starting point. Study the
code and make the necessary modifications.

When you are finished, upload your python code.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from pythongraph import *

def on_mouse_down(mouse_x, mouse_y):
    draw_circle(mouse_x, mouse_y, circle_size, circle_color)

def on_key_press(key):
    global circle_size
    global circle_color
    
    if key == ""r"":
        circle_color = ""red""
    elif key == ""g"":
        circle_color = ""green""
    elif key == ""b"":
        circle_color = ""blue""
    elif key == ""+"":
        circle_size += 10
    elif key == ""-"":
        circle_size -= 10

def main():
    global circle_size
    global circle_color
    
    circle_size = 50
    circle_color = ""black""
    
    create_window(800, 600)
    set_mouse_down_handler(on_mouse_down)
    set_key_press_handler(on_key_press)
    start_event_loop()

if __name__ == ""__main__"":
    main()
"
66,lsn22_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM NAME:  
** lsn22_skill1



**PROBLEM STATEMENT:  
** You have been provided with the template code for an animation.  Study the
code for a minute, then perform the following tasks:

  * In the draw() function, add one line of code that draws a circle.  
For the center, use the ball_x and ball_y variables defined on lines 21 and 22  
  

  * In the update() function, add code that modifies the value of ball_x and ball_y.  
For example, add 1 to ball_x every time update() is called, and see what
happens.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM NAME:  
** lsn22_skill1



**PROBLEM STATEMENT:  
** You have been provided with the template code for an animation.  Study the
code for a minute, then perform the following tasks:

  * In the draw() function, add one line of code that draws a circle.  
For the center, use the ball_x and ball_y variables defined on lines 21 and 22  
  

  * In the update() function, add code that modifies the value of ball_x and ball_y.  
For example, add 1 to ball_x every time update() is called, and see what
happens.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pygame

# initialize the pygame module
pygame.init()

# Create a display surface (the game window)
window = pygame.display.set_mode((800, 600))

# Set the title of the window
pygame.display.set_caption(""My Animation"")

# Set the initial position of the ball
ball_x = 400
ball_y = 300

# Define the colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)

# Run the game loop
running = True
while running:
    # Handle events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Update the ball position
    ball_x += 1
    ball_y += 1

    # Fill the window with black color
    window.fill(BLACK)

    # Draw the ball
    pygame.draw.circle(window, WHITE, (ball_x, ball_y), 20)

    # Update the display
    pygame.display.update()

# Quit the game
pygame.quit()
"
67,lsn22_bouncingtriangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Using the Bouncing Ball from the previous lab as a starting point, generate
an animation of a bouncing triangle. The triangle's vertices should start at
random locations, and bounce whenever the triangle hits a wall.





**HINTS** :

  * Try drawing 3 bouncing balls on the screen.
  * Once the balls are moving correctly, draw 3 lines to connect them!


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Using the Bouncing Ball from the previous lab as a starting point, generate
an animation of a bouncing triangle. The triangle's vertices should start at
random locations, and bounce whenever the triangle hits a wall.





**HINTS** :

  * Try drawing 3 bouncing balls on the screen.
  * Once the balls are moving correctly, draw 3 lines to connect them!


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pygame
import random

# Constants
WIDTH = 800
HEIGHT = 600
FPS = 60
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
RED = (255, 0, 0)

# Initialize pygame
pygame.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption(""Bouncing Triangle"")
clock = pygame.time.Clock()

# Create Triangle class
class Triangle(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.vertices = [(random.randint(0, WIDTH), random.randint(0, HEIGHT)),
                         (random.randint(0, WIDTH), random.randint(0, HEIGHT)),
                         (random.randint(0, WIDTH), random.randint(0, HEIGHT))]
        self.velocity = [random.choice([-1, 1]), random.choice([-1, 1])]
    
    def update(self):
        for vertex in self.vertices:
            vertex[0] += self.velocity[0]
            vertex[1] += self.velocity[1]
            if vertex[0] < 0 or vertex[0] > WIDTH:
                self.velocity[0] *= -1
            if vertex[1] < 0 or vertex[1] > HEIGHT:
                self.velocity[1] *= -1
    
    def draw(self):
        pygame.draw.polygon(screen, WHITE, self.vertices)
        pygame.draw.lines(screen, RED, True, self.vertices)

# Create Triangle instance
triangle = Triangle()

# Game loop
running = True
while running:
    # Process inputs
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
    
    # Update triangle position
    triangle.update()
    
    # Render
    screen.fill(BLACK)
    triangle.draw()
    pygame.display.flip()
    clock.tick(FPS)

# Quit the game
pygame.quit()
"
68,lsn22_bouncingballs,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
** Write a python algorithm that asks the user for the number of balls to
draw. Then, open a pythonGraph window and draw that many bouncing balls on the
screen.



**Challenge** :

  * Try to randomize every aspect of the bouncing balls (e.g., their radius, color, speed)




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
** Write a python algorithm that asks the user for the number of balls to
draw. Then, open a pythonGraph window and draw that many bouncing balls on the
screen.



**Challenge** :

  * Try to randomize every aspect of the bouncing balls (e.g., their radius, color, speed)




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import random
import pythonGraph

def draw_bouncing_balls(num_balls):
    width = 800
    height = 600
    color_list = [""red"", ""blue"", ""green"", ""yellow"", ""orange"", ""purple""]
    
    window = pythonGraph.create_window(width, height)
    
    for i in range(num_balls):
        radius = random.randint(10, 30)
        x = random.randint(radius, width - radius)
        y = random.randint(radius, height - radius)
        dx = random.randint(1, 5)
        dy = random.randint(1, 5)
        color = random.choice(color_list)
        
        pythonGraph.draw_circle(window, x, y, radius, color)
        
        while True:
            x += dx
            y += dy
            
            if x - radius <= 0 or x + radius >= width:
                dx = -dx
            if y - radius <= 0 or y + radius >= height:
                dy = -dy
                
            pythonGraph.move_circle(window, x, y)

            if pythonGraph.window_closed(window):
                return
    
draw_bouncing_balls(10)
"
69,lsn22_bouncingball,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Using the pythonGraph animation template, create an animation of a bouncing
ball. Your ball should start at a random location, and change direction each
time it hits a side, top, or bottom of the window.  
  



**CHALLENGE:**

  1. Try to make the ball change color every time it hits a wall.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Using the pythonGraph animation template, create an animation of a bouncing
ball. Your ball should start at a random location, and change direction each
time it hits a side, top, or bottom of the window.  
  



**CHALLENGE:**

  1. Try to make the ball change color every time it hits a wall.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from graphics import *

def main():
    win = GraphWin(""Bouncing Ball"", 600, 400)
    win.setBackground(""white"")
    win.setCoords(0, 0, 600, 400)
    
    ball_radius = 20
    ball_color = ""red""
    
    ball = Circle(Point(300, 200), ball_radius)
    ball.setFill(ball_color)
    ball.draw(win)
    
    dx = 2
    dy = 2
    
    while True:
        ball.move(dx, dy)
        center = ball.getCenter()
        
        if center.getX() + ball_radius >= 600 or center.getX() - ball_radius <= 0:
            dx = -dx
            ball_color = ""blue"" if ball_color == ""red"" else ""red""
            ball.setFill(ball_color)
        
        if center.getY() + ball_radius >= 400 or center.getY() - ball_radius <= 0:
            dy = -dy
            ball_color = ""blue"" if ball_color == ""red"" else ""red""
            ball.setFill(ball_color)
        
        time.sleep(0.01)
        
    win.close()

if __name__ == ""__main__"":
    main()
"
70,lsn21_triangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

Write an algorithm that asks the user for X and Y coordinates of a single
point (the coordinates of the top left point on the triangle), the length of
the base, and the height of a right triangle. Then, open a graphics window and
draw the triangle. The area of the triangle is should be displayed at the
bottom center of the window in black.



**HINTS:**

  * Make sure you get the user input BEFORE you open the window. Otherwise, the program will freeze.
  * The `draw_text` function will draw text on a screen. Don't worry about getting the text EXACTLY in the center (it's hard!).




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

Write an algorithm that asks the user for X and Y coordinates of a single
point (the coordinates of the top left point on the triangle), the length of
the base, and the height of a right triangle. Then, open a graphics window and
draw the triangle. The area of the triangle is should be displayed at the
bottom center of the window in black.



**HINTS:**

  * Make sure you get the user input BEFORE you open the window. Otherwise, the program will freeze.
  * The `draw_text` function will draw text on a screen. Don't worry about getting the text EXACTLY in the center (it's hard!).




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import graphics

# Get user input for coordinates, base length, and height
x = int(input(""Enter x coordinate of top left point: ""))
y = int(input(""Enter y coordinate of top left point: ""))
base = int(input(""Enter length of base: ""))
height = int(input(""Enter height of triangle: ""))

# Open graphics window
win = graphics.GraphWin(""Triangle"", 500, 500)

# Draw triangle
point1 = graphics.Point(x, y)
point2 = graphics.Point(x + base, y)
point3 = graphics.Point(x + base/2, y + height)
triangle = graphics.Polygon(point1, point2, point3)
triangle.draw(win)

# Calculate and display area of triangle
area = (base * height) / 2
text = graphics.Text(graphics.Point(250, 490), f""Area: {area}"")
text.setTextColor(""black"")
text.draw(win)

# Wait for user to close the window
win.mainloop()
"
71,lsn21_stamp,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Create a pythonGraph function called `draw_stamp` that accepts an x and y
coordinate as parameters. Add code so that this function will then draw a
picture (of your choosing) centered on that coordinate.



To test your function, create a pythonGraph window, and call your function
several times (each time, passing it a different set of x and y coordinates).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Create a pythonGraph function called `draw_stamp` that accepts an x and y
coordinate as parameters. Add code so that this function will then draw a
picture (of your choosing) centered on that coordinate.



To test your function, create a pythonGraph window, and call your function
several times (each time, passing it a different set of x and y coordinates).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from pythonGraph import *


def draw_stamp(x, y):
    # Add code here to draw a picture centered on (x, y)
    pass


# Create a pythonGraph window
create_world()


# Call draw_stamp function several times with different coordinates
draw_stamp(100, 100)
draw_stamp(-50, 200)
draw_stamp(300, -50)

# Display the window
wait_for_user()
"
72,lsn21_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM NAME:  
** lsn21_skill1



**PROBLEM STATEMENT:  
** Read the pythonGraph documentation, and write the following 3 lines of
code:

  1. Use the open_window function to create a graphics window
  2. Use the draw_circle function to draw a circle (any size and/or color).
  3. Call the wait_for_close function to keep the graphics window open until you click the X in the top right corner.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM NAME:  
** lsn21_skill1



**PROBLEM STATEMENT:  
** Read the pythonGraph documentation, and write the following 3 lines of
code:

  1. Use the open_window function to create a graphics window
  2. Use the draw_circle function to draw a circle (any size and/or color).
  3. Call the wait_for_close function to keep the graphics window open until you click the X in the top right corner.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from pythonGraph import open_window, draw_circle, wait_for_close

# 1. Use the open_window function to create a graphics window
open_window()

# 2. Use the draw_circle function to draw a circle (any size and/or color)
draw_circle()

# 3. Call the wait_for_close function to keep the graphics window open until you click the X in the top right corner
wait_for_close()
"
73,lsn21_simpledrawing,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Using pythonGraph (and the documentation for pythonGraph), experiment with
each of the drawing commands listed (drawing commands begin with the keyword
""draw""). Draw something interesting using at least 4 different drawing
commands. One of those drawing commands must be `draw_image`

**NOTE:  
** The best files will be added to our Python ""Hall of Fame"".


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Using pythonGraph (and the documentation for pythonGraph), experiment with
each of the drawing commands listed (drawing commands begin with the keyword
""draw""). Draw something interesting using at least 4 different drawing
commands. One of those drawing commands must be `draw_image`

**NOTE:  
** The best files will be added to our Python ""Hall of Fame"".


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# import the pythonGraph library
from pythongraph import *


# create a new graph
graph = Graph()


# draw a line from point (100, 100) to point (200, 200)
graph.draw_line(100, 100, 200, 200)


# draw a rectangle with the top-left corner at (300, 300) and width 200 and height 100
graph.draw_rectangle(300, 300, 200, 100)


# draw an ellipse centered at (500, 500) with width 200 and height 100
graph.draw_ellipse(500, 500, 200, 100)


# draw an image at (700, 700) with width 300 and height 200
graph.draw_image(700, 700, 300, 200, ""image.jpg"")


# display the graph
graph.show()


"
74,lsn21_randomcircles,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Create a pythonGraph that asks the user for the number of circles to draw.
Your program should then open a pythonGraph window and then draw that many
circles somewhere within view.

**Hints**

  * Import the `random` module in order to generate random numbers. There are specifically two functions that are useful:
  * `random.random()` returns a random number between 0.0 and 1.0
  * `random.randint(start, end)` returns a random integer between `start` and `end`




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Create a pythonGraph that asks the user for the number of circles to draw.
Your program should then open a pythonGraph window and then draw that many
circles somewhere within view.

**Hints**

  * Import the `random` module in order to generate random numbers. There are specifically two functions that are useful:
  * `random.random()` returns a random number between 0.0 and 1.0
  * `random.randint(start, end)` returns a random integer between `start` and `end`




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import random
import pythonGraph

num_circles = int(input(""Enter the number of circles to draw: ""))

pythonGraph.open_window(500, 500)

for _ in range(num_circles):
    x = random.randint(0, 500)
    y = random.randint(0, 500)
    radius = random.randint(10, 50)
    pythonGraph.draw_circle(x, y, radius)

pythonGraph.wait_for_close()
"
75,lsn20_unpopularnames,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

This lab makes use of the names.csv dataset, which provides a list of over
1200+ names that were given to children in 2011. Here is a typical line from
the file:



`FEMALE, HISPANIC, GIA, 21`



  
Each position in the line (separated by a comma) represents a different ""data
element"". Here is a key for your reference:

Gender | Ethnicity | Name | Count  
(i.e., Number of Children Assigned this Name)  
---|---|---|---  
FEMALE | HISPANIC | GIA | 21  
  
  
  
Write a Python algorithm that gets a gender (all CAPs, ""MALE"" or ""FEMALE"") and
a number, `X`, from the user, and prints out the X least popular names for
that gender, starting with the most popular and working down.

For example, if the user types `MALE` and `2`, and you determine that the two
least popular names are Bill and Ted, your program should output:

    
    
    Bill  
    Ted  
      
    



**HINTS (really really important):**

  * Remember that you can use the `sort()` function to sort a list in ascending order. For example, if your list is named `my_list`, you can sort it by typing:  
`my_list.sort()`

  * `sort()` will work on 2D lists. It will sort by the first column, and then look at the 2nd column in the event of a tie. Think about this when you are building your 2D list.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

This lab makes use of the names.csv dataset, which provides a list of over
1200+ names that were given to children in 2011. Here is a typical line from
the file:



`FEMALE, HISPANIC, GIA, 21`



  
Each position in the line (separated by a comma) represents a different ""data
element"". Here is a key for your reference:

Gender | Ethnicity | Name | Count  
(i.e., Number of Children Assigned this Name)  
---|---|---|---  
FEMALE | HISPANIC | GIA | 21  
  
  
  
Write a Python algorithm that gets a gender (all CAPs, ""MALE"" or ""FEMALE"") and
a number, `X`, from the user, and prints out the X least popular names for
that gender, starting with the most popular and working down.

For example, if the user types `MALE` and `2`, and you determine that the two
least popular names are Bill and Ted, your program should output:

    
    
    Bill  
    Ted  
      
    



**HINTS (really really important):**

  * Remember that you can use the `sort()` function to sort a list in ascending order. For example, if your list is named `my_list`, you can sort it by typing:  
`my_list.sort()`

  * `sort()` will work on 2D lists. It will sort by the first column, and then look at the 2nd column in the event of a tie. Think about this when you are building your 2D list.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
76,lsn20_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a CSV file that contains the amount of medals
won by countries at the most recent Olympic games.   Here is a snippet of the
file:

    
    
    USA,46,37,38  
    Britain,27,23,17



Here is how you can interpret each ""column"" in the file:

**Country** | **# Gold Medals** | **# Silver Medals** | **# Bronze Medals**  
---|---|---|---  
USA | 46 | 37 | 38  
Britain | 27 | 23 | 17  
  


You have also been provided with a code template that automatically reads this
file and extracts each line from it.

  * In the provided code template, perform the following tasks: 
    * **Line 30:** Write a line of code that extracts the columns from each line. Use the split() function
    * **Line 33:** Create a new row (i.e., a list) that contains the number of **silver** medals, followed by the name of the country
    * **Line 36:** Append the new row to **my_table**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a CSV file that contains the amount of medals
won by countries at the most recent Olympic games.   Here is a snippet of the
file:

    
    
    USA,46,37,38  
    Britain,27,23,17



Here is how you can interpret each ""column"" in the file:

**Country** | **# Gold Medals** | **# Silver Medals** | **# Bronze Medals**  
---|---|---|---  
USA | 46 | 37 | 38  
Britain | 27 | 23 | 17  
  


You have also been provided with a code template that automatically reads this
file and extracts each line from it.

  * In the provided code template, perform the following tasks: 
    * **Line 30:** Write a line of code that extracts the columns from each line. Use the split() function
    * **Line 33:** Create a new row (i.e., a list) that contains the number of **silver** medals, followed by the name of the country
    * **Line 36:** Append the new row to **my_table**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

file = open(""medal_data.csv"", ""r"")
csv_data = csv.reader(file)

my_table = []

for row in csv_data:
    columns = row[0].split("","")
    new_row = [columns[2], columns[0]]
    my_table.append(new_row)
    
file.close()
"
77,lsn20_sat,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

This lab makes use of the sat.csv dataset, which describes the average SAT
performance for students attending 350+ schools. Here is a typical line from
the file:



`Henry Street School for International Studies, 391, 425, 385`



  
Each position in the line (separated by a comma) represents a different ""data
element"". Here is a key for your reference:

School Name | Critical Reading Mean | Mathematics Mean | Writing Mean  
---|---|---|---  
Henry Street School for International Studies | 391 | 425 | 385  
  
  
  
Write a Python algorithm that calculates the average SAT score across all
schools, and outputs the names of every school that is below the average.



**NOTES (really really important):**

  * You can get a school's average score by adding up the critical reading, mathematics, and writing composite scores.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

This lab makes use of the sat.csv dataset, which describes the average SAT
performance for students attending 350+ schools. Here is a typical line from
the file:



`Henry Street School for International Studies, 391, 425, 385`



  
Each position in the line (separated by a comma) represents a different ""data
element"". Here is a key for your reference:

School Name | Critical Reading Mean | Mathematics Mean | Writing Mean  
---|---|---|---  
Henry Street School for International Studies | 391 | 425 | 385  
  
  
  
Write a Python algorithm that calculates the average SAT score across all
schools, and outputs the names of every school that is below the average.



**NOTES (really really important):**

  * You can get a school's average score by adding up the critical reading, mathematics, and writing composite scores.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","import csv

def calculate_average_scores(filename):
    total_score = 0
    num_schools = 0
    below_average_schools = []
    
    with open(filename, 'r') as file:
        reader = csv.reader(file)
        next(reader) # skip the header row
        
        for row in reader:
            school_name = row[0]
            critical_reading = int(row[1])
            mathematics = int(row[2])
            writing = int(row[3])
            
            average_score = (critical_reading + mathematics + writing) / 3
            total_score += average_score
            num_schools += 1
            
            if average_score < total_score / num_schools:
                below_average_schools.append(school_name)
    
    return below_average_schools"
78,lsn20_popularnames,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

This program makes use of the names.csv dataset, which provides a list of over
1200+ names that were given to children in 2011. Here is a typical line from
the file:



`FEMALE, HISPANIC, GIA, 21`



  
Each position in the line (separated by a comma) represents a different ""data
element"". Here is a key for your reference:

Gender | Ethnicity | Name | Count  
(i.e., Number of Children Assigned this Name)  
---|---|---|---  
FEMALE | HISPANIC | GIA | 21  
  
  
  
Write a Python algorithm that gets a number, `X`, from the user, and prints
out the X most popular names, starting with the most popular and working down.

For example, if the user types `5`, and you determine that the five most
popular names are Adrian, David, Bob, Jane, Ulysses, your program should
output:  
Adrian  
David  
Bob  
Jane  
Ulysses  
  

**HINTS (really really important):**

  * Remember that you can use the `sort()` function to sort a list in ascending order. For example, if your list is named `my_list`, you can sort it by typing:  
`my_list.sort()`

  * For this lab, you need to sort the list in descending order, so that the most popular items appear first. To do this, you need to tell the function to sort in reverse. You can do this by typing the following (assuming your list is named `my_list`):  
`my_list.sort(reverse=True)`

  * `sort()` will work on 2D lists. It will sort by the first column, and then look at the 2nd column in the event of a tie. Think about this when you are building your 2D list.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

This program makes use of the names.csv dataset, which provides a list of over
1200+ names that were given to children in 2011. Here is a typical line from
the file:



`FEMALE, HISPANIC, GIA, 21`



  
Each position in the line (separated by a comma) represents a different ""data
element"". Here is a key for your reference:

Gender | Ethnicity | Name | Count  
(i.e., Number of Children Assigned this Name)  
---|---|---|---  
FEMALE | HISPANIC | GIA | 21  
  
  
  
Write a Python algorithm that gets a number, `X`, from the user, and prints
out the X most popular names, starting with the most popular and working down.

For example, if the user types `5`, and you determine that the five most
popular names are Adrian, David, Bob, Jane, Ulysses, your program should
output:  
Adrian  
David  
Bob  
Jane  
Ulysses  
  

**HINTS (really really important):**

  * Remember that you can use the `sort()` function to sort a list in ascending order. For example, if your list is named `my_list`, you can sort it by typing:  
`my_list.sort()`

  * For this lab, you need to sort the list in descending order, so that the most popular items appear first. To do this, you need to tell the function to sort in reverse. You can do this by typing the following (assuming your list is named `my_list`):  
`my_list.sort(reverse=True)`

  * `sort()` will work on 2D lists. It will sort by the first column, and then look at the 2nd column in the event of a tie. Think about this when you are building your 2D list.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
79,lsn20_lowvolume,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

This program makes use of the traffic.csv dataset. Here is a typical line from
the file:



`691,6067 North,Kimball Ave,8/15/06,15600,North Bound:7500/South Bound:8100`



  
As you will recall from class, each position in the line (separated by a
comma) represents a different ""data element"". Here is a key for your
reference:

ID | Address | Street | Sample Date | Total # of Passing Vehicles | # of
Vehicles by Direction  
---|---|---|---|---|---  
691 | 6067 North | Kimball Ave | 8/15/06 | 15600 | North Bound:7500/South
Bound:8100  
  
  
  
Write a Python algorithm that opens the file and outputs the lowest traffic
count. Then, output the name of all streets whose traffic count is within 2500
(inclusive) of the min. Output one street name per line.



For example, if the min value is 500, and the roads within 2500 of this value
are ""Road A"", ""Road B"", ""Road C"", then your program should output:

    
    
    500  
    Road A  
    Road B  
    Road C


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

This program makes use of the traffic.csv dataset. Here is a typical line from
the file:



`691,6067 North,Kimball Ave,8/15/06,15600,North Bound:7500/South Bound:8100`



  
As you will recall from class, each position in the line (separated by a
comma) represents a different ""data element"". Here is a key for your
reference:

ID | Address | Street | Sample Date | Total # of Passing Vehicles | # of
Vehicles by Direction  
---|---|---|---|---|---  
691 | 6067 North | Kimball Ave | 8/15/06 | 15600 | North Bound:7500/South
Bound:8100  
  
  
  
Write a Python algorithm that opens the file and outputs the lowest traffic
count. Then, output the name of all streets whose traffic count is within 2500
(inclusive) of the min. Output one street name per line.



For example, if the min value is 500, and the roads within 2500 of this value
are ""Road A"", ""Road B"", ""Road C"", then your program should output:

    
    
    500  
    Road A  
    Road B  
    Road C


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

def lowest_traffic_count(file_path):
    min_traffic_count = float('inf')
    street_names = []

    with open(file_path, 'r') as file:
        reader = csv.reader(file)
        next(reader) # Skip header row

        for row in reader:
            traffic_count = int(row[4])
            if traffic_count < min_traffic_count:
                min_traffic_count = traffic_count
            street_names.append(row[2])

    result = [min_traffic_count] + [street for street in street_names if min_traffic_count - 2500 <= int(street.split(':')[1]) <= min_traffic_count + 2500]
    return result
"
80,lsn20_averagetraffic,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

This program makes use of the traffic.csv dataset. Here is a typical line from
the file:



`691,6067 North,Kimball Ave,8/15/06,15600,North Bound:7500/South Bound:8100`



  
As you will recall from class, each position in the line (separated by a
comma) represents a different ""data element"". Here is a key for your
reference:

ID | Address | Street | Sample Date | Total # of Passing Vehicles | # of
Vehicles by Direction  
---|---|---|---|---|---  
691 | 6067 North | Kimball Ave | 8/15/06 | 15600 | North Bound:7500/South
Bound:8100  
  
  
  
Write a Python algorithm that opens the file and outputs the # of roads whose
traffic count is greater than (or equal to) the average. For example, if you
determine that the answer is 20, your program should output:

    
    
    20


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

This program makes use of the traffic.csv dataset. Here is a typical line from
the file:



`691,6067 North,Kimball Ave,8/15/06,15600,North Bound:7500/South Bound:8100`



  
As you will recall from class, each position in the line (separated by a
comma) represents a different ""data element"". Here is a key for your
reference:

ID | Address | Street | Sample Date | Total # of Passing Vehicles | # of
Vehicles by Direction  
---|---|---|---|---|---  
691 | 6067 North | Kimball Ave | 8/15/06 | 15600 | North Bound:7500/South
Bound:8100  
  
  
  
Write a Python algorithm that opens the file and outputs the # of roads whose
traffic count is greater than (or equal to) the average. For example, if you
determine that the answer is 20, your program should output:

    
    
    20


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def count_roads(filename):
    total_count = 0
    num_roads = 0

    with open(filename, 'r') as file:
        lines = file.readlines()
        for line in lines:
            data = line.strip().split(',')
            count = int(data[4])
            total_count += count
            num_roads += 1

    average_count = total_count / num_roads

    count_greater = 0

    with open(filename, 'r') as file:
        lines = file.readlines()
        for line in lines:
            data = line.strip().split(',')
            count = int(data[4])
            if count >= average_count:
                count_greater += 1

    return count_greater


result = count_roads('traffic.csv')
result
"
81,lsn19_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You are being provided with an empty table that contains information about
USAF Academy Squadrons. The columns of the table are organized as follows:

**Squadron Name** | **Squadron Number**  
---|---  
Name Goes Here (string) | # Goes Here (integer)  
  


Add the following two rows to the table:

Dogs of War | 3  
---|---  
Wolverines | 19  
  
  
  


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You are being provided with an empty table that contains information about
USAF Academy Squadrons. The columns of the table are organized as follows:

**Squadron Name** | **Squadron Number**  
---|---  
Name Goes Here (string) | # Goes Here (integer)  
  


Add the following two rows to the table:

Dogs of War | 3  
---|---  
Wolverines | 19  
  
  
  


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pandas as pd

# Create an empty DataFrame
df = pd.DataFrame(columns=['Squadron Name', 'Squadron Number'])

# Add rows to the DataFrame
df = df.append({'Squadron Name': 'Dogs of War', 'Squadron Number': 3}, ignore_index=True)
df = df.append({'Squadron Name': 'Wolverines', 'Squadron Number': 19}, ignore_index=True)

# Print the updated DataFrame
df
"
82,lsn19_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You are being provided with a table  that describes various starship
classes from the Star Trek universe (I'm a nerd . . . go with it), as well as
two input statements that get a row and column from the user.  

Print out the corresponding row/column value from the table.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You are being provided with a table  that describes various starship
classes from the Star Trek universe (I'm a nerd . . . go with it), as well as
two input statements that get a row and column from the user.  

Print out the corresponding row/column value from the table.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","table = [
    ['Starship Class', 'Federation', 'Klingon', 'Romulan'],
    ['Frigate', 'Defiant', 'B'rel', 'Bird of Prey'],
    ['Destroyer', 'Excelsior', 'K't'inga', 'D'deridex'],
    ['Cruiser', 'Enterprise', 'Vor'cha', 'Warbird']
]

row = int(input(""Enter the row number: ""))
col = int(input(""Enter the column number: ""))

print(table[row][col])"
83,lsn19_population,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

You are being provided with a simple 2D list that contains the names and
populations of the 10 largest cities in the world. This list (which is called
`cities_table`) can be logicially visualized as the following:



**City** | **Population**  
---|---  
Tokyo | 37,435,191  
Delhi | 29,399,141  
Shanghai | 29,399,141  
Sao Paulo | 21,846,507  
Mexico City | 21,671,908  
Cairo | 20,484,965  
Dhaka | 20,283,552  
Mumbai | 20,185,064  
Beijing | 20,035,455  
Osaka | 19,222,665  
  
  
Write a Python program that gets a population from the user, and prints the
names of all the cities whose populations are at least that big (starting with
the most populated city). Print each city's name on a separate line.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 28000000 | 30000000  
Output | Tokyo  
Delhi  
Shanghai | Tokyo


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

You are being provided with a simple 2D list that contains the names and
populations of the 10 largest cities in the world. This list (which is called
`cities_table`) can be logicially visualized as the following:



**City** | **Population**  
---|---  
Tokyo | 37,435,191  
Delhi | 29,399,141  
Shanghai | 29,399,141  
Sao Paulo | 21,846,507  
Mexico City | 21,671,908  
Cairo | 20,484,965  
Dhaka | 20,283,552  
Mumbai | 20,185,064  
Beijing | 20,035,455  
Osaka | 19,222,665  
  
  
Write a Python program that gets a population from the user, and prints the
names of all the cities whose populations are at least that big (starting with
the most populated city). Print each city's name on a separate line.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 28000000 | 30000000  
Output | Tokyo  
Delhi  
Shanghai | Tokyo


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
cities_table = [
    ['Tokyo', 37435191],
    ['Delhi', 29399141],
    ['Shanghai', 29399141],
    ['Sao Paulo', 21846507],
    ['Mexico City', 21671908],
    ['Cairo', 20484965],
    ['Dhaka', 20283552],
    ['Mumbai', 20185064],
    ['Beijing', 20035455],
    ['Osaka', 19222665]
]

population = int(input())

for city in cities_table:
    if city[1] >= population:
        print(city[0])
"
84,lsn19_movies,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:**

Write a Python function called `get_movies` that takes three parameters:

  * A two-dimensional list containing movie titles and other stats (see table below for an example)
  * A rating (e.g., ""PG"", ""R"")
  * A run time (in minutes)



Title | Release Year | Rating | Run Time (minutes)  
---|---|---|---  
Star Wars: A New Hope | 1977 | PG | 121  
Star Trek: The Motion Picture | 1979 | G | 132  
Indiana Jones: Raiders of the Lost Ark | 1989 | PG | 115  
  
  
Your function should return the number of movies that have the specified
rating, and run for at least the number of minutes specified.



**EXAMPLE:**  
If the above table were contained within a list called `movie_table`, then
`get_movies(movie_table, ""PG"", 100)` should return 2


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:**

Write a Python function called `get_movies` that takes three parameters:

  * A two-dimensional list containing movie titles and other stats (see table below for an example)
  * A rating (e.g., ""PG"", ""R"")
  * A run time (in minutes)



Title | Release Year | Rating | Run Time (minutes)  
---|---|---|---  
Star Wars: A New Hope | 1977 | PG | 121  
Star Trek: The Motion Picture | 1979 | G | 132  
Indiana Jones: Raiders of the Lost Ark | 1989 | PG | 115  
  
  
Your function should return the number of movies that have the specified
rating, and run for at least the number of minutes specified.



**EXAMPLE:**  
If the above table were contained within a list called `movie_table`, then
`get_movies(movie_table, ""PG"", 100)` should return 2


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def get_movies(movie_table, rating, run_time):
    count = 0
    for movie in movie_table:
        if movie[2] == rating and movie[3] >= run_time:
            count += 1
    return count
"
85,lsn19_golf,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** In, Python, write an algorithm that first asks the user how many football
players they wish to enter statistics for and then gets that many yearly
passing totals for each player. Output how many of those players that had more
than 5000 passing yards in a year. Also your algorithm will output the average
yardage per year as well as the minimum yardage entered, in that order. You
can assume there is at least one player's yardage to input.



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
**Inputs** | 6  
4924  
4442  
5117  
2700  
1990  
4399 | 5  
2305  
4209  
5100  
5109  
3800 | 4  
4200  
2709  
3757  
2976  
**Outputs** | 1  
3928.6666666666665  
1990 | 2  
4104.6  
2305 | 0  
3410.5  
2709


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** In, Python, write an algorithm that first asks the user how many football
players they wish to enter statistics for and then gets that many yearly
passing totals for each player. Output how many of those players that had more
than 5000 passing yards in a year. Also your algorithm will output the average
yardage per year as well as the minimum yardage entered, in that order. You
can assume there is at least one player's yardage to input.



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
**Inputs** | 6  
4924  
4442  
5117  
2700  
1990  
4399 | 5  
2305  
4209  
5100  
5109  
3800 | 4  
4200  
2709  
3757  
2976  
**Outputs** | 1  
3928.6666666666665  
1990 | 2  
4104.6  
2305 | 0  
3410.5  
2709


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def football_stats():
    num_players = int(input(""Enter the number of football players: ""))
    passing_totals = []
    for i in range(num_players):
        passing_total = int(input(""Enter the passing total for player {}: "".format(i+1)))
        passing_totals.append(passing_total)
    
    num_above_5000 = sum(1 for total in passing_totals if total > 5000)
    average_yardage = sum(passing_totals) / num_players
    min_yardage = min(passing_totals)
    
    return num_above_5000, average_yardage, min_yardage

num_above_5000, average_yardage, min_yardage = football_stats()
print(num_above_5000)
print(average_yardage)
print(min_yardage)
"
86,lsn19_credit,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:**

The Air Academy Federal Credit Union wants to identify its best customers and
comes to you for help. To help with the accounting, create a Python program
which inputs repeated pairs of member last-names followed by account balances
until the word "" **DONE** "" (all capital letters) is entered at the member
last-name prompt.

Your program should output:

  * The last name of the member the highest account value, if there are two members with the same highest account value it should output the name of the first person entered.
  * It will then output the percentage members who are within $10,000 (inclusive) of the highest account value.

There is no bound on the number of members that may be entered, but you may
assume that there will be at least one member and balance entered.



**EXAMPLE:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | Rockefeller  
120000  
Chase  
115000  
Morgan  
110000  
Gates  
90000  
Jobs  
65000  
DONE | Jobs  
150000  
Chase  
150000  
Kennedy  
40000  
DONE | Morgan  
145000  
Chase  
135000  
Kennedy  
142000  
Gates  
145000  
DONE  
Output | Rockefeller  
60.0 | Jobs  
66.66666666666666 | Morgan  
100.0  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:**

The Air Academy Federal Credit Union wants to identify its best customers and
comes to you for help. To help with the accounting, create a Python program
which inputs repeated pairs of member last-names followed by account balances
until the word "" **DONE** "" (all capital letters) is entered at the member
last-name prompt.

Your program should output:

  * The last name of the member the highest account value, if there are two members with the same highest account value it should output the name of the first person entered.
  * It will then output the percentage members who are within $10,000 (inclusive) of the highest account value.

There is no bound on the number of members that may be entered, but you may
assume that there will be at least one member and balance entered.



**EXAMPLE:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | Rockefeller  
120000  
Chase  
115000  
Morgan  
110000  
Gates  
90000  
Jobs  
65000  
DONE | Jobs  
150000  
Chase  
150000  
Kennedy  
40000  
DONE | Morgan  
145000  
Chase  
135000  
Kennedy  
142000  
Gates  
145000  
DONE  
Output | Rockefeller  
60.0 | Jobs  
66.66666666666666 | Morgan  
100.0  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
account_dict = {}
highest_balance = 0
highest_balance_name = """"

while True:
    name = input(""Enter member last name: "")
    if name == ""DONE"":
        break
    balance = int(input(""Enter account balance: ""))
    account_dict[name] = balance
    if balance > highest_balance:
        highest_balance = balance
        highest_balance_name = name

within_10k_count = 0
for balance in account_dict.values():
    if highest_balance - balance <= 10000:
        within_10k_count += 1

percentage_within_10k = (within_10k_count / len(account_dict)) * 100

print(highest_balance_name)
print(percentage_within_10k)
"
87,lsn19_100m,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

You have been asked by your unit to record 100m dash times for an upcoming
USAFA track meet. Create a Python algorithm that first asks for the number of
cadets, and then asks for that many cadet last names, squadrons, and 100m dash
times (in that order).

Your program should output:

  * The cadet squadron containing the cadet with the fastest 100m dash time followed by their 100m dash time. If there is a tie for fastest 100m dash times, you should output the squadron number and time for the LAST cadet entered who had that fastest time.
  * The number of cadets whose 100m dash time was faster than the average.

There is no bound on the number of cadet that may be entered, but you may
assume that there will be at least one cadet and track time entered.



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Inputs** | 4  
Thorpe  
13  
10.2  
Owens  
22  
9.93  
Mathias  
19  
9.99  
Rudolph  
39  
10.23 | 3  
Johnson  
7  
10.3  
Tyus  
14  
10.02  
Lewis  
40  
9.67 | 2  
Joyner  
1  
10.08  
Kersee  
29  
9.97  
**Output** | 22  
9.93  
2 | 40  
9.67  
1 | 29  
9.97  
1  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

You have been asked by your unit to record 100m dash times for an upcoming
USAFA track meet. Create a Python algorithm that first asks for the number of
cadets, and then asks for that many cadet last names, squadrons, and 100m dash
times (in that order).

Your program should output:

  * The cadet squadron containing the cadet with the fastest 100m dash time followed by their 100m dash time. If there is a tie for fastest 100m dash times, you should output the squadron number and time for the LAST cadet entered who had that fastest time.
  * The number of cadets whose 100m dash time was faster than the average.

There is no bound on the number of cadet that may be entered, but you may
assume that there will be at least one cadet and track time entered.



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Inputs** | 4  
Thorpe  
13  
10.2  
Owens  
22  
9.93  
Mathias  
19  
9.99  
Rudolph  
39  
10.23 | 3  
Johnson  
7  
10.3  
Tyus  
14  
10.02  
Lewis  
40  
9.67 | 2  
Joyner  
1  
10.08  
Kersee  
29  
9.97  
**Output** | 22  
9.93  
2 | 40  
9.67  
1 | 29  
9.97  
1  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Input
n = int(input())

# Initialize variables
cadets = []
fastest_time = float('inf')
fastest_squadron = """"
faster_than_avg = 0
total_time = 0

# Process the input
for _ in range(n):
    last_name = input()
    squadron = int(input())
    dash_time = float(input())
    
    cadets.append((last_name, squadron, dash_time))
    total_time += dash_time
    
    if dash_time < fastest_time:
        fastest_time = dash_time
        fastest_squadron = squadron
        
# Find the number of cadets faster than average
average_time = total_time / n
for _, _, dash_time in cadets:
    if dash_time < average_time:
        faster_than_avg += 1
        
# Output the results
print(f""{fastest_squadron}\n{fastest_time}"")
print(f""{faster_than_avg}"")"
88,lsn18_swimstats,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

Write a Python algorithm that keeps asking the user for swim times (in
seconds) until the user types -1. Your program will print the following values
(in order, one per line):

  * Average time
  * Range (i.e., the difference between the min and max time)
  * Standard Deviation (hint: like many things in Python you can find how to accomplish this with a quick web search, stdev() should show up on top)



  | Example 1 | Example 2  
---|---|---  
Inputs | 62  
71  
83  
-1 | 45  
47  
51  
46  
44  
-1  
Outputs | 72.0  
21  
8.602 | 46.6  
7  
2.417  
  
** **


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

Write a Python algorithm that keeps asking the user for swim times (in
seconds) until the user types -1. Your program will print the following values
(in order, one per line):

  * Average time
  * Range (i.e., the difference between the min and max time)
  * Standard Deviation (hint: like many things in Python you can find how to accomplish this with a quick web search, stdev() should show up on top)



  | Example 1 | Example 2  
---|---|---  
Inputs | 62  
71  
83  
-1 | 45  
47  
51  
46  
44  
-1  
Outputs | 72.0  
21  
8.602 | 46.6  
7  
2.417  
  
** **


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import statistics

times = []
time = int(input(""Enter swim time in seconds (-1 to stop): ""))

while time != -1:
    times.append(time)
    time = int(input(""Enter swim time in seconds (-1 to stop): ""))

average = statistics.mean(times)
range = max(times) - min(times)
stdev = statistics.stdev(times)

print(average)
print(range)
print(stdev)
"
89,lsn18_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM NAME:  
** lsn18_skill2



**PROBLEM STATEMENT:  
** You are being provided with a list containing 5 random numbers. Create a
variable called **my_value** , and assign it the value of the 3rd item in the
list.



**NOTES:**

  * You do not need to print my_value OR the list


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM NAME:  
** lsn18_skill2



**PROBLEM STATEMENT:  
** You are being provided with a list containing 5 random numbers. Create a
variable called **my_value** , and assign it the value of the 3rd item in the
list.



**NOTES:**

  * You do not need to print my_value OR the list


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
numbers = [12, 45, 67, 33, 90]
my_value = numbers[2]
"
90,lsn18_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Create a list called my_list. Put 3 items inside the list (they can be
anything you want)



**HINTS:  
** Look at the quick reference guide! ****




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Create a list called my_list. Put 3 items inside the list (they can be
anything you want)



**HINTS:  
** Look at the quick reference guide! ****




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# create a list called my_list with 3 items
my_list = [item1, item2, item3]
"
91,lsn18_namesreverse,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:**

Allow the user to enter names one at a time until they type the word 'END'
(without quotes). This keyword is called a  **sentinel value,**  and it marks
the end of the input. The user entered names (not counting 'END') are to be
stored in a Python list. The user will enter the names one at a time. After
entering all the names, your algorithm will print the names in the reverse
order that they were entered.



  | Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | Adrian  
Liam  
Michelle  
END | Rick  
Morty  
END | Spock  
Data  
Dax  
Burnham  
END  
Outputs | Michelle  
Liam  
Adrian | Morty  
Rick | Burnham  
Dax  
Data  
Spock  
  
You may assume that the user types at least one name.



**HINTS:**

  * Remember that the range() function can have up to 3 parameters. The first is the starting value, the second is the ending value, and the third is the increment amount.
  * Don't forget that the index of a list starts at 0, and goes to the length of the list - 1. For example, a list with 5 elements has indices 0, 1, 2, 3, and 4.
  * To get the length of a list, use the `len()` function


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:**

Allow the user to enter names one at a time until they type the word 'END'
(without quotes). This keyword is called a  **sentinel value,**  and it marks
the end of the input. The user entered names (not counting 'END') are to be
stored in a Python list. The user will enter the names one at a time. After
entering all the names, your algorithm will print the names in the reverse
order that they were entered.



  | Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | Adrian  
Liam  
Michelle  
END | Rick  
Morty  
END | Spock  
Data  
Dax  
Burnham  
END  
Outputs | Michelle  
Liam  
Adrian | Morty  
Rick | Burnham  
Dax  
Data  
Spock  
  
You may assume that the user types at least one name.



**HINTS:**

  * Remember that the range() function can have up to 3 parameters. The first is the starting value, the second is the ending value, and the third is the increment amount.
  * Don't forget that the index of a list starts at 0, and goes to the length of the list - 1. For example, a list with 5 elements has indices 0, 1, 2, 3, and 4.
  * To get the length of a list, use the `len()` function


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
names = []
name = input(""Enter a name (type 'END' to stop): "")
while name != ""END"":
    names.append(name)
    name = input(""Enter a name (type 'END' to stop): "")

for i in range(len(names)-1, -1, -1):
    print(names[i])
"
92,lsn18_names,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

Write a Python algorithm that asks the user for the number of names to
process, and then gets that many values. Print out the names in alphabetical
order, with each name starting on a line.

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | 3  
Alice  
Jane  
Bob | 3  
Bailey  
Paul  
Adrian | 5  
David  
Dave  
Steve  
Barry  
Troy  
Outputs | Alice  
Bob  
Jane | Adrian  
Bailey  
Paul | Barry  
Dave  
David  
Steve  
Troy  
  


You may assume that the user will enter at least one name.



**NOTES:**

  * Python has a built-in function called `sort()` that can be used to sort a list. Here is an example to show you how to use it:  
`# Declare a list and put some stuff in it`  
`my_list = ['b', 'c', 'a', 'd']`  
  
`# Sort the list alphabetically (a-z)`  
`my_list.sort()`

** **


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

Write a Python algorithm that asks the user for the number of names to
process, and then gets that many values. Print out the names in alphabetical
order, with each name starting on a line.

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | 3  
Alice  
Jane  
Bob | 3  
Bailey  
Paul  
Adrian | 5  
David  
Dave  
Steve  
Barry  
Troy  
Outputs | Alice  
Bob  
Jane | Adrian  
Bailey  
Paul | Barry  
Dave  
David  
Steve  
Troy  
  


You may assume that the user will enter at least one name.



**NOTES:**

  * Python has a built-in function called `sort()` that can be used to sort a list. Here is an example to show you how to use it:  
`# Declare a list and put some stuff in it`  
`my_list = ['b', 'c', 'a', 'd']`  
  
`# Sort the list alphabetically (a-z)`  
`my_list.sort()`

** **


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_names = int(input())

names = []
for i in range(num_names):
    name = input()
    names.append(name)

names.sort()

for name in names:
    print(name)
"
93,lsn18_grades,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:**

Create a Python program that asks how many students are in a class, then
prompts the user for each student's grade. Then output the grades that are
**at least 10 points above the average.**



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 3  
10  
100  
70 | 3  
30  
40  
60 | 4  
10  
20  
60  
90  
Output | 100 | 70 | 60  
90


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:**

Create a Python program that asks how many students are in a class, then
prompts the user for each student's grade. Then output the grades that are
**at least 10 points above the average.**



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 3  
10  
100  
70 | 3  
30  
40  
60 | 4  
10  
20  
60  
90  
Output | 100 | 70 | 60  
90


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_students = int(input())
grades = []
for _ in range(num_students):
    grades.append(int(input()))

average = sum(grades) / num_students
for grade in grades:
    if grade >= average + 10:
        print(grade)
"
94,lsn18_combinations,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

Write a Python function called `get_combinations` that takes a list of
distinct characters as a parameter, and returns a list containing all of the
2-letter combinations of said characters.

For example, given the following list:  
`my_list = ['a', 'b']`

`get_combinations(my_list)` should return a list containing the following
elements:  
['aa', 'ab', 'ba', 'bb']

Notes:

  * The ordering of the elements in the list does not matter, so long as all of the 2-letter combinations are contained within the list


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

Write a Python function called `get_combinations` that takes a list of
distinct characters as a parameter, and returns a list containing all of the
2-letter combinations of said characters.

For example, given the following list:  
`my_list = ['a', 'b']`

`get_combinations(my_list)` should return a list containing the following
elements:  
['aa', 'ab', 'ba', 'bb']

Notes:

  * The ordering of the elements in the list does not matter, so long as all of the 2-letter combinations are contained within the list


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def get_combinations(chars):
    combinations = []
    for char1 in chars:
        for char2 in chars:
            combinations.append(char1 + char2)
    return combinations"
95,lsn16_practice4,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `fuelprices.csv` that contains
monthly gasoline prices from 2006 - 2012. Here is a typical line from the
dataset (each line ends with the newline ""\n"" character):

`1/1/2006 0:00,Regular,2.314`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:

  | Day | Gas Type | Price (in Dollars)  
---|---|---|---  
Value | 1/1/2006 0:00 | Regular | 2.314  
  


Write a Python program that asks the user for:

  * A Gas Type (e.g., ""Regular"")



Your program should then read the file and output:

  * The average price of gas for that gas type






You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `fuelprices.csv` that contains
monthly gasoline prices from 2006 - 2012. Here is a typical line from the
dataset (each line ends with the newline ""\n"" character):

`1/1/2006 0:00,Regular,2.314`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:

  | Day | Gas Type | Price (in Dollars)  
---|---|---|---  
Value | 1/1/2006 0:00 | Regular | 2.314  
  


Write a Python program that asks the user for:

  * A Gas Type (e.g., ""Regular"")



Your program should then read the file and output:

  * The average price of gas for that gas type






 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

def calculate_average_gas_price(gas_type):
    gas_prices = []
    
    with open('fuelprices.csv', 'r') as file:
        reader = csv.reader(file)
        for line in reader:
            if line[1] == gas_type:
                gas_prices.append(float(line[2]))
    
    average_price = sum(gas_prices) / len(gas_prices)
    return average_price

gas_type = input(""Enter a gas type: "")
average_price = calculate_average_gas_price(gas_type)
print(""Average price of gas for {0}: {1}"".format(gas_type, average_price))
"
96,lsn16_practice3,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You are writing a program to analyze the BMI of cadets. Write a program
that asks for the number of cadets, and then gets that many weights and
heights (alternating, a weight then the corresponding height, in that order).
Your program should then output the number of thin, healthy, overweight, and
obese cadets (based on their BMI), using the following formula and table as a
guide:



**BMI = 703 * (weight / height 2)**



**Rating** | **BMI**  
---|---  
Thin | less than 18.5  
Healthy | at least 18.5 but less than 25  
Overweight | at least 25 but less than 30  
Obese | 30 or more  
  





You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You are writing a program to analyze the BMI of cadets. Write a program
that asks for the number of cadets, and then gets that many weights and
heights (alternating, a weight then the corresponding height, in that order).
Your program should then output the number of thin, healthy, overweight, and
obese cadets (based on their BMI), using the following formula and table as a
guide:



**BMI = 703 * (weight / height 2)**



**Rating** | **BMI**  
---|---  
Thin | less than 18.5  
Healthy | at least 18.5 but less than 25  
Overweight | at least 25 but less than 30  
Obese | 30 or more  
  





 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_cadets = int(input(""Enter the number of cadets: ""))
weight_heights = []
for _ in range(num_cadets):
    weight = float(input(""Enter weight: ""))
    height = float(input(""Enter height: ""))
    weight_heights.append((weight, height))

thin = 0
healthy = 0
overweight = 0
obese = 0

for weight, height in weight_heights:
    bmi = 703 * (weight / height ** 2)
    if bmi < 18.5:
        thin += 1
    elif bmi < 25:
        healthy += 1
    elif bmi < 30:
        overweight += 1
    else:
        obese += 1

print(""Thin:"", thin)
print(""Healthy:"", healthy)
print(""Overweight:"", overweight)
print(""Obese:"", obese)
"
97,lsn16_practice2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a function that returns the nth value in a
sequence (i.e., pattern). Get a number from the user (x), and print the xth to
the x+5th value in that sequence (6 numbers total).



**HINTS:**

  * To get the 8th value in a sequence, you would call `get_value(8)`




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a function that returns the nth value in a
sequence (i.e., pattern). Get a number from the user (x), and print the xth to
the x+5th value in that sequence (6 numbers total).



**HINTS:**

  * To get the 8th value in a sequence, you would call `get_value(8)`




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def get_value(n):
    # Function to calculate the nth value in the sequence
    # TODO: Implement this function
    
    return value

x = int(input(""Enter a number: ""))
for i in range(x, x+6):
    print(get_value(i))"
98,lsn16_practice1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Define a function called add_values. The function should take 3 parameters
(x, y, z), and return the sum of these values.



**NOTES:**

  * You do not need to call the function. Simple define it.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Define a function called add_values. The function should take 3 parameters
(x, y, z), and return the sum of these values.



**NOTES:**

  * You do not need to call the function. Simple define it.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
99,lsn15_titanicsurvivor,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

This program makes use of the Titanic dataset. Here is a typical line from the
file:

`0,3,Mr. Owen Harris Braund,male,22,1,0,7.25`

  
As you will undoubtedly recall from class, each position in the line
represents a different ""data element"". Here is a key for your reference:

  | Survived  
(0=False; 1=True) | Class | Name | Gender | Age | Siblings/Spouses Aboard  
(0=False; 1=True) | Parents/Children Aboard  
(0=False; 1=True) | Fare  
---|---|---|---|---|---|---|---|---  
Value | 0 | 3 | Mr. Owen Harris Braund | male | 22 | 1 | 0 | 7.25  
  


Write a Python algorithm that asks the user for the name of the file
containing the titanic dataset. Your program will output the name of the
survivor with the lowest fare. Print that person's name in a separate file
(named ""result.txt"")

For example, if the survivor's name is Mr. Owen Harris Braund, result.txt
should contain the following:

    
    
    Mr. Owen Harris Braund  
    7.25

  
**NOTES:**

  * The values used in the above example are purely hypothetical. Your answers will be different.
  * To thoroughly test your code, we created several subsets of the titanic dataset. Use them when developing/troubleshooting your code.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

This program makes use of the Titanic dataset. Here is a typical line from the
file:

`0,3,Mr. Owen Harris Braund,male,22,1,0,7.25`

  
As you will undoubtedly recall from class, each position in the line
represents a different ""data element"". Here is a key for your reference:

  | Survived  
(0=False; 1=True) | Class | Name | Gender | Age | Siblings/Spouses Aboard  
(0=False; 1=True) | Parents/Children Aboard  
(0=False; 1=True) | Fare  
---|---|---|---|---|---|---|---|---  
Value | 0 | 3 | Mr. Owen Harris Braund | male | 22 | 1 | 0 | 7.25  
  


Write a Python algorithm that asks the user for the name of the file
containing the titanic dataset. Your program will output the name of the
survivor with the lowest fare. Print that person's name in a separate file
(named ""result.txt"")

For example, if the survivor's name is Mr. Owen Harris Braund, result.txt
should contain the following:

    
    
    Mr. Owen Harris Braund  
    7.25

  
**NOTES:**

  * The values used in the above example are purely hypothetical. Your answers will be different.
  * To thoroughly test your code, we created several subsets of the titanic dataset. Use them when developing/troubleshooting your code.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
filename = input(""Enter the name of the file: "")
data = []
with open(filename, 'r') as file:
    for line in file:
        line = line.strip().split(',')
        data.append(line)

sorted_data = sorted(data, key=lambda x: float(x[-1]))
name = sorted_data[0][2]

with open(""result.txt"", 'w') as file:
    file.write(name + '\n')
    file.write(sorted_data[0][-1])
"
100,lsn15_titanicfares,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

This program makes use of the Titanic dataset. Here is a typical line from the
file:

`0,3,Mr. Owen Harris Braund,male,22,1,0,7.25`

  
As you will undoubtedly recall from class, each position in the line
represents a different ""data element"". Here is a key for your reference:

  | Survived  
(0=False; 1=True) | Class | Name | Gender | Age | Siblings/Spouses Aboard  
(0=False; 1=True) | Parents/Children Aboard  
(0=False; 1=True) | Fare  
---|---|---|---|---|---|---|---|---  
Value | 0 | 3 | Mr. Owen Harris Braund | male | 22 | 1 | 0 | 7.25  
  


Write a Python algorithm that asks the user for the name of the file
containing some or all of the Titanic dataset, as well as a passenger class
(an integer between the values of 1 and 3). Your program should calculate the
highest and lowest fare for that passenger class, and print out the result to
a file called ""result.txt"".

For example, if the highest and lowest fare for 2nd class is $20 and $8,
respectively, your output file should contain:

    
    
    20  
    8

  
**NOTES:**

  * The values used in the above example are purely hypothetical. Your answers will be different.
  * Some passengers in the real dataset (like Jack in the movie Titanic--yes, I've seen it . . . don't judge me) have a fare of $0. To thoroughly test your code, we made a separate dataset (titanic2.csv) that removes these values.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

This program makes use of the Titanic dataset. Here is a typical line from the
file:

`0,3,Mr. Owen Harris Braund,male,22,1,0,7.25`

  
As you will undoubtedly recall from class, each position in the line
represents a different ""data element"". Here is a key for your reference:

  | Survived  
(0=False; 1=True) | Class | Name | Gender | Age | Siblings/Spouses Aboard  
(0=False; 1=True) | Parents/Children Aboard  
(0=False; 1=True) | Fare  
---|---|---|---|---|---|---|---|---  
Value | 0 | 3 | Mr. Owen Harris Braund | male | 22 | 1 | 0 | 7.25  
  


Write a Python algorithm that asks the user for the name of the file
containing some or all of the Titanic dataset, as well as a passenger class
(an integer between the values of 1 and 3). Your program should calculate the
highest and lowest fare for that passenger class, and print out the result to
a file called ""result.txt"".

For example, if the highest and lowest fare for 2nd class is $20 and $8,
respectively, your output file should contain:

    
    
    20  
    8

  
**NOTES:**

  * The values used in the above example are purely hypothetical. Your answers will be different.
  * Some passengers in the real dataset (like Jack in the movie Titanic--yes, I've seen it . . . don't judge me) have a fare of $0. To thoroughly test your code, we made a separate dataset (titanic2.csv) that removes these values.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def find_highest_and_lowest_fares(file_name, passenger_class):
    highest_fare = 0
    lowest_fare = float('inf')
    
    with open(file_name, 'r') as file:
        for line in file:
            data = line.strip().split(',')
            if int(data[1]) == passenger_class:
                fare = float(data[8])
                if fare > highest_fare:
                    highest_fare = fare
                if fare < lowest_fare:
                    lowest_fare = fare
    
    with open(""result.txt"", 'w') as result_file:
        result_file.write(str(highest_fare) + '\n')
        result_file.write(str(lowest_fare))
"
101,lsn15_survivors_by_gender,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

This program makes use of the Titanic dataset. Here is a typical line from the
file:

`0,3,Mr. Owen Harris Braund,male,22,1,0,7.25`

  
As you will undoubtedly recall from class, each position in the line
represents a different ""data element"". Here is a key for your reference:

  | Survived  
(0=False; 1=True) | Class | Name | Gender | Age | Siblings/Spouses Aboard  
(0=False; 1=True) | Parents/Children Aboard  
(0=False; 1=True) | Fare  
---|---|---|---|---|---|---|---|---  
Value | 0 | 3 | Mr. Owen Harris Braund | male | 22 | 1 | 0 | 7.25  
  
  
  
Write a Python algorithm that asks the user for the name of the file
containing the titanic dataset, and counts how many males/females survived.
Your program should print out each answer to a file called ""result.txt"".

For example, if 400 men, and 700 women survived, your output file should
contain:  
400  
700



**NOTE: When you print to a file, make sure you put a new line at the end of
each answer!**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

This program makes use of the Titanic dataset. Here is a typical line from the
file:

`0,3,Mr. Owen Harris Braund,male,22,1,0,7.25`

  
As you will undoubtedly recall from class, each position in the line
represents a different ""data element"". Here is a key for your reference:

  | Survived  
(0=False; 1=True) | Class | Name | Gender | Age | Siblings/Spouses Aboard  
(0=False; 1=True) | Parents/Children Aboard  
(0=False; 1=True) | Fare  
---|---|---|---|---|---|---|---|---  
Value | 0 | 3 | Mr. Owen Harris Braund | male | 22 | 1 | 0 | 7.25  
  
  
  
Write a Python algorithm that asks the user for the name of the file
containing the titanic dataset, and counts how many males/females survived.
Your program should print out each answer to a file called ""result.txt"".

For example, if 400 men, and 700 women survived, your output file should
contain:  
400  
700



**NOTE: When you print to a file, make sure you put a new line at the end of
each answer!**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def count_males_and_females_survived():
    # Ask user for file name
    filename = input(""Enter the name of the file containing the Titanic dataset:"")
    
    males_survived = 0
    females_survived = 0
    
    # Open the file
    with open(filename, 'r') as file:
        # Read each line in the file
        for line in file:
            # Split the line into data elements
            data = line.split(',')
            
            # Extract the gender and survival information
            gender = data[3]
            survived = int(data[0])
            
            # If the gender is male and survived is True, increment male count
            if gender == 'male' and survived == 1:
                males_survived += 1
            # If the gender is female and survived is True, increment female count
            elif gender == 'female' and survived == 1:
                females_survived += 1
    
    # Write the counts to the output file
    with open(""result.txt"", 'w') as output_file:
        output_file.write(str(males_survived) + '\n')
        output_file.write(str(females_survived) + '\n')
        
count_males_and_females_survived()
"
102,lsn15_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a python program that creates a file called ""output.txt"" and prints a
message of your choosing.

**HINTS:  
** Look at the quick reference guide!


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a python program that creates a file called ""output.txt"" and prints a
message of your choosing.

**HINTS:  
** Look at the quick reference guide!


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# create a file called ""output.txt"" and open it in write mode
file = open(""output.txt"", ""w"")

# write a message to the file
file.write(""This is my message."")

# close the file
file.close()
"
103,lsn15_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a file called sample.txt. Write a python
program that opens this file and prints all of its contents as a single
string.



**HINTS:  
** Look at the quick reference guide!




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a file called sample.txt. Write a python
program that opens this file and prints all of its contents as a single
string.



**HINTS:  
** Look at the quick reference guide!




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Open the file
file = open(""sample.txt"", ""r"")

# Read the contents of the file
contents = file.read()

# Print the contents
print(contents)

# Close the file
file.close()
"
104,lsn15_runways,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

This program makes use of the Runways dataset. Here is a typical line from the
file:



`17245.8*A ND17/35, RICKETYBACK FIELD, 2600, 100, TURF`



  
Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | Location ID | Name | Runway Length (in feet) | Runway Width (in feet) |
Runway Type  
---|---|---|---|---|---  
Value | 17245.8*A ND17/35 | RICKETYBACK FIELD | 2600 | 100 | TURF  
  
  
  
Write a Python program that asks the user for the name of the file containing
the Runways dataset, as well as the length and width of the runway. Your
program should print the Location ID of every runway whose length and width
meets or exceeds the specified values.

For example, if the user types 4000 and 100 for length and width,
respectively, your program should output:

    
    
    17265. _A ND03/21  
     17265._A ND13/31  
    17302. _A ND13/31  
     17304._A ND14/32  
    17367. _A ND13/31  
     17417.5_A ND11/29  
    17418. _A ND08/26  
     17418._A ND13/31  
    17328. _A ND09/27  
     17328._A ND18/36  
    17347. _A ND08/26  
     17349.1_A ND08/26  
    17349.1 _A ND17R/3  
     17496.1_A ND11/29




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

This program makes use of the Runways dataset. Here is a typical line from the
file:



`17245.8*A ND17/35, RICKETYBACK FIELD, 2600, 100, TURF`



  
Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | Location ID | Name | Runway Length (in feet) | Runway Width (in feet) |
Runway Type  
---|---|---|---|---|---  
Value | 17245.8*A ND17/35 | RICKETYBACK FIELD | 2600 | 100 | TURF  
  
  
  
Write a Python program that asks the user for the name of the file containing
the Runways dataset, as well as the length and width of the runway. Your
program should print the Location ID of every runway whose length and width
meets or exceeds the specified values.

For example, if the user types 4000 and 100 for length and width,
respectively, your program should output:

    
    
    17265. _A ND03/21  
     17265._A ND13/31  
    17302. _A ND13/31  
     17304._A ND14/32  
    17367. _A ND13/31  
     17417.5_A ND11/29  
    17418. _A ND08/26  
     17418._A ND13/31  
    17328. _A ND09/27  
     17328._A ND18/36  
    17347. _A ND08/26  
     17349.1_A ND08/26  
    17349.1 _A ND17R/3  
     17496.1_A ND11/29




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def find_runways():
    filename = input(""Enter the name of the file: "")
    length = int(input(""Enter the minimum length of the runway: ""))
    width = int(input(""Enter the minimum width of the runway: ""))

    with open(filename, 'r') as file:
        for line in file:
            data = line.strip().split(',')
            location_id = float(data[0].split('*')[0])
            runway_length = int(data[2])
            runway_width = int(data[3])
            runway_type = data[4]

            if runway_length >= length and runway_width >= width:
                print(location_id, runway_type)
```

find_runways()"
105,lsn15_echo,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write a program that asks the user to type the name of a file (e.g.,
""file.txt""), and a letter. Your program should then open the file, and print
out all of the lines where the first character starts with the letter

For example, if the user types the following filename:

    
    
    input1.txt
    a
    

and the contents of input1.txt are:

    
    
    aspiration
    classified
    federation
    

the output should be:

    
    
    aspiration
    



Notes:

  * Each line ends with the '\n' character. Use `split()` to get each line.
  * Refer to the String Functions slide to see how you can get the first character from a string


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write a program that asks the user to type the name of a file (e.g.,
""file.txt""), and a letter. Your program should then open the file, and print
out all of the lines where the first character starts with the letter

For example, if the user types the following filename:

    
    
    input1.txt
    a
    

and the contents of input1.txt are:

    
    
    aspiration
    classified
    federation
    

the output should be:

    
    
    aspiration
    



Notes:

  * Each line ends with the '\n' character. Use `split()` to get each line.
  * Refer to the String Functions slide to see how you can get the first character from a string


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
filename = input(""Enter the name of the file: "")
letter = input(""Enter a letter: "")

with open(filename, 'r') as file:
    lines = file.readlines()

for line in lines:
    if line[0] == letter:
        print(line.strip())
"
106,lsn14_timestable,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
** Write an algorithm that asks the user for a positive number and then
outputs the multiplication table of that number 1-10.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Inputs | 3 | 9  
Outputs |

3  
6  
9  
12  
15  
18  
21  
24  
27  
30

| 9  
18  
27  
36  
45  
54  
63  
72  
81  
90  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
** Write an algorithm that asks the user for a positive number and then
outputs the multiplication table of that number 1-10.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Inputs | 3 | 9  
Outputs |

3  
6  
9  
12  
15  
18  
21  
24  
27  
30

| 9  
18  
27  
36  
45  
54  
63  
72  
81  
90  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Take input from the user
num = int(input(""Enter a positive number: ""))

# Use a for loop to iterate through the numbers 1-10
for i in range(1, 11):
    # Calculate the multiplication and print the result
    product = num * i
    print(product)
"
107,lsn14_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You are trying to use a for loop to print all of the powers of 2 from 1024
(210) to 1 (20). Unfortunately, for some reason, the loop does not work.
Review the code and make the necessary corrections.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You are trying to use a for loop to print all of the powers of 2 from 1024
(210) to 1 (20). Unfortunately, for some reason, the loop does not work.
Review the code and make the necessary corrections.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
108,lsn14_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a variable that asks the user for the number of
times to loop. Construct a FOR loop that loops this many times printing out a
message each time (the message can be whatever you want)


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a variable that asks the user for the number of
times to loop. Construct a FOR loop that loops this many times printing out a
message each time (the message can be whatever you want)


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","number_of_times = int(input(""Enter the number of times to loop: ""))

for i in range(number_of_times):
    print(""This is loop number"", i+1)"
109,lsn14_printchars,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Write a Python algorithm that asks the users for two ASCII characters
(e.g., 'a', 'z'), and prints all of the characters between them (inclusive).

  * If the first character has a lower ASCII value than the second (e.g., 'a' - 'z'), print out the letters in ascending order.
  * Alternatively, if the second letter has a lower ASCII value, print out the letters in descending order.



**HINTS:**

  * Use the `ord()` function to convert a character into an integer:  
`ord('a')` returns 141  
  

  * Use the `chr()` function to convert an integer back into a character:  
`chr(142)` returns 'b'



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Inputs | a  
c | f  
a  
Outputs |

a  
b  
c

| f  
e  
d  
c  
b  
a


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Write a Python algorithm that asks the users for two ASCII characters
(e.g., 'a', 'z'), and prints all of the characters between them (inclusive).

  * If the first character has a lower ASCII value than the second (e.g., 'a' - 'z'), print out the letters in ascending order.
  * Alternatively, if the second letter has a lower ASCII value, print out the letters in descending order.



**HINTS:**

  * Use the `ord()` function to convert a character into an integer:  
`ord('a')` returns 141  
  

  * Use the `chr()` function to convert an integer back into a character:  
`chr(142)` returns 'b'



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Inputs | a  
c | f  
a  
Outputs |

a  
b  
c

| f  
e  
d  
c  
b  
a


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
first_char = input()
second_char = input()

if ord(first_char) < ord(second_char):
    for i in range(ord(first_char), ord(second_char)+1):
        print(chr(i))
else:
    for i in range(ord(first_char), ord(second_char)-1, -1):
        print(chr(i))
"
110,lsn14_football,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** In, Python, write an algorithm that first asks the user how many football
players they wish to enter statistics for and then gets that many yearly
passing totals for each player. Output how many of those players that had more
than 5000 passing yards in a year. Also your algorithm will output the average
yardage per year as well as the minimum yardage entered, in that order. You
can assume there is at least one player's yardage to input.



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
**Inputs** | 6  
4924  
4442  
5117  
2700  
1990  
4399 | 5  
2305  
4209  
5100  
5109  
3800 | 4  
4200  
2709  
3757  
2976  
**Outputs** | 1  
3928.6666666666665  
1990 | 2  
4104.6  
2305 | 0  
3410.5  
2709


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** In, Python, write an algorithm that first asks the user how many football
players they wish to enter statistics for and then gets that many yearly
passing totals for each player. Output how many of those players that had more
than 5000 passing yards in a year. Also your algorithm will output the average
yardage per year as well as the minimum yardage entered, in that order. You
can assume there is at least one player's yardage to input.



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
**Inputs** | 6  
4924  
4442  
5117  
2700  
1990  
4399 | 5  
2305  
4209  
5100  
5109  
3800 | 4  
4200  
2709  
3757  
2976  
**Outputs** | 1  
3928.6666666666665  
1990 | 2  
4104.6  
2305 | 0  
3410.5  
2709


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def football_statistics():
    num_players = int(input(""Enter the number of players: ""))
    pass_yardage = []
    count = 0
    total_yardage = 0
    
    for _ in range(num_players):
        yardage = int(input(""Enter the passing yardage for a player: ""))
        pass_yardage.append(yardage)
        total_yardage += yardage
        
        if yardage > 5000:
            count += 1
    
    average_yardage = total_yardage / num_players
    min_yardage = min(pass_yardage)
    
    print(count)
    print(average_yardage)
    print(min_yardage)

football_statistics()
"
111,lsn14_counting,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
** Write a Python algorithm that gets three numbers from the user, X, Y, and
Z. Then have the algorithm output all the numbers from X to Y (inclusive),
counting by Z. You may assume that Z is non-zero.



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
**Inputs** | 1  
5  
1 | -5  
-10  
-3 | 15  
15  
100  
**Outputs** | 1  
2  
3  
4  
5 | -5  
-8 | 15


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
** Write a Python algorithm that gets three numbers from the user, X, Y, and
Z. Then have the algorithm output all the numbers from X to Y (inclusive),
counting by Z. You may assume that Z is non-zero.



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
**Inputs** | 1  
5  
1 | -5  
-10  
-3 | 15  
15  
100  
**Outputs** | 1  
2  
3  
4  
5 | -5  
-8 | 15


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
X = int(input())
Y = int(input())
Z = int(input())

for num in range(X, Y+1, Z):
    print(num)
"
112,lsn14_coordinates,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a Python algorithm that prints all the coordinates in a coordinate
plane, given two corners. Your program should get four inputs from the user:

  * the starting x-coordinate,
  * the ending x-coordinate,
  * the starting y-coordinate, and
  * the ending y-coordinate.

Your program will then print out all of the coordinates in x y order
(separating coordinates with a space), listing all of the coordinates in the
x-axis before incrementing y. You may assume that the ending coordinate is
never less than the starting coordinate.  

For example, your algorithm would print out:  
1 2  
2 2  
3 2  
4 2  
5 2  
6 2  
1 3  
2 3  
3 3  
4 3  
5 3  
6 3  
. . . and so on



**HINTS:**

  * Write a loop that first prints all of the x coordinates from start to end
  * Use a nested loop to print all of the y coordinates from start to end



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Inputs** | 0  
1  
0  
1 | 0  
2  
0  
1  
**Outputs** | 0 0  
1 0  
0 1  
1 1 | 0 0  
1 0  
2 0  
0 1  
1 1  
2 1  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a Python algorithm that prints all the coordinates in a coordinate
plane, given two corners. Your program should get four inputs from the user:

  * the starting x-coordinate,
  * the ending x-coordinate,
  * the starting y-coordinate, and
  * the ending y-coordinate.

Your program will then print out all of the coordinates in x y order
(separating coordinates with a space), listing all of the coordinates in the
x-axis before incrementing y. You may assume that the ending coordinate is
never less than the starting coordinate.  

For example, your algorithm would print out:  
1 2  
2 2  
3 2  
4 2  
5 2  
6 2  
1 3  
2 3  
3 3  
4 3  
5 3  
6 3  
. . . and so on



**HINTS:**

  * Write a loop that first prints all of the x coordinates from start to end
  * Use a nested loop to print all of the y coordinates from start to end



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Inputs** | 0  
1  
0  
1 | 0  
2  
0  
1  
**Outputs** | 0 0  
1 0  
0 1  
1 1 | 0 0  
1 0  
2 0  
0 1  
1 1  
2 1  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
start_x = int(input())
end_x = int(input())
start_y = int(input())
end_y = int(input())

for y in range(start_y, end_y+1):
    for x in range(start_x, end_x+1):
        print(x, y)
"
113,lsn14_class2017,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** In Python, write an algorithm that first asks the user how many cadets to
input and then gets that many cadet class years from the user. Output how many
of those cadets were in the class of 2017. You can assume there is at least
one cadet to enter.

**EXAMPLES:**

Example 1 | Example 2 | Example 3  
---|---|---  
Inputs | 4  
2014  
2016  
2017  
2017 | 5  
2015  
2017  
2014  
2014  
2017 | 4  
2014  
2016  
2014  
2014  
Outputs | 2 | 3 | 0


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** In Python, write an algorithm that first asks the user how many cadets to
input and then gets that many cadet class years from the user. Output how many
of those cadets were in the class of 2017. You can assume there is at least
one cadet to enter.

**EXAMPLES:**

Example 1 | Example 2 | Example 3  
---|---|---  
Inputs | 4  
2014  
2016  
2017  
2017 | 5  
2015  
2017  
2014  
2014  
2017 | 4  
2014  
2016  
2014  
2014  
Outputs | 2 | 3 | 0


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","n = int(input())
years = []
count = 0

for i in range(n):
    year = int(input())
    years.append(year)
    if year == 2017:
        count += 1

print(count)"
114,lsn13_waittimes,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that lets the user input the wait times for various
rides at an amusement park (in minutes) until he/she types the value -999.
Output the shortest waiting time, followed by the number of waiting times that
are over 30 minutes.

**EXAMPLE:**

Example 1 | Example 2 | Example 3  
---|---|---  
Inputs |

90  
30  
31  
-999

|

35  
15  
90  
120  
15  
-999

|

15  
15  
10  
5  
-999  
  
Outputs | 30  
2 | 15  
3 | 5  
0


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that lets the user input the wait times for various
rides at an amusement park (in minutes) until he/she types the value -999.
Output the shortest waiting time, followed by the number of waiting times that
are over 30 minutes.

**EXAMPLE:**

Example 1 | Example 2 | Example 3  
---|---|---  
Inputs |

90  
30  
31  
-999

|

35  
15  
90  
120  
15  
-999

|

15  
15  
10  
5  
-999  
  
Outputs | 30  
2 | 15  
3 | 5  
0


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def amusement_park_wait_times():
    wait_times = []
    while True:
        wait_time = int(input())
        if wait_time == -999:
            break
        wait_times.append(wait_time)
    
    shortest_wait_time = min(wait_times)
    high_wait_times = sum(wait_time > 30 for wait_time in wait_times)
    
    print(shortest_wait_time)
    print(high_wait_times)

amusement_park_wait_times()
"
115,lsn13_squadrons,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that asks the user for the number of squadrons to input,
and then gets each squadron's number. Output the number  
of squadrons from 1st, 2nd, 3rd, and 4th groups (one per line)

**EXAMPLE:**

Example 1 | Example 2 | Example 3  
---|---|---  
Inputs |

3  
3  
19  
24

|

4  
19  
25  
37  
40

|

2  
1  
34  
  
Outputs | 1  
1  
1  
0 | 0  
1  
1  
2 | 1  
0  
0  
1


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that asks the user for the number of squadrons to input,
and then gets each squadron's number. Output the number  
of squadrons from 1st, 2nd, 3rd, and 4th groups (one per line)

**EXAMPLE:**

Example 1 | Example 2 | Example 3  
---|---|---  
Inputs |

3  
3  
19  
24

|

4  
19  
25  
37  
40

|

2  
1  
34  
  
Outputs | 1  
1  
1  
0 | 0  
1  
1  
2 | 1  
0  
0  
1


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
squadrons = int(input())

group_1 = 0
group_2 = 0
group_3 = 0
group_4 = 0

for i in range(squadrons):
    squadron = int(input())
    if squadron % 4 == 1:
        group_1 += 1
    elif squadron % 4 == 2:
        group_2 += 1
    elif squadron % 4 == 3:
        group_3 += 1
    else:
        group_4 += 1

print(group_1)
print(group_2)
print(group_3)
print(group_4)
"
116,lsn13_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a WHILE loop that prints values from 0 to 10.
Modify the code so that it counts from 10 to 0.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a WHILE loop that prints values from 0 to 10.
Modify the code so that it counts from 10 to 0.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code
i = 10
while i >= 0:
    print(i)
    i -= 1
"
117,lsn13_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You are trying to use a for loop to print all of the powers of 2 from 1024
(210) to 1 (20). Unfortunately, for some reason, the loop does not work.
Review the code and make the necessary corrections.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You are trying to use a for loop to print all of the powers of 2 from 1024
(210) to 1 (20). Unfortunately, for some reason, the loop does not work.
Review the code and make the necessary corrections.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
for i in range(10, -1, -1):
    print(2**i)
"
118,lsn13_dvc,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** The CS110Z course director, unfortunately, was tricked into purchasing a
Disney Vacation Club timeshare. The good news about DVC is that it lets you
reserve a room at any Disney Resort for one week! The downside, however, is
that members have to pay an annual ""maintenance fee"" so that the mouse can
keep the property looking good (EVEN when Disney World was closed due to
COVID-19 . . . yay).

This year, the maintenance was $623.00. If that isn't bad enough, your course
director discovered that maintenance fees aren't fixed! On the contrary, it
accues each year at a rate of approximately 1.5%.

Write a Python function called `get_years_until` that takes a  **target
value**  as a parameter, and returns the number of years (assuming a fixed
interest rate) before the maintenance fee exceeds this value.

**Example 1**  
`get_years_until(624)` should return 1. This is because:

  * The maintenance fee will increase by $9.35 (i.e., 1.5% of 623) in a year
  * The new maintenance fee will be $623.00 + $9.35 = $632.35, which is obviously more than $624.00

**  
Example 2**  
`get_years_until(1000)` should return 32. This is because:

  * 623 * 1.015 * 1.015 * 1.015 . . . (32 times total) = $1003.23, which is obviously more than $1000.00

  
**Don't Know Where to Start?!?**  
Use a While loop to keep calculating the new maintenance fee until the value
is . . . (we'll let you figure out the rest).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** The CS110Z course director, unfortunately, was tricked into purchasing a
Disney Vacation Club timeshare. The good news about DVC is that it lets you
reserve a room at any Disney Resort for one week! The downside, however, is
that members have to pay an annual ""maintenance fee"" so that the mouse can
keep the property looking good (EVEN when Disney World was closed due to
COVID-19 . . . yay).

This year, the maintenance was $623.00. If that isn't bad enough, your course
director discovered that maintenance fees aren't fixed! On the contrary, it
accues each year at a rate of approximately 1.5%.

Write a Python function called `get_years_until` that takes a  **target
value**  as a parameter, and returns the number of years (assuming a fixed
interest rate) before the maintenance fee exceeds this value.

**Example 1**  
`get_years_until(624)` should return 1. This is because:

  * The maintenance fee will increase by $9.35 (i.e., 1.5% of 623) in a year
  * The new maintenance fee will be $623.00 + $9.35 = $632.35, which is obviously more than $624.00

**  
Example 2**  
`get_years_until(1000)` should return 32. This is because:

  * 623 * 1.015 * 1.015 * 1.015 . . . (32 times total) = $1003.23, which is obviously more than $1000.00

  
**Don't Know Where to Start?!?**  
Use a While loop to keep calculating the new maintenance fee until the value
is . . . (we'll let you figure out the rest).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def get_years_until(target_value):
    maintenance_fee = 623.00
    years = 0
    
    while maintenance_fee <= target_value:
        maintenance_fee *= 1.015
        years += 1
    
    return years
"
119,lsn13_countby10s,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a program whose input is two integers. Output the first integer and
subsequent increments of 10 as long as the value is less than or equal to the
second integer.

Case #1: If the input is:

    
    
    -15
    30
    

the output is:

    
    
    -15
    -5
    5
    15
    25
    

Case 2: If the second integer is less than the first as in:

    
    
    20
    5
    

the output is:

    
    
    Second integer can't be less than the first.
    

For coding simplicity, output a space after every integer, including the last.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a program whose input is two integers. Output the first integer and
subsequent increments of 10 as long as the value is less than or equal to the
second integer.

Case #1: If the input is:

    
    
    -15
    30
    

the output is:

    
    
    -15
    -5
    5
    15
    25
    

Case 2: If the second integer is less than the first as in:

    
    
    20
    5
    

the output is:

    
    
    Second integer can't be less than the first.
    

For coding simplicity, output a space after every integer, including the last.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Solution:

"
120,lsn13_count,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a Python program that gets 2 inputs from the user

  * a number,  **x**
  * an increment amount,  **y**

Your program will then print out all the numbers from 0 to the user-defined
value (x), counting by the increment amount (y).

**EXAMPLES:**

| Example 1 | Example 2  
---|---|---  
Inputs | 10  
2 | 14  
3  
Outputs | 0  
2  
4  
6  
8  
10 | 0  
3  
6  
9  
12


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a Python program that gets 2 inputs from the user

  * a number,  **x**
  * an increment amount,  **y**

Your program will then print out all the numbers from 0 to the user-defined
value (x), counting by the increment amount (y).

**EXAMPLES:**

| Example 1 | Example 2  
---|---|---  
Inputs | 10  
2 | 14  
3  
Outputs | 0  
2  
4  
6  
8  
10 | 0  
3  
6  
9  
12


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
x = int(input())
y = int(input())

for i in range(0, x+1, y):
    print(i)
"
121,lsn13_cargocapacity,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that lets the user input the cargo capacity (in lbs) of
various transport aircraft until the user enters -1. Your program should
output the min and max cargo capacity, as well as the number of aircraft that
can carry at least 10000 lbs.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

4500  
11000  
9000  
-1

|

9999  
15000  
3500  
17500  
-1

| 10000  
-1  
Outputs | 4500  
11000  
1 | 3500  
17500  
2 | 10000  
10000  
1


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that lets the user input the cargo capacity (in lbs) of
various transport aircraft until the user enters -1. Your program should
output the min and max cargo capacity, as well as the number of aircraft that
can carry at least 10000 lbs.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

4500  
11000  
9000  
-1

|

9999  
15000  
3500  
17500  
-1

| 10000  
-1  
Outputs | 4500  
11000  
1 | 3500  
17500  
2 | 10000  
10000  
1


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# skeleton code
min_capacity = float('inf')
max_capacity = float('-inf')
count = 0

while True:
    capacity = int(input())
    if capacity == -1:
        break
    min_capacity = min(min_capacity, capacity)
    max_capacity = max(max_capacity, capacity)
    if capacity >= 10000:
        count += 1

print(min_capacity)
print(max_capacity)
print(count)
"
122,lsn13_averagerun,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** In, Python, write an algorithm that first asks the user how many PFT run
times to input and then gets that many values from the user. Output the
average of all the run times. You can assume there is at least one run time to
input.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | 6  
98  
75  
88  
82  
94  
100 | 5  
99  
83  
79  
86  
87 | 4  
88  
82  
80  
90  
Outputs | 89.5 | 86.8 | 85


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** In, Python, write an algorithm that first asks the user how many PFT run
times to input and then gets that many values from the user. Output the
average of all the run times. You can assume there is at least one run time to
input.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | 6  
98  
75  
88  
82  
94  
100 | 5  
99  
83  
79  
86  
87 | 4  
88  
82  
80  
90  
Outputs | 89.5 | 86.8 | 85


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
n = int(input())
time_list = []
for i in range(n):
    time = int(input())
    time_list.append(time)
average = sum(time_list) / n
print(average)
"
123,lsn12_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function called `fahrenheit_to_kelvin()`. Your function should take
a temperature (in Fahrenheit) as a parameter, and RETURN (NOT PRINT) the
equivalent temperature in Kelvin.

**NOTE:  
** The formula for converting between Fahrenheit and Kelvin is

**K = ((F - 32) / 1.8) + 273.15**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function called `fahrenheit_to_kelvin()`. Your function should take
a temperature (in Fahrenheit) as a parameter, and RETURN (NOT PRINT) the
equivalent temperature in Kelvin.

**NOTE:  
** The formula for converting between Fahrenheit and Kelvin is

**K = ((F - 32) / 1.8) + 273.15**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def fahrenheit_to_kelvin(temp):
    return ((temp - 32) / 1.8) + 273.15"
124,lsn12_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a function called get_fuel_consumption() that
takes a distance in kilometers as a parameter, and calculates the fuel
consumed (in gallons) by a 747 aircraft to travel this distance.

Call this function to determine how much fuel is consumed by a 747 when
traveling 1500 kilometers. Store the returned result in a variable called
fuel_consumed

Remember, ""Calling a function"" simply means typing in the name of the function
(and providing it with any parameters that it needs--in this case, there are
no parameters since there is nothing in the parenthesis).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a function called get_fuel_consumption() that
takes a distance in kilometers as a parameter, and calculates the fuel
consumed (in gallons) by a 747 aircraft to travel this distance.

Call this function to determine how much fuel is consumed by a 747 when
traveling 1500 kilometers. Store the returned result in a variable called
fuel_consumed

Remember, ""Calling a function"" simply means typing in the name of the function
(and providing it with any parameters that it needs--in this case, there are
no parameters since there is nothing in the parenthesis).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",fuel_consumed = get_fuel_consumption(1500)
125,lsn12_in_circle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that determines if a point is within a circle. You will
name your function `in_circle()`. It has five parameters:

  1. The coordinates of the point that is to be tested (x, y)
  2. The center of a circle (cir_x, cir_y)
  3. The radius of the circle (radius)

 The `in_circle()` function will return **True** if the point is on or inside
the circle, and **False** otherwise.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that determines if a point is within a circle. You will
name your function `in_circle()`. It has five parameters:

  1. The coordinates of the point that is to be tested (x, y)
  2. The center of a circle (cir_x, cir_y)
  3. The radius of the circle (radius)

 The `in_circle()` function will return **True** if the point is on or inside
the circle, and **False** otherwise.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def in_circle(x, y, cir_x, cir_y, radius):
    distance = ((x - cir_x)**2 + (y - cir_y)**2)**0.5
    if distance <= radius:
        return True
    else:
        return False"
126,lsn12_distance,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that computes the distance between two points. You will
name your function `dist_points`. It has four parameters, the cordinates of
the two points as `x1, y1, x2, y2`. The `dist_points()` function will return
the distance between the two points as a floating point number.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that computes the distance between two points. You will
name your function `dist_points`. It has four parameters, the cordinates of
the two points as `x1, y1, x2, y2`. The `dist_points()` function will return
the distance between the two points as a floating point number.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

def dist_points(x1, y1, x2, y2):
    distance = math.sqrt((x2-x1)**2 + (y2-y1)**2)
    return distance
"
127,lsn12_circle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that computes the area of a circle. You will name your
function `area_circle`. It has one parameter, the radius of the circle,
`radius`. The `area_circle()` function will return the area of the circle.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that computes the area of a circle. You will name your
function `area_circle`. It has one parameter, the radius of the circle,
`radius`. The `area_circle()` function will return the area of the circle.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

def area_circle(radius):
    return math.pi * radius ** 2
"
128,lsn12_asteroids,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

""Asteroids"" was an arcade game created in 1979 by Atari, Inc. In the game, the
player is given control of a spaceship that has the ability to shoot bullets.
The player is then placed in a field of floating rocks, and is tasked with
destroying them without running into them.

In this lab, you will write a ""collision detection"" function that will be used
by the game to determine if the player's ship has hit a rock. To make this
simple, assume that an imaginary circle extends from the center of the
asteroid and the player's ship (see below image). If the two circles ever
overlap one another, then a collision has occurred. (NOTE: There are more
accurate ways to detect a collision. [Click here if you want to learn more
(Links to an external site.)](https://bell0bytes.eu/basic-collision-
detection/)).

![](https://bell0bytes.eu/content/images/2019/03/spaceShipAsteroid.png)

Your function, which you will name `detect_collision()` should have six
parameters: the (x, y) coordinates of the center of player's ship, the ship's
radius, the (x, y) coordinates of the center of an asteroid, and the
asteroid's radius. Your function will return `True` if the player's ship has
hit the asteroid, and `False` otherwise.

**HINT: _  
_** _You may want to copy and paste the_  `dist_points`  _function you created
earlier. It's almost as if we are trying to demonstrate the importance of
reusable functions . . ._

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

""Asteroids"" was an arcade game created in 1979 by Atari, Inc. In the game, the
player is given control of a spaceship that has the ability to shoot bullets.
The player is then placed in a field of floating rocks, and is tasked with
destroying them without running into them.

In this lab, you will write a ""collision detection"" function that will be used
by the game to determine if the player's ship has hit a rock. To make this
simple, assume that an imaginary circle extends from the center of the
asteroid and the player's ship (see below image). If the two circles ever
overlap one another, then a collision has occurred. (NOTE: There are more
accurate ways to detect a collision. [Click here if you want to learn more
(Links to an external site.)](https://bell0bytes.eu/basic-collision-
detection/)).

![](https://bell0bytes.eu/content/images/2019/03/spaceShipAsteroid.png)

Your function, which you will name `detect_collision()` should have six
parameters: the (x, y) coordinates of the center of player's ship, the ship's
radius, the (x, y) coordinates of the center of an asteroid, and the
asteroid's radius. Your function will return `True` if the player's ship has
hit the asteroid, and `False` otherwise.

**HINT: _  
_** _You may want to copy and paste the_  `dist_points`  _function you created
earlier. It's almost as if we are trying to demonstrate the importance of
reusable functions . . ._

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

def detect_collision(ship_x, ship_y, ship_radius, asteroid_x, asteroid_y, asteroid_radius):
    distance = math.sqrt((ship_x - asteroid_x)**2 + (ship_y - asteroid_y)**2)
    if distance <= (ship_radius + asteroid_radius):
        return True
    else:
        return False
"
129,lsn11_triangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that computes the area of a triangle. You will name your
function `area_triangle()`. It has two parameters, the height of the triangle,
`height`, and the length of the base, `base`. The `area_triangle()` function
will print the area of the triangle.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
submit to the server for grading, only the function will be tested.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that computes the area of a triangle. You will name your
function `area_triangle()`. It has two parameters, the height of the triangle,
`height`, and the length of the base, `base`. The `area_triangle()` function
will print the area of the triangle.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
submit to the server for grading, only the function will be tested.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def area_triangle(height, base):
    area = 0.5 * base * height
    print(area)
"
130,lsn11_skill3,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Define a function called `print_hello()`. Your function should, when
called, simply print out a message of your choosing that would be a greeting
to someone.

**IMPORTANT NOTE:**  
Functions only run when a program calls them. For the purposes of this
exercise, you do not need to call the function. If you don't, however, nothing
will appear on the screen when you run it in Thonny.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Define a function called `print_hello()`. Your function should, when
called, simply print out a message of your choosing that would be a greeting
to someone.

**IMPORTANT NOTE:**  
Functions only run when a program calls them. For the purposes of this
exercise, you do not need to call the function. If you don't, however, nothing
will appear on the screen when you run it in Thonny.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def print_hello():
    print(""Hello, World!"")
"
131,lsn11_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_multiple_trees()` that
outputs a tree using ASCII art. Unlike the previous problem, this function
accepts a parameter that tells it how many trees to draw.

Write a program that:

  1. Gets an integer from the user and stores it in a variable. You can name this variable whatever you want.
  2. Call the function, and passes the variable to it. 

Remember that ""passing a value"" to a function simply means putting the number
inside the parenthesis when you call it.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_multiple_trees()` that
outputs a tree using ASCII art. Unlike the previous problem, this function
accepts a parameter that tells it how many trees to draw.

Write a program that:

  1. Gets an integer from the user and stores it in a variable. You can name this variable whatever you want.
  2. Call the function, and passes the variable to it. 

Remember that ""passing a value"" to a function simply means putting the number
inside the parenthesis when you call it.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def draw_multiple_trees(num):
    for _ in range(num):
        print(""   ^   "")
        print(""  ^^^  "")
        print("" ^^^^^ "")
        print(""   |   "")
        print(""  |||  "")
        print("" ||||| "")
        print(""  ===  "")

# Get input from user and store it in a variable
num_trees = int(input(""Enter the number of trees to draw: ""))

# Call the function and pass the variable to it
draw_multiple_trees(num_trees)
"
132,lsn11_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_tree()` that prints a
tree using ASCII art:

    
    
     *  
     ***  
    *****  
     |

Call this function


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_tree()` that prints a
tree using ASCII art:

    
    
     *  
     ***  
    *****  
     |

Call this function


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def draw_tree():
    print(""    *"")
    print(""   ***"")
    print(""  *****"")
    print(""    |"")

draw_tree()"
133,lsn11_imagesize,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
PROBLEM STATEMENT:  
Write a function that computes the size of an uncompressed image. You will
name your function calculate_size_of_image(), and it will have three
parameters: the width of the image, the height of the image, and the bit depth
(i.e., # of bits per pixel).

The function should print the size of the image in kilobytes.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
PROBLEM STATEMENT:  
Write a function that computes the size of an uncompressed image. You will
name your function calculate_size_of_image(), and it will have three
parameters: the width of the image, the height of the image, and the bit depth
(i.e., # of bits per pixel).

The function should print the size of the image in kilobytes.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def calculate_size_of_image(width, height, bit_depth):
    size_bytes = width * height * (bit_depth / 8)
    size_kb = size_bytes / 1024
    print(size_kb)"
134,lsn11_callme,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with three functions. Open the template file, and
perform the following tasks: **  
**

  * **Task 1:** Ask the user to enter a width and height. Do **NOT** assume they are whole numbers. Call area_rectangle and give it the user values
  * **Task 2:** Ask the user to enter a string. Call print_backwards and give it the user value
  * **Task 3:** You have been provided with a variable called my_number. Call positive_or_negative and give it the variable


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with three functions. Open the template file, and
perform the following tasks: **  
**

  * **Task 1:** Ask the user to enter a width and height. Do **NOT** assume they are whole numbers. Call area_rectangle and give it the user values
  * **Task 2:** Ask the user to enter a string. Call print_backwards and give it the user value
  * **Task 3:** You have been provided with a variable called my_number. Call positive_or_negative and give it the variable


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def area_rectangle(width, height):
    area = width * height
    return area

def print_backwards(string):
    backwards = string[::-1]
    print(backwards)

def positive_or_negative(number):
    if number > 0:
        print(""positive"")
    elif number < 0:
        print(""negative"")
    else:
        print(""zero"")

# Task 1
width = float(input(""Enter width: ""))
height = float(input(""Enter height: ""))
area_rectangle(width, height)

# Task 2
string = input(""Enter a string: "")
print_backwards(string)

# Task 3
my_number = 10
positive_or_negative(my_number)"
135,lsn1_helloworld,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
  1. Download the template file below and save it somewhere you will remember.  Do not rename the file!  
  

  2. Open the file in Thonny.  You should be able to double click on it.  
  

  3. Press the play button.  It looks like a Green button  
  
  

  4. You will see the following prompt in the Console.  Type 'y' (without the quotes) and press ENTER.  
  
  

  5. The test program will automatically run and print a result.  If you see the following, you are good to go.  Otherwise, contact your instructor:  


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
  1. Download the template file below and save it somewhere you will remember.  Do not rename the file!  
  

  2. Open the file in Thonny.  You should be able to double click on it.  
  

  3. Press the play button.  It looks like a Green button  
  
  

  4. You will see the following prompt in the Console.  Type 'y' (without the quotes) and press ENTER.  
  
  

  5. The test program will automatically run and print a result.  If you see the following, you are good to go.  Otherwise, contact your instructor:  


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_average(numbers):
    total = sum(numbers)
    average = total / len(numbers)
    return average

def add_numbers(a, b):
    return a + b

def subtract_numbers(a, b):
    return a - b

def multiply_numbers(a, b):
    return a * b

def divide_numbers(a, b):
    return a / b

def test_solution():
    assert calculate_average([1, 2, 3, 4, 5]) == 3.0
    assert add_numbers(2, 3) == 5
    assert subtract_numbers(5, 3) == 2
    assert multiply_numbers(4, 5) == 20
    assert divide_numbers(10, 2) == 5

test_solution()
```
"
136,a4_7_fit_u,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `afpft_v2.csv` that describes how
various Air Force personnel performed on their most recent fitness test. Do
NOT ask the user for the file name--just open and read this specific file.
Here is a typical line from the dataset (each line ends with the newline ""\n""
character):



`38, 52, 29, 568`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:  
  

  | Sit Ups  
(Reps) | Push Ups  
(Reps) | Waist  
(inches) | 1.5 Mile Run Time  
(seconds)  
---|---|---|---|---  
Value | 45 | 65 | 32 | 630  
  


**Write a Python program that analyzes this file and prints the # of
_unsatisfactory_ (less than 75) scores. **



To assist you, we have provided you with a module called `fitness_calculator`
that contains four functions:

  * calculate_waist_score
  * calculate_pushup_score
  * calculate_situp_score
  * calculate_run_score



Each function takes a single number as a parameter, and **returns** the score
for that category. For example, to get the score for an Airman who did 45
pushups, you could import the module and call it, as follows:

    
    
    pushup_score = fitness_calculator.calculate_pushup_score(45)



To get a single Airman's total score, simply calculate the score for each
category and add them up.

    
    
    score = waist_score + pushup_score + situp_score + run_score



**EXAMPLES:**

If, for example, the number of unsatisfactory scores is 10, your program
should print:

    
    
    **10**

*** Your answer will be different.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `afpft_v2.csv` that describes how
various Air Force personnel performed on their most recent fitness test. Do
NOT ask the user for the file name--just open and read this specific file.
Here is a typical line from the dataset (each line ends with the newline ""\n""
character):



`38, 52, 29, 568`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:  
  

  | Sit Ups  
(Reps) | Push Ups  
(Reps) | Waist  
(inches) | 1.5 Mile Run Time  
(seconds)  
---|---|---|---|---  
Value | 45 | 65 | 32 | 630  
  


**Write a Python program that analyzes this file and prints the # of
_unsatisfactory_ (less than 75) scores. **



To assist you, we have provided you with a module called `fitness_calculator`
that contains four functions:

  * calculate_waist_score
  * calculate_pushup_score
  * calculate_situp_score
  * calculate_run_score



Each function takes a single number as a parameter, and **returns** the score
for that category. For example, to get the score for an Airman who did 45
pushups, you could import the module and call it, as follows:

    
    
    pushup_score = fitness_calculator.calculate_pushup_score(45)



To get a single Airman's total score, simply calculate the score for each
category and add them up.

    
    
    score = waist_score + pushup_score + situp_score + run_score



**EXAMPLES:**

If, for example, the number of unsatisfactory scores is 10, your program
should print:

    
    
    **10**

*** Your answer will be different.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import fitness_calculator

filename = ""afpft_v2.csv""

def get_unsatisfactory_scores(filename):
    unsatisfactory_count = 0
    
    with open(filename, 'r') as file:
        for line in file:
            data = line.strip().split(',')
            situps = int(data[0])
            pushups = int(data[1])
            waist = int(data[2])
            run_time = int(data[3])
            
            situps_score = fitness_calculator.calculate_situp_score(situps)
            pushups_score = fitness_calculator.calculate_pushup_score(pushups)
            waist_score = fitness_calculator.calculate_waist_score(waist)
            run_score = fitness_calculator.calculate_run_score(run_time)
            
            total_score = situps_score + pushups_score + waist_score + run_score
            
            if total_score < 75:
                unsatisfactory_count += 1
    
    return unsatisfactory_count

unsatisfactory_scores = get_unsatisfactory_scores(filename)
print(unsatisfactory_scores)
"
137,a4_7_fit_e,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `afpft_v1.csv` that describes how
various Air Force personnel performed on their most recent fitness test. Do
NOT ask the user for the file name--just open and read this specific file.
Here is a typical line from the dataset (each line ends with the newline ""\n""
character):



`38, 52, 29, 568`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:  
  

  | Waist  
(inches) | Push Ups  
(Reps) | Sit Ups  
(Reps) | 1.5 Mile Run Time  
(seconds)  
---|---|---|---|---  
Value | 38 | 52 | 29 | 568  
  


**Write a Python program that analyzes this file and prints the # of excellent
(90 or higher) scores.**



To assist you, we have provided you with a module called `fitness_calculator`
that contains four functions:

  * calculate_waist_score
  * calculate_pushup_score
  * calculate_situp_score
  * calculate_run_score



Each function takes a single number as a parameter, and **returns** the score
for that category. For example, to get the score for an Airman who did 45
pushups, you could import the module and call it, as follows:

    
    
    pushup_score = fitness_calculator.calculate_pushup_score(45)



To get a single Airman's total score, simply calculate the score for each
category and add them up.

    
    
    score = waist_score + pushup_score + situp_score + run_score



**EXAMPLES:**

If, for example, the number of excellent scores is 4, your program should
print:

    
    
    **4  
    **

*** Your answers will be different.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `afpft_v1.csv` that describes how
various Air Force personnel performed on their most recent fitness test. Do
NOT ask the user for the file name--just open and read this specific file.
Here is a typical line from the dataset (each line ends with the newline ""\n""
character):



`38, 52, 29, 568`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:  
  

  | Waist  
(inches) | Push Ups  
(Reps) | Sit Ups  
(Reps) | 1.5 Mile Run Time  
(seconds)  
---|---|---|---|---  
Value | 38 | 52 | 29 | 568  
  


**Write a Python program that analyzes this file and prints the # of excellent
(90 or higher) scores.**



To assist you, we have provided you with a module called `fitness_calculator`
that contains four functions:

  * calculate_waist_score
  * calculate_pushup_score
  * calculate_situp_score
  * calculate_run_score



Each function takes a single number as a parameter, and **returns** the score
for that category. For example, to get the score for an Airman who did 45
pushups, you could import the module and call it, as follows:

    
    
    pushup_score = fitness_calculator.calculate_pushup_score(45)



To get a single Airman's total score, simply calculate the score for each
category and add them up.

    
    
    score = waist_score + pushup_score + situp_score + run_score



**EXAMPLES:**

If, for example, the number of excellent scores is 4, your program should
print:

    
    
    **4  
    **

*** Your answers will be different.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv
import fitness_calculator

def count_excellent_scores(file_name):
    excellent_scores = 0

    with open(file_name, 'r') as file:
        csv_reader = csv.reader(file)
        for row in csv_reader:
            waist = int(row[0])
            pushups = int(row[1])
            situps = int(row[2])
            run_time = int(row[3])

            waist_score = fitness_calculator.calculate_waist_score(waist)
            pushup_score = fitness_calculator.calculate_pushup_score(pushups)
            situp_score = fitness_calculator.calculate_situp_score(situps)
            run_score = fitness_calculator.calculate_run_score(run_time)

            total_score = waist_score + pushup_score + situp_score + run_score

            if total_score >= 90:
                excellent_scores += 1

    return excellent_scores

file_name = 'afpft_v1.csv'
result = count_excellent_scores(file_name)
print(result)
"
138,a4_6_scores,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

You have been asked to write a program to assess student's performance on a
recent test. Write a Python program that asks the user to repeatedly type in
the name of a cadet, followed by their test score (between 0 and 100) until
the user types the word ""DONE"". Your program then analyze the values and
print:

  * The highest overall test score (just score, not the name)
  * The names of all cadets who scored within 10 points of the highest score. 
    * Comparison to the target score should be exclusive.
    * The names should be output in the same order of input.



**EXAMPLES:**

  | **Example 1**  
---|---  
**Input(s)** | Paul  
95  
Andrew  
86  
Joel  
57  
DONE  
**Output(s)** | 95  
Paul  
Andrew


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

You have been asked to write a program to assess student's performance on a
recent test. Write a Python program that asks the user to repeatedly type in
the name of a cadet, followed by their test score (between 0 and 100) until
the user types the word ""DONE"". Your program then analyze the values and
print:

  * The highest overall test score (just score, not the name)
  * The names of all cadets who scored within 10 points of the highest score. 
    * Comparison to the target score should be exclusive.
    * The names should be output in the same order of input.



**EXAMPLES:**

  | **Example 1**  
---|---  
**Input(s)** | Paul  
95  
Andrew  
86  
Joel  
57  
DONE  
**Output(s)** | 95  
Paul  
Andrew


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def analyze_scores():
    scores = {}
    highest_score = 0

    while True:
        name = input(""Enter the name of the student (or 'DONE' to finish): "")
        if name == ""DONE"":
            break

        score = int(input(""Enter the test score: ""))
        if score > highest_score:
            highest_score = score

        scores[name] = score

    print(""The highest overall test score:"", highest_score)

    print(""The names of all cadets who scored within 10 points of the highest score:"")
    for name, score in scores.items():
        if highest_score - score <= 10 and highest_score - score > 0:
            print(name)
"
139,a4_6_flighthours,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

You have been asked to write a program to get flying hours from a squadron of
pilots for the month. Write a Python program that asks the user to repeatedly
type in the name of a pilot, followed by their flying hours until the user
types the word ""DONE"". Your program then analyze the values and print:

  * The average number of flying hours (as a whole number)
  * The names of all pilots who flew less than the average number of flight hours. 
    * Comparison to the average should be exclusive.
    * Names should be output in the same order as input



**EXAMPLES:**

  | **Example 1**  
---|---  
**Input(s)** | Polo  
95  
Renegade  
78  
Headphones  
70  
DONE  
**Output(s)** |

81  
Renegade  
Headphones


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

You have been asked to write a program to get flying hours from a squadron of
pilots for the month. Write a Python program that asks the user to repeatedly
type in the name of a pilot, followed by their flying hours until the user
types the word ""DONE"". Your program then analyze the values and print:

  * The average number of flying hours (as a whole number)
  * The names of all pilots who flew less than the average number of flight hours. 
    * Comparison to the average should be exclusive.
    * Names should be output in the same order as input



**EXAMPLES:**

  | **Example 1**  
---|---  
**Input(s)** | Polo  
95  
Renegade  
78  
Headphones  
70  
DONE  
**Output(s)** |

81  
Renegade  
Headphones


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
140,a4_6_aft,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

You have been asked to write a program to assess student's performance on the
AFT. Write a Python program that asks the user to repeatedly type in the name
of a cadet, followed by their run time (in whole seconds) until the user types
the word ""DONE"". Your program then analyze the values and print:

  * The fastest (lowest) AFT time.
  * The names of all cadets who were within 30 seconds of the fastest time. 
    * Comparison to the target time should be exclusive.
    * Names should be output in the same order as input



**EXAMPLES:**

  | **Example 1**  
---|---  
**Input(s)** | Paul  
545  
Andrew  
661  
Joel  
575  
DONE  
**Output(s)** | 545  
Paul  
Joel


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

You have been asked to write a program to assess student's performance on the
AFT. Write a Python program that asks the user to repeatedly type in the name
of a cadet, followed by their run time (in whole seconds) until the user types
the word ""DONE"". Your program then analyze the values and print:

  * The fastest (lowest) AFT time.
  * The names of all cadets who were within 30 seconds of the fastest time. 
    * Comparison to the target time should be exclusive.
    * Names should be output in the same order as input



**EXAMPLES:**

  | **Example 1**  
---|---  
**Input(s)** | Paul  
545  
Andrew  
661  
Joel  
575  
DONE  
**Output(s)** | 545  
Paul  
Joel


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code

cadet_times = []

while True:
    name = input(""Enter the name of the cadet: "")
    if name == ""DONE"":
        break
    time = int(input(""Enter the cadet's run time in seconds: ""))
    cadet_times.append((name, time))

fastest_time = float('inf')
fastest_cadets = []
for cadet, time in cadet_times:
    if time < fastest_time:
        fastest_time = time
        fastest_cadets = [cadet]
    elif time == fastest_time:
        fastest_cadets.append(cadet)

within_30_seconds = []
for cadet, time in cadet_times:
    if time > fastest_time and time <= fastest_time + 30:
        within_30_seconds.append(cadet)

print(fastest_time)
for cadet in fastest_cadets:
    print(cadet)
for cadet in within_30_seconds:
    print(cadet)
"
141,a4_5_translate,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

Write a function called get_english_word that **returns** the English
translation for a Spanish word. Your function will take the following two
parameters:

  1. The spanish word (e.g., ""Hola"").
  2. A dictionary containing a list of Spanish / English pairs. 

Here is an example of what the dictionary might look like:



**Key** | **Value**  
---|---  
Hola | Hello  
Adios | Goodbye  
Aeronave | Aircraft  
  


Your function should **return** the English translation of the Spanish word
contained within the dictionary.



**HINT:**

Using parameters and return with functions is in the Lessons 11/12 block on
your Python Quick Reference guide.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

Write a function called get_english_word that **returns** the English
translation for a Spanish word. Your function will take the following two
parameters:

  1. The spanish word (e.g., ""Hola"").
  2. A dictionary containing a list of Spanish / English pairs. 

Here is an example of what the dictionary might look like:



**Key** | **Value**  
---|---  
Hola | Hello  
Adios | Goodbye  
Aeronave | Aircraft  
  


Your function should **return** the English translation of the Spanish word
contained within the dictionary.



**HINT:**

Using parameters and return with functions is in the Lessons 11/12 block on
your Python Quick Reference guide.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def get_english_word(spanish_word, dictionary):
    return dictionary.get(spanish_word)
"
142,a4_5_password,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

Write a function called get_password that **returns** the password for a
specified website. Your function will take the following two parameters in
this order:

  1. The website (e.g., ""Amazon"").
  2. A dictionary containing a list of website/password pairs. 

Here is an example of what the dictionary might look like:



**Key** | **Value**  
---|---  
Amazon | password1234  
Facebook | aardvark  
Twitter | AirPower!  
  


Your function should return the password of the website contained within the
dictionary.



**HINT:**

Using parameters and **return** with functions is in the Lessons 11/12 block
on your Python Quick Reference guide.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

Write a function called get_password that **returns** the password for a
specified website. Your function will take the following two parameters in
this order:

  1. The website (e.g., ""Amazon"").
  2. A dictionary containing a list of website/password pairs. 

Here is an example of what the dictionary might look like:



**Key** | **Value**  
---|---  
Amazon | password1234  
Facebook | aardvark  
Twitter | AirPower!  
  


Your function should return the password of the website contained within the
dictionary.



**HINT:**

Using parameters and **return** with functions is in the Lessons 11/12 block
on your Python Quick Reference guide.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def get_password(website, password_dict):
    return password_dict[website]"
143,a4_5_areacode,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

Write a function called get_area_code that **returns** the area code for a
specific state. Your function will take the following two parameters in this
order:

  1. The name of the state (e.g., ""California"").
  2. A dictionary containing a list of State / Area Code Pairs. 

Here is an example of what the dictionary might look like:



**Key** | **Value**  
---|---  
California | 209  
Michigan | 234  
Colorado | 719  
  


Your function should **return** the area code for the specified state
contained within the dictionary.



**HINT:**

Using parameters and return with functions is in the Lessons 11/12 block on
your Python Quick Reference guide.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

Write a function called get_area_code that **returns** the area code for a
specific state. Your function will take the following two parameters in this
order:

  1. The name of the state (e.g., ""California"").
  2. A dictionary containing a list of State / Area Code Pairs. 

Here is an example of what the dictionary might look like:



**Key** | **Value**  
---|---  
California | 209  
Michigan | 234  
Colorado | 719  
  


Your function should **return** the area code for the specified state
contained within the dictionary.



**HINT:**

Using parameters and return with functions is in the Lessons 11/12 block on
your Python Quick Reference guide.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def get_area_code(state, area_codes):
    return area_codes[state]"
144,a4_4_year,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:**

You have been provided with a file named ""cadets.csv"" that contains
information about (fake) cadets. Here is a line from the file:



**`Karla Webber, Female, CS-17, 2020`**



  
Each position in the line represents a different ""data element."" Here is a key
for your reference:



  | Name | Gender | Squadron | Class Year  
---|---|---|---|---  
Value | Karla Webber | Female | CS-17 | 2020  
  
** **

Write a Python program that opens the file and prints out the Class Year of
each cadet. For example, if the first three cadets come from 2020, 2019, 2020,
the first three lines of output should be:

    
    
    2020  
    2019  
    2020

**NOTES:**

  * Your solution should print out the years in the order that they were read from the file.
  * Your solution may print out the same year (e.g., 2020) multiple times.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:**

You have been provided with a file named ""cadets.csv"" that contains
information about (fake) cadets. Here is a line from the file:



**`Karla Webber, Female, CS-17, 2020`**



  
Each position in the line represents a different ""data element."" Here is a key
for your reference:



  | Name | Gender | Squadron | Class Year  
---|---|---|---|---  
Value | Karla Webber | Female | CS-17 | 2020  
  
** **

Write a Python program that opens the file and prints out the Class Year of
each cadet. For example, if the first three cadets come from 2020, 2019, 2020,
the first three lines of output should be:

    
    
    2020  
    2019  
    2020

**NOTES:**

  * Your solution should print out the years in the order that they were read from the file.
  * Your solution may print out the same year (e.g., 2020) multiple times.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
with open(""cadets.csv"", ""r"") as file:
    for line in file:
        data = line.strip().split("", "")
        print(data[-1])
"
145,a4_4_squadrons,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:**

You have been provided with a file named ""cadets.csv"" that contains
information about (fake) cadets. Here is a line from the file:



**`Karla Webber, Female, CS-17, 2020`**



  
Each position in the line represents a different ""data element."" Here is a key
for your reference:



  | Name | Gender | Squadron | Class Year  
---|---|---|---|---  
Value | Karla Webber | Female | CS-17 | 2020  
  
** **

Write a Python program that opens the file and prints out the squadron number
of each cadet. For example, if the first three cadets come from CS-03, CS-04,
and CS-09, the first three lines of output should be:

    
    
    CS-03  
    CS-04  
    CS-09



**NOTES:**

  * Your solution should print out the squadrons in the order that they were read from the file.
  * Your solution may print out the same squadron (e.g., CS-03) multiple times.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:**

You have been provided with a file named ""cadets.csv"" that contains
information about (fake) cadets. Here is a line from the file:



**`Karla Webber, Female, CS-17, 2020`**



  
Each position in the line represents a different ""data element."" Here is a key
for your reference:



  | Name | Gender | Squadron | Class Year  
---|---|---|---|---  
Value | Karla Webber | Female | CS-17 | 2020  
  
** **

Write a Python program that opens the file and prints out the squadron number
of each cadet. For example, if the first three cadets come from CS-03, CS-04,
and CS-09, the first three lines of output should be:

    
    
    CS-03  
    CS-04  
    CS-09



**NOTES:**

  * Your solution should print out the squadrons in the order that they were read from the file.
  * Your solution may print out the same squadron (e.g., CS-03) multiple times.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
with open(""cadets.csv"", ""r"") as file:
    for line in file:
        data = line.split("","")
        print(data[2])
"
146,a4_4_names,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:**

You have been provided with a file named ""cadets.csv"" that contains
information about (fake) cadets. Here is a line from the file:



**`Karla Webber, Female, CS-17, 2020`**



  
Each position in the line represents a different ""data element."" Here is a key
for your reference:



  | Name | Gender | Squadron | Class Year  
---|---|---|---|---  
Value | Karla Webber | Female | CS-17 | 2020  
  
** **

Write a Python program that opens the file and prints out the name of each
cadet. For example, if the first three cadets are named Karla Webber, Kelsea
Hood, Nicolle Terry the first three lines of output should be:

    
    
    Karla Webber  
    Kelsea Hood  
    Nicolle Terry

**NOTES:**

  * Your solution should print out the names in the order that they were read from the file.
  * Your solution may print out the same name (e.g., John Smith) multiple times.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:**

You have been provided with a file named ""cadets.csv"" that contains
information about (fake) cadets. Here is a line from the file:



**`Karla Webber, Female, CS-17, 2020`**



  
Each position in the line represents a different ""data element."" Here is a key
for your reference:



  | Name | Gender | Squadron | Class Year  
---|---|---|---|---  
Value | Karla Webber | Female | CS-17 | 2020  
  
** **

Write a Python program that opens the file and prints out the name of each
cadet. For example, if the first three cadets are named Karla Webber, Kelsea
Hood, Nicolle Terry the first three lines of output should be:

    
    
    Karla Webber  
    Kelsea Hood  
    Nicolle Terry

**NOTES:**

  * Your solution should print out the names in the order that they were read from the file.
  * Your solution may print out the same name (e.g., John Smith) multiple times.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
with open(""cadets.csv"", ""r"") as file:
    for line in file:
        cadet_info = line.strip().split("", "")
        print(cadet_info[0])
"
147,a4_3_parks,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a table called `amusement_parks` that contains
information about various amusement parks in the United States. Logically, the
table can be represented as follows:



**Price Per Day** | **Name of Park** | **State**  
---|---|---  
$154.00 | Disneyland | California  
$169.34 | Disney World | Florida  
$79.99 | Great America | California  
$73.00 | Cedar Point | Ohio  
  


Write code that gets 1) the name of the park, 2) the state where the park is
located, and 3) the price of a single day of admission from the user. Your
program should then add a new row to the table containing these values.



HINT:

  * When you are creating your row, make sure you are adding the columns in the correct order!




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a table called `amusement_parks` that contains
information about various amusement parks in the United States. Logically, the
table can be represented as follows:



**Price Per Day** | **Name of Park** | **State**  
---|---|---  
$154.00 | Disneyland | California  
$169.34 | Disney World | Florida  
$79.99 | Great America | California  
$73.00 | Cedar Point | Ohio  
  


Write code that gets 1) the name of the park, 2) the state where the park is
located, and 3) the price of a single day of admission from the user. Your
program should then add a new row to the table containing these values.



HINT:

  * When you are creating your row, make sure you are adding the columns in the correct order!




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pandas as pd

amusement_parks = pd.DataFrame({
    'Price Per Day': ['$154.00', '$169.34', '$79.99', '$73.00'],
    'Name of Park': ['Disneyland', 'Disney World', 'Great America', 'Cedar Point'],
    'State': ['California', 'Florida', 'California', 'Ohio']
})

name_of_park = input(""Enter the name of the park: "")
state = input(""Enter the state where the park is located: "")
price = input(""Enter the price of a single day of admission: "")

new_row = {'Price Per Day': price, 'Name of Park': name_of_park, 'State': state}
amusement_parks = amusement_parks.append(new_row, ignore_index=True)

amusement_parks
"
148,a4_3_new_cars,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a table called `new_cars` that contains
information about various automobiles for sale in the United States.
Logically, the table can be represented as follows:



**Unit Price  ** | **Model Name** | **Make**  
---|---|---  
$26,660 | Bronco | Ford  
$36,340 | 4Runner | Toyota  
$68,199.99 | Q8 | Audi  
$48,475 | Silverado | Chevrolet  
  


Write code that gets 1) Model Name of the car, 2) Make, and 3) the unit price.
Your program should then add a new row to the table containing these values.



HINT:

  * When you are creating your row, make sure you are adding the columns in the correct order!


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a table called `new_cars` that contains
information about various automobiles for sale in the United States.
Logically, the table can be represented as follows:



**Unit Price  ** | **Model Name** | **Make**  
---|---|---  
$26,660 | Bronco | Ford  
$36,340 | 4Runner | Toyota  
$68,199.99 | Q8 | Audi  
$48,475 | Silverado | Chevrolet  
  


Write code that gets 1) Model Name of the car, 2) Make, and 3) the unit price.
Your program should then add a new row to the table containing these values.



HINT:

  * When you are creating your row, make sure you are adding the columns in the correct order!


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pandas as pd

# Define the new row data
new_row = {'Unit Price': '$32,500', 'Model Name': 'Civic', 'Make': 'Honda'}

# Add the new row to the table
new_cars = new_cars.append(new_row, ignore_index=True)

# Print the updated table
new_cars
"
149,a4_3_aircraft,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a table called `usaf_aircraft` that contains
information about various aircraft in the United States Air Force inventory.
Logically, the table can be represented as follows:



**Unit Price in Millions** | **Aircraft Name** | **Manufacturer**  
---|---|---  
$218 | C-17 Globemaster | Boeing  
$14.6 | F-16 Falcon | General Dynamics  
$16.9 | MQ-9 Reaper | General Atomics  
$737 | B-2 Spirit | Northrop Grumman  
  


Write code that gets 1) Name of the Aircraft, 2) Manufacturer, and 3) the unit
price in millions. Your program should then add a new row to the table
containing these values.



HINT:

  * When you are creating your row, make sure you are adding the columns in the correct order!


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a table called `usaf_aircraft` that contains
information about various aircraft in the United States Air Force inventory.
Logically, the table can be represented as follows:



**Unit Price in Millions** | **Aircraft Name** | **Manufacturer**  
---|---|---  
$218 | C-17 Globemaster | Boeing  
$14.6 | F-16 Falcon | General Dynamics  
$16.9 | MQ-9 Reaper | General Atomics  
$737 | B-2 Spirit | Northrop Grumman  
  


Write code that gets 1) Name of the Aircraft, 2) Manufacturer, and 3) the unit
price in millions. Your program should then add a new row to the table
containing these values.



HINT:

  * When you are creating your row, make sure you are adding the columns in the correct order!


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pandas as pd

# Define the new row to be added
new_row = {'Unit Price in Millions': 100, 'Aircraft Name': 'F-22 Raptor', 'Manufacturer': 'Lockheed Martin'}

# Load the existing table into a DataFrame
usaf_aircraft = pd.read_csv('usaf_aircraft.csv')

# Add the new row to the DataFrame
usaf_aircraft = usaf_aircraft.append(new_row, ignore_index=True)

# Save the updated DataFrame back to a new CSV file
usaf_aircraft.to_csv('updated_usaf_aircraft.csv', index=False)
"
150,a4_2_sickness,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Body temperature (in Fahrenheit)
  * Body aches (a string, which will be either ""yes"" or ""no"")
  * Loss of smell (a string, which will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine a person's
risk of having an infectious disease:

  1. If the person's temperature is above 100.4 degrees, print ""High Risk""
  2. If the person is experiencing both body aches and loss of smell, print ""High Risk""
  3. For all other situations, print ""Low Risk""



**EXAMPLE:  
**

  | **Example 1** | **Example 2**  
---|---|---  
Input |

99.0  
yes  
yes  
  

| 100.4  
no  
yes  
Output | High Risk | Low Risk  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Body temperature (in Fahrenheit)
  * Body aches (a string, which will be either ""yes"" or ""no"")
  * Loss of smell (a string, which will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine a person's
risk of having an infectious disease:

  1. If the person's temperature is above 100.4 degrees, print ""High Risk""
  2. If the person is experiencing both body aches and loss of smell, print ""High Risk""
  3. For all other situations, print ""Low Risk""



**EXAMPLE:  
**

  | **Example 1** | **Example 2**  
---|---|---  
Input |

99.0  
yes  
yes  
  

| 100.4  
no  
yes  
Output | High Risk | Low Risk  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
temperature = float(input())
body_aches = input()
loss_of_smell = input()

if temperature > 100.4:
    print(""High Risk"")
elif body_aches == ""yes"" and loss_of_smell == ""yes"":
    print(""High Risk"")
else:
    print(""Low Risk"")
"
151,a4_2_pt,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Outside Temperature (in Fahrenheit)
  * Lightning within 5?(a string, which will be either ""yes"" or ""no"")
  * Winds over 20 knots? (a string, which will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine if PT is
cancelled or a go:

  1. If the outside temperature is above 90 degrees, print ""PT Cancelled""
  2. If there is lightning within 5 or winds over 20 knots print ""PT Cancelled""
  3. For all other situations, print ""PT is a Go""



**EXAMPLE:  
**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
Input |

99.0  
no  
no  
  

| 85  
no  
yes |

85

no

no  
  
Output | PT Cancelled | PT Cancelled | PT is a Go  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Outside Temperature (in Fahrenheit)
  * Lightning within 5?(a string, which will be either ""yes"" or ""no"")
  * Winds over 20 knots? (a string, which will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine if PT is
cancelled or a go:

  1. If the outside temperature is above 90 degrees, print ""PT Cancelled""
  2. If there is lightning within 5 or winds over 20 knots print ""PT Cancelled""
  3. For all other situations, print ""PT is a Go""



**EXAMPLE:  
**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
Input |

99.0  
no  
no  
  

| 85  
no  
yes |

85

no

no  
  
Output | PT Cancelled | PT Cancelled | PT is a Go  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
temperature = float(input())
lightning = input()
winds = input()

if temperature > 90:
    print(""PT Cancelled"")
elif lightning == ""yes"" or winds == ""yes"":
    print(""PT Cancelled"")
else:
    print(""PT is a Go"")
"
152,a4_2_dog,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Outside Temperature (in Fahrenheit)
  * Is it raining? (a string that will be either ""yes"" or ""no"")
  * Is it daytime? (a string that will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine if the dog
is outside:

  1. If the outside temperature is above 85 degrees, print ""Dog Inside""
  2. If it is raining outside print ""Dog Inside""
  3. If it is NOT daytime, print ""Dog Inside""
  4. For all other situations, print ""Dog Outside""



**EXAMPLE:  
**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
Input |

99.0  
no  
yes  
  

| 80  
yes  
yes |

75

no

yes  
  
Output | Dog Inside | Dog Inside | Dog Outside  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Outside Temperature (in Fahrenheit)
  * Is it raining? (a string that will be either ""yes"" or ""no"")
  * Is it daytime? (a string that will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine if the dog
is outside:

  1. If the outside temperature is above 85 degrees, print ""Dog Inside""
  2. If it is raining outside print ""Dog Inside""
  3. If it is NOT daytime, print ""Dog Inside""
  4. For all other situations, print ""Dog Outside""



**EXAMPLE:  
**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
Input |

99.0  
no  
yes  
  

| 80  
yes  
yes |

75

no

yes  
  
Output | Dog Inside | Dog Inside | Dog Outside  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def determine_dog_location():
    outside_temp = float(input(""Outside Temperature (in Fahrenheit): ""))
    raining = input(""Is it raining? (yes/no): "")
    daytime = input(""Is it daytime? (yes/no): "")

    if outside_temp > 85:
        print(""Dog Inside"")
    elif raining == ""yes"":
        print(""Dog Inside"")
    elif daytime == ""no"":
        print(""Dog Inside"")
    else:
        print(""Dog Outside"")

determine_dog_location()
"
153,a4_1_lift,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write a Python function that calculates the lift for an aircraft. You will
name your function `calculate_lift`, and it will have the following parameters
(in this order):

  * Lift coefficient
  * Density
  * Velocity
  * Area

Your function will **return** the lift, which can be computed using the
following equation:



![Principles of Flying](https://www.thaitechnics.com/fly/tg4/lift_equa.gif)



NOTE: You do NOT need to call the function.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write a Python function that calculates the lift for an aircraft. You will
name your function `calculate_lift`, and it will have the following parameters
(in this order):

  * Lift coefficient
  * Density
  * Velocity
  * Area

Your function will **return** the lift, which can be computed using the
following equation:



![Principles of Flying](https://www.thaitechnics.com/fly/tg4/lift_equa.gif)



NOTE: You do NOT need to call the function.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_lift(cl, density, velocity, area):
    lift = 0.5 * cl * density * velocity**2 * area
    return lift
"
154,a4_1_buoyancy,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write a Python function that calculates the buoyancy force for an object. You
will name your function `calculate_buoyancy`, and it will have the following
parameters (in this order):

  * Submerged Volume
  * Density
  * Gravity

Our function will  **return**  the buoyancy force, which can be computed using
the following equation:

**Fb = Vs × D × g **where Fb is the buoyancy force, Vs is the submerged
volume, D is the density of the fluid the object is submerged in, and g is the
force of gravity.

NOTE: You do NOT need to call the function.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write a Python function that calculates the buoyancy force for an object. You
will name your function `calculate_buoyancy`, and it will have the following
parameters (in this order):

  * Submerged Volume
  * Density
  * Gravity

Our function will  **return**  the buoyancy force, which can be computed using
the following equation:

**Fb = Vs × D × g **where Fb is the buoyancy force, Vs is the submerged
volume, D is the density of the fluid the object is submerged in, and g is the
force of gravity.

NOTE: You do NOT need to call the function.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_buoyancy(Vs, D, g):
    return Vs * D * g
"
155,a4_1_area,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write a Python function that calculates the area of a trapazoid. You will name
your function `calculate_area`, and it will have the following parameters (in
this order):

  * Side_A
  * Side_B
  * Height

Our function will  **return**  the area, which can be computed using the
following equation:

A = (a + b) h

NOTE: You do NOT need to call the function.






You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write a Python function that calculates the area of a trapazoid. You will name
your function `calculate_area`, and it will have the following parameters (in
this order):

  * Side_A
  * Side_B
  * Height

Our function will  **return**  the area, which can be computed using the
following equation:

A = (a + b) h

NOTE: You do NOT need to call the function.






 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_area(Side_A, Side_B, Height):
    return (Side_A + Side_B) * Height
"
156,a3_7_minpower,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `powerplants.csv` that contains
information about various power production facilities across the nation. Here
is a typical line from the dataset (each line ends with the newline ""\n""
character):



`-121.8601395, 38.01598436, 19, GWFPW2_1_UNIT 1, SteamTurbine`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:  
  

  | Longitude | Latitude | Power Output (in MW) | Name | Power Generation
Method  
---|---|---|---|---|---  
Value | - **121.8601395** | 38.01598436 | 19 | GWFPW2 _1_ UNIT 1 |
SteamTurbine  
  


Write a Python program that asks the user for:

  * A power generation method (e.g., ""SteamTurbine"")



Your program should then read the file and print on separate lines:

  * The minimum power output for power plants of this particular type, and
  * The names of all power plants that are of this **particular type** , and within 1 MW (inclusive) of the minimum power output



**EXAMPLES:**

  | **Example 1**  
---|---  
Input |

Other  
  
Output | 0.53  
ELNIDS_2_DODPEV  
  





You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `powerplants.csv` that contains
information about various power production facilities across the nation. Here
is a typical line from the dataset (each line ends with the newline ""\n""
character):



`-121.8601395, 38.01598436, 19, GWFPW2_1_UNIT 1, SteamTurbine`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:  
  

  | Longitude | Latitude | Power Output (in MW) | Name | Power Generation
Method  
---|---|---|---|---|---  
Value | - **121.8601395** | 38.01598436 | 19 | GWFPW2 _1_ UNIT 1 |
SteamTurbine  
  


Write a Python program that asks the user for:

  * A power generation method (e.g., ""SteamTurbine"")



Your program should then read the file and print on separate lines:

  * The minimum power output for power plants of this particular type, and
  * The names of all power plants that are of this **particular type** , and within 1 MW (inclusive) of the minimum power output



**EXAMPLES:**

  | **Example 1**  
---|---  
Input |

Other  
  
Output | 0.53  
ELNIDS_2_DODPEV  
  





 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

# Ask the user for the power generation method
power_generation_method = input(""Enter the power generation method: "")

# Initialize variables
min_power_output = float('inf')
power_plants = []

# Open the file and read the data
with open('powerplants.csv', 'r') as file:
    reader = csv.reader(file)
    for row in reader:
        if row[4].strip() == power_generation_method:
            power_output = float(row[2])
            if power_output < min_power_output:
                min_power_output = power_output
            power_plants.append(row[3])

# Print the minimum power output
print(min_power_output)

# Print the names of power plants with power output within 1 MW of the minimum power output
for plant in power_plants:
    if abs(float(row[2]) - min_power_output) <= 1:
        print(plant)
"
157,a3_7_min_lego,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `legos.csv` that contains
information about various Lego sets. Here is a typical line from the dataset
(each line ends with the newline ""\n"" character):



`10197-1,Fire Brigade,2009,City,2236`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:  
  

  | Set Number | Name | Year | Theme | Number of Parts  
---|---|---|---|---|---  
Value | 10197-1 | Fire Brigade | 2009 | City | 2236  
  


Write a Python program that asks the user for:

  * A Theme (e.g., ""City"")



Your program should then read the file and print on separate lines:

  * The minimum number of parts in a set of the given theme, and
  * The names of all Lego sets that are of this **particular theme** , and within 14 (inclusive) of the minimum part count



**EXAMPLES:**

  | **Example 1**  
---|---  
Input |

Duplo  
  
Output |

1  
Zoo friends

Big Front Loader

Baby Calf

Farm Animals

...  
  









You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `legos.csv` that contains
information about various Lego sets. Here is a typical line from the dataset
(each line ends with the newline ""\n"" character):



`10197-1,Fire Brigade,2009,City,2236`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:  
  

  | Set Number | Name | Year | Theme | Number of Parts  
---|---|---|---|---|---  
Value | 10197-1 | Fire Brigade | 2009 | City | 2236  
  


Write a Python program that asks the user for:

  * A Theme (e.g., ""City"")



Your program should then read the file and print on separate lines:

  * The minimum number of parts in a set of the given theme, and
  * The names of all Lego sets that are of this **particular theme** , and within 14 (inclusive) of the minimum part count



**EXAMPLES:**

  | **Example 1**  
---|---  
Input |

Duplo  
  
Output |

1  
Zoo friends

Big Front Loader

Baby Calf

Farm Animals

...  
  









 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

theme = input(""Enter a theme: "")

min_parts = float('inf')
sets = []

with open('legos.csv', 'r') as file:
    csv_reader = csv.reader(file)
    for line in csv_reader:
        if line[3] == theme:
            parts = int(line[4])
            if parts < min_parts:
                min_parts = parts
            sets.append(line[1])

for lego_set in sets:
    parts = int(line[4])
    if parts <= min_parts + 14:
        print(lego_set)

print(min_parts)
"
158,a3_7_maxpower,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `powerplants.csv` that contains
information about various power production facilities across the nation. Here
is a typical line from the dataset (each line ends with the newline ""\n""
character):



`-121.8601395, 38.01598436, 19, GWFPW2_1_UNIT 1, SteamTurbine`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:  
  

  | Longitude | Latitude | Power Output (in MW) | Name | Power Generation
Method  
---|---|---|---|---|---  
Value | - **121.8601395** | 38.01598436 | 19 | GWFPW2 _1_ UNIT 1 |
SteamTurbine  
  


Write a Python program that asks the user for:

  * A power generation method (e.g., ""SteamTurbine"")



Your program should then read the file and print on separate lines:

  * The maximum power output for power plants of this particular type, and
  * The names of all power plants that are of this **particular type** , and within 15 MW (inclusive) of the maximum power output



**EXAMPLES:**

  | **Example 1**  
---|---  
Input |

SteamTurbine  
  
Output | 1164.0  
DIABLO_7_UNIT 1  
DIABLO_7_UNIT 2  
  





You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `powerplants.csv` that contains
information about various power production facilities across the nation. Here
is a typical line from the dataset (each line ends with the newline ""\n""
character):



`-121.8601395, 38.01598436, 19, GWFPW2_1_UNIT 1, SteamTurbine`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:  
  

  | Longitude | Latitude | Power Output (in MW) | Name | Power Generation
Method  
---|---|---|---|---|---  
Value | - **121.8601395** | 38.01598436 | 19 | GWFPW2 _1_ UNIT 1 |
SteamTurbine  
  


Write a Python program that asks the user for:

  * A power generation method (e.g., ""SteamTurbine"")



Your program should then read the file and print on separate lines:

  * The maximum power output for power plants of this particular type, and
  * The names of all power plants that are of this **particular type** , and within 15 MW (inclusive) of the maximum power output



**EXAMPLES:**

  | **Example 1**  
---|---  
Input |

SteamTurbine  
  
Output | 1164.0  
DIABLO_7_UNIT 1  
DIABLO_7_UNIT 2  
  





 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","import csv

def find_powerplants(gen_method):
    max_power = 0
    powerplants = []

    with open('powerplants.csv', 'r') as file:
        reader = csv.reader(file)
        next(reader)  # Skips the header line

        for row in reader:
            if row[4] == gen_method:
                power_output = float(row[2])
                if power_output >= max_power:
                    if power_output > max_power:
                        max_power = power_output
                        powerplants.clear()
                    powerplants.append(row[3])

    print(max_power)
    for powerplant in powerplants:
        print(powerplant)

# Prompt the user for the power generation method
generation_method = input(""Enter the power generation method: "")

# Call the function to find the power plants
find_powerplants(generation_method)"
159,a3_7_max,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `powerplants.csv` that contains
information about various power production facilities across the nation. Here
is a typical line from the dataset (each line ends with the newline ""\n""
character):



`-121.8601395, 38.01598436, 19, GWFPW2_1_UNIT 1, SteamTurbine`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:  
  

  | Longitude | Latitude | Power Output (in MW) | Name | Power Generation
Method  
---|---|---|---|---|---  
Value | - **121.8601395** | 38.01598436 | 19 | GWFPW2 _1_ UNIT 1 |
SteamTurbine  
  


Write a Python program that asks the user for:

  * A power generation method (e.g., ""SteamTurbine"")



Your program should then read the file and print on separate lines:

  * The maximum power output for power plants of this particular type, and
  * The names of all power plants that are of this **particular type** , and within 8 MW (inclusive) of the maximum power output



**EXAMPLES:**

  | **Example 1**  
---|---  
Input |

SteamTurbine  
  
Output | 1164.0  
DIABLO_7_UNIT 1  
DIABLO_7_UNIT 2  
  





You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `powerplants.csv` that contains
information about various power production facilities across the nation. Here
is a typical line from the dataset (each line ends with the newline ""\n""
character):



`-121.8601395, 38.01598436, 19, GWFPW2_1_UNIT 1, SteamTurbine`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:  
  

  | Longitude | Latitude | Power Output (in MW) | Name | Power Generation
Method  
---|---|---|---|---|---  
Value | - **121.8601395** | 38.01598436 | 19 | GWFPW2 _1_ UNIT 1 |
SteamTurbine  
  


Write a Python program that asks the user for:

  * A power generation method (e.g., ""SteamTurbine"")



Your program should then read the file and print on separate lines:

  * The maximum power output for power plants of this particular type, and
  * The names of all power plants that are of this **particular type** , and within 8 MW (inclusive) of the maximum power output



**EXAMPLES:**

  | **Example 1**  
---|---  
Input |

SteamTurbine  
  
Output | 1164.0  
DIABLO_7_UNIT 1  
DIABLO_7_UNIT 2  
  





 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Prompt the user for the power generation method
method = input(""Enter a power generation method: "")

# Read the file
with open('powerplants.csv', 'r') as file:
    # Initialize variables
    max_power = 0
    plants = []
    
    # Loop through each line in the file
    for line in file:
        # Split the line into columns
        columns = line.strip().split(',')
        
        # Get the power generation method and power output
        power_method = columns[4]
        power_output = float(columns[2])
        
        # Check if the power generation method matches the user input
        if power_method == method:
            # Check if the power output is the new maximum
            if power_output > max_power:
                max_power = power_output
            
            # Add the power plant name to the list
            plants.append(columns[3])
    
    # Print the maximum power output
    print(max_power)
    
    # Print the names of the power plants within 8 MW of the maximum power output
    for plant in plants:
        if abs(float(columns[2]) - max_power) <= 8:
            print(plant)
"
160,a3_7_max_lego,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `legos.csv` that contains
information about various Lego sets. Here is a typical line from the dataset
(each line ends with the newline ""\n"" character):



`10197-1,Fire Brigade,2009,City,2236`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:  
  

  | Set Number | Name | Year | Theme | Number of Parts  
---|---|---|---|---|---  
Value | 10197-1 | Fire Brigade | 2009 | City | 2236  
  


Write a Python program that asks the user for:

  * A Theme (e.g., ""City"")



Your program should then read the file and print on separate lines:

  * The maximum number of parts in a set of the given theme, and
  * The names of all Lego sets that are of this **particular theme** , and within 150 (inclusive) of the maximum part count



**EXAMPLES:**

  | **Example 1**  
---|---  
Input |

Duplo  
  
Output |

250

XXL 250 Canister

Giant Tower

Large Creative Box

Around the World

...  
  









You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `legos.csv` that contains
information about various Lego sets. Here is a typical line from the dataset
(each line ends with the newline ""\n"" character):



`10197-1,Fire Brigade,2009,City,2236`



Each position in the line (separated by a comma) represents a different ""data
element,"" or ""column."" The following table shows how the above line can be
interpreted:  
  

  | Set Number | Name | Year | Theme | Number of Parts  
---|---|---|---|---|---  
Value | 10197-1 | Fire Brigade | 2009 | City | 2236  
  


Write a Python program that asks the user for:

  * A Theme (e.g., ""City"")



Your program should then read the file and print on separate lines:

  * The maximum number of parts in a set of the given theme, and
  * The names of all Lego sets that are of this **particular theme** , and within 150 (inclusive) of the maximum part count



**EXAMPLES:**

  | **Example 1**  
---|---  
Input |

Duplo  
  
Output |

250

XXL 250 Canister

Giant Tower

Large Creative Box

Around the World

...  
  









 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

def find_sets(theme):
    with open(""legos.csv"", ""r"") as file:
        legos = list(csv.reader(file))
    theme_sets = [lego for lego in legos if lego[3] == theme]
    max_parts = max(int(lego[4]) for lego in theme_sets)
    max_parts_sets = [lego[1] for lego in theme_sets if int(lego[4]) >= max_parts - 150]
    return max_parts, max_parts_sets

theme = input()
max_parts, max_parts_sets = find_sets(theme)
print(max_parts)
for set_name in max_parts_sets:
    print(set_name)
"
161,a3_6_tests,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes scores of a recent
test given to a class. Write a program that gets from the user the number of
tests scored, and gets that many test scores (which you may assume are whole
numbers) from the user. Your program must print out:

  * The average score of all tests.
  * The count of tests that scored lower than the average.



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
75  
90  
88  
  
  
| 5  
86  
79  
90  
90  
100  
**Output** | 84.3  
1 | 89.0  
2  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes scores of a recent
test given to a class. Write a program that gets from the user the number of
tests scored, and gets that many test scores (which you may assume are whole
numbers) from the user. Your program must print out:

  * The average score of all tests.
  * The count of tests that scored lower than the average.



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
75  
90  
88  
  
  
| 5  
86  
79  
90  
90  
100  
**Output** | 84.3  
1 | 89.0  
2  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# get the number of test scores from the user
num_tests = int(input())

# initialize variables
total_score = 0
scores = []

# get all the test scores from the user and calculate the total score
for _ in range(num_tests):
    score = int(input())
    total_score += score
    scores.append(score)

# calculate the average score
average_score = total_score / num_tests

# count the number of tests that scored lower than the average
lower_than_average = sum(score < average_score for score in scores)

# print the average score and the count of tests that scored lower than the average
print(average_score)
print(lower_than_average)
```

Note: The above solution assumes that the input is valid and in the correct format. It does not include error handling for invalid input."
162,a3_6_sami,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes the cadet wing's
performance on a recent SAMI. Write a program that gets from the user the
number of squadrons scored, and gets that many squadron SAMI scores (which you
may assume are whole numbers) from the user. Your program must print out:

  * The average score of all squadrons.
  * The count of squadrons that scored higher than the average.



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
75  
90  
88  
  
  
| 5  
86  
79  
90  
90  
100  
**Output** | 84.3  
2 | 89.0  
3  
  





You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes the cadet wing's
performance on a recent SAMI. Write a program that gets from the user the
number of squadrons scored, and gets that many squadron SAMI scores (which you
may assume are whole numbers) from the user. Your program must print out:

  * The average score of all squadrons.
  * The count of squadrons that scored higher than the average.



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
75  
90  
88  
  
  
| 5  
86  
79  
90  
90  
100  
**Output** | 84.3  
2 | 89.0  
3  
  





 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def analyze_sami():
    num_squadrons = int(input())
    scores = []
    for _ in range(num_squadrons):
        scores.append(int(input()))
    
    average = sum(scores) / num_squadrons
    count_higher = sum(score > average for score in scores)
    
    print(round(average, 1))
    print(count_higher)
"
163,a3_6_pushups,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes number of pushups done
by a group of cadets. Write a program that gets from the user the number of
people tested, and gets that many pushup scores (which you may assume are
whole numbers) from the user. Your program must print out:

  * The average number of pushups for the group.
  * The count of cadets that scored higher than the average.



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
75  
90  
88  
  
  
| 5  
86  
79  
90  
90  
100  
**Output** | 84.3  
2 | 89.0  
3  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes number of pushups done
by a group of cadets. Write a program that gets from the user the number of
people tested, and gets that many pushup scores (which you may assume are
whole numbers) from the user. Your program must print out:

  * The average number of pushups for the group.
  * The count of cadets that scored higher than the average.



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
75  
90  
88  
  
  
| 5  
86  
79  
90  
90  
100  
**Output** | 84.3  
2 | 89.0  
3  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def analyze_pushups():
    num_people = int(input())
    pushup_scores = []
    total_pushups = 0
    
    for _ in range(num_people):
        score = int(input())
        pushup_scores.append(score)
        total_pushups += score
    
    average_pushups = total_pushups / num_people
    above_average_count = 0
    
    for score in pushup_scores:
        if score > average_pushups:
            above_average_count += 1
    
    print(round(average_pushups, 1))
    print(above_average_count)

analyze_pushups()
"
164,a3_6_missiletest,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes the results acquired
from several missile tests executed last week. Write a program that gets from
the user the number missile tests preformed, and gets the result from each
test (which you may assume are whole numbers) from the user. Your program must
print out:

  * The average result for the missile tests.
  * The count of missile tests that scored above the average.



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
350  
410  
256  
  
  
| 5  
178  
98  
200  
200  
154  
**Output** | 338.7  
2 | 166.0  
3


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes the results acquired
from several missile tests executed last week. Write a program that gets from
the user the number missile tests preformed, and gets the result from each
test (which you may assume are whole numbers) from the user. Your program must
print out:

  * The average result for the missile tests.
  * The count of missile tests that scored above the average.



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
350  
410  
256  
  
  
| 5  
178  
98  
200  
200  
154  
**Output** | 338.7  
2 | 166.0  
3


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def missile_analysis():
    num_tests = int(input())
    test_results = []
    total = 0

    for i in range(num_tests):
        result = int(input())
        test_results.append(result)
        total += result

    average = total / num_tests
    count_above_average = sum(1 for result in test_results if result > average)

    print(""{:.1f}"".format(average))
    print(count_above_average)

missile_analysis()
"
165,a3_6_flighttest,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes the results acquired
from several flight tests executed last week. Write a program that gets from
the user the number flight tests preformed, and gets the result from each
flight (which you may assume are whole numbers) from the user. Your program
must print out:

  * The average result for the flight tests.
  * The count of flight tests that scored below the average.



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
350  
410  
256  
  
  
| 5  
178  
98  
200  
200  
154  
**Output** | 338.7  
1 | 166.0  
2


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes the results acquired
from several flight tests executed last week. Write a program that gets from
the user the number flight tests preformed, and gets the result from each
flight (which you may assume are whole numbers) from the user. Your program
must print out:

  * The average result for the flight tests.
  * The count of flight tests that scored below the average.



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
350  
410  
256  
  
  
| 5  
178  
98  
200  
200  
154  
**Output** | 338.7  
1 | 166.0  
2


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def flight_test_analysis():
    num_tests = int(input(""Enter the number of flight tests: ""))
    results = []
    for i in range(num_tests):
        result = int(input(""Enter the result for flight test {}: "".format(i+1)))
        results.append(result)
    average = sum(results) / num_tests
    below_average = sum(1 for result in results if result < average)
    print(""Average result:"", average)
    print(""Number of flight tests below average:"", below_average)

flight_test_analysis()
"
166,a3_5_star_map,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a table that describes a simple night sky. In
this code, a list (`simple_map`) is populated with characters representing the
location of various astronomical entities (stars, planets, etc).



    
    
    S = Star; St = Satellite; M = Moon; P = Planet; C = Comet; _ = No Major Feature



Write a program that gets two values from the user in the following order:

1) a row, a 1 indicates the Top row and 8 the Bottom row

2) a column, a 1 indicates the Leftmost column and 8 the Rightmost column



Finally, **Print** out the contents of the table at that particular cell.



**HINT:**

  * Your output should be one of the following letters: ""S"", ""St"", ""M"", ""P"", ""C"", or ""_""


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a table that describes a simple night sky. In
this code, a list (`simple_map`) is populated with characters representing the
location of various astronomical entities (stars, planets, etc).



    
    
    S = Star; St = Satellite; M = Moon; P = Planet; C = Comet; _ = No Major Feature



Write a program that gets two values from the user in the following order:

1) a row, a 1 indicates the Top row and 8 the Bottom row

2) a column, a 1 indicates the Leftmost column and 8 the Rightmost column



Finally, **Print** out the contents of the table at that particular cell.



**HINT:**

  * Your output should be one of the following letters: ""S"", ""St"", ""M"", ""P"", ""C"", or ""_""


 
Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 5
# --------------------------------------------------------------
#DO NOT TOUCH THIS LIST!
star_map = [['M', 'C', '_', '_', '_', '_', 'M', 'P'],
              ['S', 'M', '_', '_', 'P', 'M', 'St', 'St'],
              ['C', '_', '_', 'P', 'M', 'M', 'S', 'M'],
              ['C', 'C', '_', 'C', '_', 'S', '_', 'P'],
              ['M', 'St', '_', 'St', '_', '_', 'P', 'S'],
              ['_', '_', '_', '_', '_', '_', '_', '_'],
              ['_', 'M', '_', '_', 'M', '_', '_', 'S'],
              ['_', '_', '_', '_', 'St', 'St', 'P', 'P']]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","# Answer:

"
167,a3_5_map,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a table that describes a simple landscape. In
this code, a list (`simple_map`) is populated with characters representing the
location of various landmarks (Road, Water, Trees, Stones, Mud).



    
    
    R = Road; W = Water; T = Trees; S = Stones; M = Mud; _ = Grass



Write a program that gets two values from the user in the following order:

1) a row, a 1 indicates the Top row and 8 the Bottom row

2) a column, a 1 indicates the Leftmost column and 8 the Rightmost column



Finally,  **Print  **out the contents of the table at that particular cell.



**HINT:**

  * Your output should be one of the following letters: ""R"", ""W"", ""T"", ""S"", ""M"", or ""_""


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a table that describes a simple landscape. In
this code, a list (`simple_map`) is populated with characters representing the
location of various landmarks (Road, Water, Trees, Stones, Mud).



    
    
    R = Road; W = Water; T = Trees; S = Stones; M = Mud; _ = Grass



Write a program that gets two values from the user in the following order:

1) a row, a 1 indicates the Top row and 8 the Bottom row

2) a column, a 1 indicates the Leftmost column and 8 the Rightmost column



Finally,  **Print  **out the contents of the table at that particular cell.



**HINT:**

  * Your output should be one of the following letters: ""R"", ""W"", ""T"", ""S"", ""M"", or ""_""


 
Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 5
# --------------------------------------------------------------
#DO NOT TOUCH THIS LIST!
simple_map = [['_', 'T', '_', '_', '_', 'R', '_', '_'],
                    ['_', '_', 'T', 'S', 'B', 'R', '_', '_'],
                    ['W', '_', '_', '_', '_', '_', 'R', '_'],
                    ['W', 'W', 'S', '_', '_', 'B', '_', '_'],
                    ['W', '_', '_', 'S', '_', '_', 'B', 'R'],
                    ['_', '_', '_', '_', '_', 'T', '_', '_'],
                    ['_', '_', '_', '_', '_', '_', 'T', '_'],
                    ['R', 'R', 'R', 'R', 'R', '_', '_', '_']]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","#Your code goes here.
row = int(input(""Enter the row (1-8): ""))
column = int(input(""Enter the column (1-8): ""))

cell_contents = simple_map[row-1][column-1]
print(cell_contents)"
168,a3_5_chess,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a table that describes a chess board. In this
code, a list (`chess_board`) is populated with characters representing the
location of each of the pieces(Rook, Knight, Bishop,King,Queen,Pawn).



    
    
    R = Rook; N = Knight; B = Bishop; K = King; Q = Queen; P = pawn; _ = Empty



Write a program that gets two values from the user in the following order:

1) a row, a 1 indicates the Top row and 8 the Bottom row

2) a column, a 1 indicates the Leftmost column and 8 the Rightmost column



Finally,  **Print  **out the contents of the table at that particular cell.



**HINT:**

  * Your output should be one of the following letters: ""R"", ""N"", ""B"", ""K"", ""Q"", ""P"", or ""_""


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a table that describes a chess board. In this
code, a list (`chess_board`) is populated with characters representing the
location of each of the pieces(Rook, Knight, Bishop,King,Queen,Pawn).



    
    
    R = Rook; N = Knight; B = Bishop; K = King; Q = Queen; P = pawn; _ = Empty



Write a program that gets two values from the user in the following order:

1) a row, a 1 indicates the Top row and 8 the Bottom row

2) a column, a 1 indicates the Leftmost column and 8 the Rightmost column



Finally,  **Print  **out the contents of the table at that particular cell.



**HINT:**

  * Your output should be one of the following letters: ""R"", ""N"", ""B"", ""K"", ""Q"", ""P"", or ""_""


 
Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 5
# --------------------------------------------------------------
#DO NOT TOUCH THIS LIST!
chess_board =      [['R', 'N', '_', 'K', '_', 'B', 'N', 'R'],
                    ['p', 'p', 'p', '_', 'p', 'p', 'p', 'p'],
                    ['_', '_', 'Q', '_', '_', '_', '_', '_'],
                    ['_', '_', '_', 'p', '_', 'B', '_', '_'],
                    ['_', '_', '_', 'p', '_', '_', '_', '_'],
                    ['_', '_', '_', '_', 'p', '_', '_', '_'],
                    ['p', 'p', 'p', '_', '_', 'p', 'p', 'p'],
                    ['R', 'N', 'B', 'K', 'Q', 'B', 'N', 'R']]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","# Solution
"
169,a3_5_carnival,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a table that describes a simple carnival ring
toss. In this code, a list (`simple_map`) is populated with characters
representing the colors of the bottles.



    
    
    G = Green; B = Blue; P = Purple; R = Red; O = Orange; _ = Clear



Write a program that gets two values from the user in the following order:

1) a row, a 1 indicates the Top row and 8 the Bottom row

2) a column, a 1 indicates the Leftmost column and 8 the Rightmost column



Finally,  **Print  **out the contents of the table at that particular cell.



**HINT:**

  * Your output should be one of the following letters: ""G"", ""B"", ""P"", ""R"", ""O"", or ""_""


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a table that describes a simple carnival ring
toss. In this code, a list (`simple_map`) is populated with characters
representing the colors of the bottles.



    
    
    G = Green; B = Blue; P = Purple; R = Red; O = Orange; _ = Clear



Write a program that gets two values from the user in the following order:

1) a row, a 1 indicates the Top row and 8 the Bottom row

2) a column, a 1 indicates the Leftmost column and 8 the Rightmost column



Finally,  **Print  **out the contents of the table at that particular cell.



**HINT:**

  * Your output should be one of the following letters: ""G"", ""B"", ""P"", ""R"", ""O"", or ""_""


 
Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 5
# --------------------------------------------------------------
#DO NOT TOUCH THIS LIST!
simple_map = [['O', '_', '_', 'P', '_', 'R', '_', 'G'],
              ['R', 'O', '_', '_', '_', 'P', '_', '_'],
              ['_', '_', 'O', '_', '_', 'O', 'P', '_'],
              ['R', '_', 'G', '_', '_', '_', '_', 'P'],
              ['B', '_', '_', '_', '_', '_', '_', 'P'],
              ['G', 'R', 'P', 'O', 'O', '_', '_', 'G'],
              ['P', '_', '_', '_', '_', 'G', 'B', '_'],
              ['B', 'R', 'G', 'B', '_', 'G', 'B', 'G']]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
row = int(input())
column = int(input())

print(simple_map[row-1][column-1])
"
170,a3_5_battleship,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a table that describes the board game,
Battleship. In this code, a list (`battleship_board`) is populated with
characters representing the location of each of the game's ship types
(Carrier, Battleship, Submarine, Cruiser, and Destroyer).



    
    
    C = Carrier; B = Battleship; S = Submarine; R = Cruiser; D = Destroyer; _ = Blank



Write a program that gets two values from the user in the following order:

1) a row, a 1 indicates the Top row and 8 the Bottom row

2) a column, a 1 indicates the Leftmost column and 8 the Rightmost column



Finally,  **Print  **out the contents of the table at that particular cell.



**HINT:**

  * Your output should be one of the following letters: ""C"", ""B"", ""S"", ""R"", ""D"", or ""_""


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a table that describes the board game,
Battleship. In this code, a list (`battleship_board`) is populated with
characters representing the location of each of the game's ship types
(Carrier, Battleship, Submarine, Cruiser, and Destroyer).



    
    
    C = Carrier; B = Battleship; S = Submarine; R = Cruiser; D = Destroyer; _ = Blank



Write a program that gets two values from the user in the following order:

1) a row, a 1 indicates the Top row and 8 the Bottom row

2) a column, a 1 indicates the Leftmost column and 8 the Rightmost column



Finally,  **Print  **out the contents of the table at that particular cell.



**HINT:**

  * Your output should be one of the following letters: ""C"", ""B"", ""S"", ""R"", ""D"", or ""_""


 
Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 5
# --------------------------------------------------------------
#DO NOT TOUCH THIS LIST!
battleship_board = [['_', '_', 'C', '_', '_', '_', '_', '_'],
                    ['_', '_', 'C', 'S', 'S', 'S', '_', '_'],
                    ['D', 'D', 'C', '_', '_', '_', '_', '_'],
                    ['_', '_', 'C', '_', '_', '_', '_', '_'],
                    ['_', '_', '_', '_', '_', 'R', 'R', 'R'],
                    ['_', '_', '_', '_', '_', '_', '_', '_'],
                    ['_', '_', '_', '_', '_', '_', '_', '_'],
                    ['_', 'B', 'B', 'B', 'B', '_', '_', '_']]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
row = int(input())
column = int(input())

cell_contents = battleship_board[row - 1][column -1]
print(cell_contents)
"
171,a3_4_weights,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_weights. Write a program
that prints out the range ( _i.e.,  _the difference between the max and min
weight)



**EXAMPLE:  
** If, for example, the list contained the values: 103, 110, 115

Your program should print:

    
    
    12




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_weights. Write a program
that prints out the range ( _i.e.,  _the difference between the max and min
weight)



**EXAMPLE:  
** If, for example, the list contained the values: 103, 110, 115

Your program should print:

    
    
    12




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def find_weight_range(list_of_weights):
    return max(list_of_weights) - min(list_of_weights)

list_of_weights = [103, 110, 115]
print(find_weight_range(list_of_weights))
"
172,a3_4_run,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_run_times. Write a
program that prints out the range ( _i.e.,  _the difference between the max
and min run time)



**EXAMPLE:  
** If, for example, the list contained the values: 3, 10, 15

Your program should print:

    
    
    12




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_run_times. Write a
program that prints out the range ( _i.e.,  _the difference between the max
and min run time)



**EXAMPLE:  
** If, for example, the list contained the values: 3, 10, 15

Your program should print:

    
    
    12




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_run_times = [3, 10, 15]
range_of_run_times = max(list_of_run_times) - min(list_of_run_times)
print(range_of_run_times)
"
173,a3_4_ptscores,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_pt_scores. Write a
program that prints out the range ( _i.e.,  _the difference between the max
and min pt scores)



**EXAMPLE:  
** If, for example, the list contained the values: 3, 10, 15

Your program should print:

    
    
    12




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_pt_scores. Write a
program that prints out the range ( _i.e.,  _the difference between the max
and min pt scores)



**EXAMPLE:  
** If, for example, the list contained the values: 3, 10, 15

Your program should print:

    
    
    12




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def find_range(list_of_pt_scores):
    return max(list_of_pt_scores) - min(list_of_pt_scores)
"
174,a3_4_ages,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_ages. Write a program
that prints out the range ( _i.e.,  _the difference between the max and min
ages)



**EXAMPLE:  
** If, for example, the list contained the values: 50, 64, 72

Your program should print:

    
    
    22




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_ages. Write a program
that prints out the range ( _i.e.,  _the difference between the max and min
ages)



**EXAMPLE:  
** If, for example, the list contained the values: 50, 64, 72

Your program should print:

    
    
    22




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_ages = [50, 64, 72]

min_age = min(list_of_ages)
max_age = max(list_of_ages)

range_of_ages = max_age - min_age

print(range_of_ages)
"
175,a3_3_ships,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_ship_classes`. Write a
program that prints out each of the items in this list (one item per line).



**EXAMPLE:  
** If, for example, the list contained the items: ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task. 




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_ship_classes`. Write a
program that prints out each of the items in this list (one item per line).



**EXAMPLE:  
** If, for example, the list contained the items: ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task. 




 
Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_ship_classes = ['Ford', 'Ticonderoga', 'Arleigh Burke', 'Virginia', 'Zumwalt', 'REDACTED_NAME', 'Legend']

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_ship_classes = ['Ford', 'Ticonderoga', 'Arleigh Burke', 'Virginia', 'Zumwalt', 'REDACTED_NAME', 'Legend']

#Your code goes here.
for ship_class in list_of_ship_classes:
    print(ship_class)
"
176,a3_3_pizza,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_pizza_toppings`. Write a
program that prints out each of the items in this list (one item per line).



**EXAMPLE:  
** If, for example, the list contained the items: ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task. 


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_pizza_toppings`. Write a
program that prints out each of the items in this list (one item per line).



**EXAMPLE:  
** If, for example, the list contained the items: ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task. 


 
Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_pizza_toppings = ['Pepporoni', 'Sausage', 'Onion', 'Mushroom', 'Peppers', 'Chicken', 'Hamburger']

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_pizza_toppings = ['Pepporoni', 'Sausage', 'Onion', 'Mushroom', 'Peppers', 'Chicken', 'Hamburger']

# Your code goes here.
for topping in list_of_pizza_toppings:
    print(topping)"
177,a3_3_aircraft,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_aircraft_classes`. Write
a program that prints out each of the items in this list (one item per line).



**EXAMPLE:  
** If, for example, the list contained the items: ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task. 


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_aircraft_classes`. Write
a program that prints out each of the items in this list (one item per line).



**EXAMPLE:  
** If, for example, the list contained the items: ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task. 


 
Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_aircraft_classes = ['Attack','Cargo','Drone', 'Fighter', 'Unmanned','Trainer','Tanker']

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_aircraft_classes = ['Attack','Cargo','Drone', 'Fighter', 'Unmanned','Trainer','Tanker']

#Your code goes here.
for aircraft_class in list_of_aircraft_classes:
    print(aircraft_class)"
178,a3_2_jets,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_aircraft`. Write a program
that gets two aircraft designator names from the user. Then append the
aircraft (in the same order they were provided) to the list.



**NOTE:**

  * Do not touch the code we provide you. Otherwise, the test cases will not work.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_aircraft`. Write a program
that gets two aircraft designator names from the user. Then append the
aircraft (in the same order they were provided) to the list.



**NOTE:**

  * Do not touch the code we provide you. Otherwise, the test cases will not work.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_aircraft = [""F16"", ""F15"", ""F35"", ""F22""]
aircraft1 = input(""Enter aircraft designator 1: "")
aircraft2 = input(""Enter aircraft designator 2: "")
list_of_aircraft.append(aircraft1)
list_of_aircraft.append(aircraft2)
"
179,a3_2_grammys,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a list called `grammy_list`. Write a program that
gets two new Grammy awards categories from the user. Then append the
categories (in the same order they were provided) to the list.



**NOTE:**

  * Do not touch the code we provide you. Otherwise, the test cases will not work.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a list called `grammy_list`. Write a program that
gets two new Grammy awards categories from the user. Then append the
categories (in the same order they were provided) to the list.



**NOTE:**

  * Do not touch the code we provide you. Otherwise, the test cases will not work.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
grammy_list = ['Album of the Year', 'Record of the Year', 'Song of the Year']

category1 = input(""Enter category 1: "")
category2 = input(""Enter category 2: "")

grammy_list.append(category1)
grammy_list.append(category2)

print(grammy_list)
"
180,a3_2_departments,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a list called `department_list`. Write a program
that gets two new departments from the user. Then append the departments (in
the same order they were provided) to the list.



**NOTE:**

  * Do not touch the code we provide you. Otherwise, the test cases will not work.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a list called `department_list`. Write a program
that gets two new departments from the user. Then append the departments (in
the same order they were provided) to the list.



**NOTE:**

  * Do not touch the code we provide you. Otherwise, the test cases will not work.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
department_list = [""Mathematics"", ""Computer Science"", ""Physics""]

# get two new departments from the user
department1 = input(""Please enter the first department: "")
department2 = input(""Please enter the second department: "")

# append the new departments to the list
department_list.append(department1)
department_list.append(department2)

department_list
"
181,a3_2_cities,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_cities`. Write a program
that gets two new cities from the user. Then append the cities (in the same
order they were provided) to the list.



**NOTE:**

  * Do not touch the code we provide you. Otherwise, the test cases will not work.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_cities`. Write a program
that gets two new cities from the user. Then append the cities (in the same
order they were provided) to the list.



**NOTE:**

  * Do not touch the code we provide you. Otherwise, the test cases will not work.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# get input from the user
city1 = input(""Enter the first city: "")
city2 = input(""Enter the second city: "")

# append the cities to the list
list_of_cities.append(city1)
list_of_cities.append(city2)
"
182,a3_2_cars,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_cars`. Write a program that
gets two new cars from the user. Then append the cars (in the same order they
were provided) to the list.



**NOTE:**

  * Do not touch the code we provide you. Otherwise, the test cases will not work.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_cars`. Write a program that
gets two new cars from the user. Then append the cars (in the same order they
were provided) to the list.



**NOTE:**

  * Do not touch the code we provide you. Otherwise, the test cases will not work.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_cars = [""Toyota"", ""Honda"", ""Ford""]

car1 = input(""Enter the first car: "")
car2 = input(""Enter the second car: "")

list_of_cars.append(car1)
list_of_cars.append(car2)

print(list_of_cars)
"
183,a3_1_medals,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_medals` that contains the
current Air Force and Space Force approved decorations. Write a program that
prints a single, specified decoration from the list. Your program shall take a
number via user input used to identify which decoration to print. For example,
if the user types a 3, you should print out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_medals` that contains the
current Air Force and Space Force approved decorations. Write a program that
prints a single, specified decoration from the list. Your program shall take a
number via user input used to identify which decoration to print. For example,
if the user types a 3, you should print out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_medals = [""Medal of Honor"", ""Airman's Medal"", ""Aerial Achievement Medal"", ""Distinguished Flying Cross"", ""Air Force Cross"", ""Silver Star""]
number = int(input())
print(list_of_medals[number - 1])
"
184,a3_1_countries,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_coalition_countries`. Write
a program that prints a single, specified country from the list. Your program
shall take a number via user input used to identify which country to print.
For example, if the user types a 3, you should print out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_coalition_countries`. Write
a program that prints a single, specified country from the list. Your program
shall take a number via user input used to identify which country to print.
For example, if the user types a 3, you should print out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","list_of_coalition_countries = [""USA"", ""UK"", ""Australia"", ""Canada"", ""Germany"", ""France""]

index = int(input())
print(list_of_coalition_countries[index])"
185,a3_1_commands,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_usaf_commands`. Write a
program that prints a single, specified command organization from the list.
Your program shall take a number via user input used to identify which command
organization to print. For example, if the user types a 3, you should print
out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_usaf_commands`. Write a
program that prints a single, specified command organization from the list.
Your program shall take a number via user input used to identify which command
organization to print. For example, if the user types a 3, you should print
out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_usaf_commands = [""Command 1"", ""Command 2"", ""Command 3"", ""Command 4"", ""Command 5""]
command_number = int(input(""Enter the command number: ""))
print(list_of_usaf_commands[command_number - 1])
"
186,a3_1_afbs,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_bases`. Write a program
that prints a single, specified base from the list. Your program shall take a
number via user input used to identify which base to print. For example, if
the user types a 3, you should print out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_bases`. Write a program
that prints a single, specified base from the list. Your program shall take a
number via user input used to identify which base to print. For example, if
the user types a 3, you should print out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_bases = [1, 2, 3, 4, 5]

index = int(input(""Enter the index of the base you want to print: ""))
print(list_of_bases[index-1])
"
187,a2_7_lowest_spec_attack,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The value of lowest Special Attack from a Pokemon with the matching type
  * The name of the Pokemon with the lowest value of Special Attack. In the event of a tie, print out the name of the FIRST Pokemon that matches.



**EXAMPLE:  
** If, for example, the Dark Pokemon with the lowest Special Attack is Scrafty
(with Special Attack of 115.0), your program should print out:

    
    
    115.0  
    Scrafty



NOTE: The above answer is purely hypothetical. Your answer will be different.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The value of lowest Special Attack from a Pokemon with the matching type
  * The name of the Pokemon with the lowest value of Special Attack. In the event of a tie, print out the name of the FIRST Pokemon that matches.



**EXAMPLE:  
** If, for example, the Dark Pokemon with the lowest Special Attack is Scrafty
(with Special Attack of 115.0), your program should print out:

    
    
    115.0  
    Scrafty



NOTE: The above answer is purely hypothetical. Your answer will be different.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def find_lowest_special_attack(pokemon_type):
    lowest_attack = float('inf')
    lowest_name = """"
    with open(""pokemon_data.txt"", ""r"") as file:
        for line in file:
            data = line.strip().split("", "")
            if data[2] == pokemon_type:
                special_attack = float(data[6])
                if special_attack < lowest_attack:
                    lowest_attack = special_attack
                    lowest_name = data[1]
    return lowest_attack, lowest_name

pokemon_type = input(""Enter the Pokemon Type: "")
lowest_attack, lowest_name = find_lowest_special_attack(pokemon_type)
print(lowest_attack)
print(lowest_name)
"
188,a2_7_lowest_defense,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric"")



Your program should then analyze the file and print:

  * The lowest defensive rating from a Pokemon with the matching type
  * The name of the Pokemon with the lowest defensive rating. In the event of a tie, print out the name of the FIRST Pokemon with the lowest defensive value.



**EXAMPLE:  
** If, for example, the Poison Pokemon with the lowest defense rating is Zubat
(with an defensive of 35.0), your program should print out:

    
    
    35.0  
    Zubat



NOTE: The above answer is purely hypothetical. Your answer will be different.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric"")



Your program should then analyze the file and print:

  * The lowest defensive rating from a Pokemon with the matching type
  * The name of the Pokemon with the lowest defensive rating. In the event of a tie, print out the name of the FIRST Pokemon with the lowest defensive value.



**EXAMPLE:  
** If, for example, the Poison Pokemon with the lowest defense rating is Zubat
(with an defensive of 35.0), your program should print out:

    
    
    35.0  
    Zubat



NOTE: The above answer is purely hypothetical. Your answer will be different.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def find_lowest_defense(pokemon_type):
    lowest_defense = float('inf')
    lowest_defense_name = """"
    with open(""pokemon.csv"", ""r"") as file:
        for line in file:
            data = line.strip().split("","")
            if data[2] == pokemon_type:
                defense = float(data[6])
                if defense < lowest_defense:
                    lowest_defense = defense
                    lowest_defense_name = data[1]
    return lowest_defense, lowest_defense_name

pokemon_type = input(""Enter a Pokemon type: "")
lowest_defense, lowest_defense_name = find_lowest_defense(pokemon_type)
print(lowest_defense)
print(lowest_defense_name)
"
189,a2_7_highest_hp,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The highest Hit Points from a Pokemon with the matching type
  * The name of the Pokemon with the highest value of Hit Points. In the event of a tie, print out the name of the FIRST Pokemon that matches.



**EXAMPLE:  
** If, for example, the Ice Pokemon with the highest Hit Points is Froslass
(with Hit Points of 70.0), your program should print out:

    
    
    70.0  
    Frosless



NOTE: The above answer is purely hypothetical. Your answer will be different.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The highest Hit Points from a Pokemon with the matching type
  * The name of the Pokemon with the highest value of Hit Points. In the event of a tie, print out the name of the FIRST Pokemon that matches.



**EXAMPLE:  
** If, for example, the Ice Pokemon with the highest Hit Points is Froslass
(with Hit Points of 70.0), your program should print out:

    
    
    70.0  
    Frosless



NOTE: The above answer is purely hypothetical. Your answer will be different.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
pokemon_type = input(""Enter a Pokemon Type: "")

highest_hp = 0
pokemon_with_highest_hp = """"

with open(""pokemon_data.txt"", ""r"") as f:
    for line in f:
        data = line.strip().split("", "")
        if data[2] == pokemon_type:
            hp = float(data[3])
            if hp > highest_hp:
                highest_hp = hp
                pokemon_with_highest_hp = data[1]

print(highest_hp)
print(pokemon_with_highest_hp)
"
190,a2_7_fastest,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The highest speed from a Pokemon with the matching type
  * The name of the Pokemon with the fastest speed. In the event of a tie, print out the name of the FIRST Pokemon that matches.



**EXAMPLE:  
** If, for example, the fastest Bug Pokemon is Accelgor (with a speed of
145.0), your program should print out:

    
    
    145.0  
    Accelgor



NOTE: The above answer is purely hypothetical. Your answer will be different.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The highest speed from a Pokemon with the matching type
  * The name of the Pokemon with the fastest speed. In the event of a tie, print out the name of the FIRST Pokemon that matches.



**EXAMPLE:  
** If, for example, the fastest Bug Pokemon is Accelgor (with a speed of
145.0), your program should print out:

    
    
    145.0  
    Accelgor



NOTE: The above answer is purely hypothetical. Your answer will be different.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def find_fastest_pokemon(pokemon_type):
    highest_speed = 0.0
    fastest_pokemon = """"

    with open(""pokemon_data.csv"", ""r"") as file:
        for line in file:
            pokemon_data = line.strip().split("","")
            if pokemon_data[2] == pokemon_type:
                if float(pokemon_data[8]) > highest_speed:
                    highest_speed = float(pokemon_data[8])
                    fastest_pokemon = pokemon_data[1]

    return highest_speed, fastest_pokemon


pokemon_type = input(""Enter a Pokemon Type: "")
highest_speed, fastest_pokemon = find_fastest_pokemon(pokemon_type)
print(highest_speed)
print(fastest_pokemon)
"
191,a2_7_attack,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The highest attack rating from a Pokemon with the matching type
  * The name of the Pokemon with the highest attack rating. In the event of a tie, print out the name of the FIRST Pokemon with the highest attack value.



**EXAMPLE:  
** If, for example, the Electric Pokemon with the highest attack rating is
Raichu (with an attack of 90.0), your program should print out:

    
    
    90.0  
    Raichu



NOTE: The above answer is purely hypothetical. Your answer will be different.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The highest attack rating from a Pokemon with the matching type
  * The name of the Pokemon with the highest attack rating. In the event of a tie, print out the name of the FIRST Pokemon with the highest attack value.



**EXAMPLE:  
** If, for example, the Electric Pokemon with the highest attack rating is
Raichu (with an attack of 90.0), your program should print out:

    
    
    90.0  
    Raichu



NOTE: The above answer is purely hypothetical. Your answer will be different.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
type = input(""Enter a Pokemon Type: "")

max_attack = -1
max_name = """"

with open(""pokemon.csv"") as file:
    next(file) # skip the header line
    for line in file:
        data = line.strip().split("", "")
        pokemon_type = data[2]
        attack = float(data[4])
        if pokemon_type == type and attack > max_attack:
            max_attack = attack
            max_name = data[1]

print(max_attack)
print(max_name)
"
192,a2_6_virus,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You are writing a program that will help you decide if there are too many
people at a restaurant for you to dine safely. Your program will ask for the
number of people in the restaurant. It will then ask for the distance between
yourself and each of the people (in feet, which do not have to be whole
numbers). Your program will keep track of how many people are within 6 feet of
you (inclusive). Your program will then print one of the following statements:

**# of People within 6 Feet** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | All Clear | Warning | Find Another Place  
  


**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** | 3  
5.7  
10.2  
12.4 | 2  
7.0  
15.1  
**OUTPUT** | Warning | All Clear


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You are writing a program that will help you decide if there are too many
people at a restaurant for you to dine safely. Your program will ask for the
number of people in the restaurant. It will then ask for the distance between
yourself and each of the people (in feet, which do not have to be whole
numbers). Your program will keep track of how many people are within 6 feet of
you (inclusive). Your program will then print one of the following statements:

**# of People within 6 Feet** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | All Clear | Warning | Find Another Place  
  


**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** | 3  
5.7  
10.2  
12.4 | 2  
7.0  
15.1  
**OUTPUT** | Warning | All Clear


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def check_restaurant_safety():
    num_people = int(input(""Enter the number of people in the restaurant: ""))
    distances = []
    
    for i in range(num_people):
        distance = float(input(""Enter the distance between yourself and person "" + str(i+1) + "": ""))
        distances.append(distance)
    
    count = 0
    for distance in distances:
        if distance <= 6:
            count += 1
    
    if count == 0:
        print(""All Clear"")
    elif count <= 2:
        print(""Warning"")
    else:
        print(""Find Another Place"")"
193,a2_6_traffic_lights,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

The City Manager is having a traffic problem and asked you are to write a
program that will determine whether or not to activate a newly installed
alternate traffic light schedule to help alleviate traffic throughout the city
during peak traffic hours. Your program will ask for the number of traffic
""time periods"" to analyze. It will then ask for the traffic throughput (in
average number of cars per minute, which does not have to be a whole number)
for each ""time period"". Your program will keep track of how many ""time
periods"" are considered heavy traffic, as defined as 15 cars per minutes or
more (inclusive). Your program will then print one of the following
statements:

**# of ""time periods"" of heavy traffic** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | Regular Schedule | Prepare Activation | Activate New Schedule  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

12.8

15.0

6.7

|

3

17.3

15.1

19.2  
  
**OUTPUT** | Prepare Activation | Activate New Schedule


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

The City Manager is having a traffic problem and asked you are to write a
program that will determine whether or not to activate a newly installed
alternate traffic light schedule to help alleviate traffic throughout the city
during peak traffic hours. Your program will ask for the number of traffic
""time periods"" to analyze. It will then ask for the traffic throughput (in
average number of cars per minute, which does not have to be a whole number)
for each ""time period"". Your program will keep track of how many ""time
periods"" are considered heavy traffic, as defined as 15 cars per minutes or
more (inclusive). Your program will then print one of the following
statements:

**# of ""time periods"" of heavy traffic** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | Regular Schedule | Prepare Activation | Activate New Schedule  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

12.8

15.0

6.7

|

3

17.3

15.1

19.2  
  
**OUTPUT** | Prepare Activation | Activate New Schedule


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def determine_schedule():
    n = int(input())
    heavy_traffic_count = 0
    for _ in range(n):
        throughput = float(input())
        if throughput >= 15.0:
            heavy_traffic_count += 1
    if heavy_traffic_count == 0:
        print(""Regular Schedule"")
    elif heavy_traffic_count <= 2:
        print(""Prepare Activation"")
    else:
        print(""Activate New Schedule"")
        
determine_schedule()
"
194,a2_6_network_traffic,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

The 10th Communications Squadron (10 CS) recently detected a higher volume of
network traffic on the base network. The 10 CS Director of Operations asked
you are to write a program that will determine whether or not to activate an
additional Network Load Balancer (NLB) to improve the network performance
during these peak loads. Your program will ask for the number of network
traffic ""snapshots"" to analyze. It will then ask for the network load (in
Gigabits per second (Gbps), which does not have to be a whole number) for each
""snapshot"". Your program will keep track of how many ""snapshots"" are
designated as high volume network traffic, defined as loads greater than 512
Gbps. Your program will then print one of the following statements:

**# of ""snapshots"" with high network traffic volume** | **0** | **1-2** | **>
2**  
---|---|---|---  
**Output** | Ops Normal | Initialize NLB | Activate NLB  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

512.0

738.5

199.6

|

3

498.6

372.9

512.0  
  
**OUTPUT** | Initialize NLB | Ops Normal


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

The 10th Communications Squadron (10 CS) recently detected a higher volume of
network traffic on the base network. The 10 CS Director of Operations asked
you are to write a program that will determine whether or not to activate an
additional Network Load Balancer (NLB) to improve the network performance
during these peak loads. Your program will ask for the number of network
traffic ""snapshots"" to analyze. It will then ask for the network load (in
Gigabits per second (Gbps), which does not have to be a whole number) for each
""snapshot"". Your program will keep track of how many ""snapshots"" are
designated as high volume network traffic, defined as loads greater than 512
Gbps. Your program will then print one of the following statements:

**# of ""snapshots"" with high network traffic volume** | **0** | **1-2** | **>
2**  
---|---|---|---  
**Output** | Ops Normal | Initialize NLB | Activate NLB  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

512.0

738.5

199.6

|

3

498.6

372.9

512.0  
  
**OUTPUT** | Initialize NLB | Ops Normal


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","

snapshots = int(input())

high_traffic_snapshots = 0

for i in range(snapshots):
    network_load = float(input())
    if network_load > 512:
        high_traffic_snapshots += 1

if high_traffic_snapshots > 2:
    print(""Activate NLB"")
elif high_traffic_snapshots > 0:
    print(""Initialize NLB"")
else:
    print(""Ops Normal"")

"
195,a2_6_grades,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You are writing a program that will help your instructors analyze student
performance on an exam. Your program will ask for the number of students in
the class. It will then ask for the grade of each student (this grade does not
have to be a whole number). Your program will keep track of how many students
received less than 70 on an assignment. Your program will then print one of
the following statements.



**# of scores below 70** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | Excellent | Satisfactory | Unsatisfactory  
  


**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**INPUT** |

4  
75.6  
80.2  
95.5  
71.0

|

3  
68.2  
72.9  
95.4

|

3  
67.0  
65.5  
68.3  
  
**OUTPUT** | Excellent | Satisfactory | Unsatisfactory  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You are writing a program that will help your instructors analyze student
performance on an exam. Your program will ask for the number of students in
the class. It will then ask for the grade of each student (this grade does not
have to be a whole number). Your program will keep track of how many students
received less than 70 on an assignment. Your program will then print one of
the following statements.



**# of scores below 70** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | Excellent | Satisfactory | Unsatisfactory  
  


**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**INPUT** |

4  
75.6  
80.2  
95.5  
71.0

|

3  
68.2  
72.9  
95.4

|

3  
67.0  
65.5  
68.3  
  
**OUTPUT** | Excellent | Satisfactory | Unsatisfactory  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
196,a2_6_gameday,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

The Academy Athletic Director asked you are to write a program that will
determine whether or not a football game in progress should be delayed based
on current weather conditions. Your program will ask for the number of
lightning strikes occurred in the immediate area in the past thirty minutes.
It will then ask for the distance from Falcon Stadium to each lightning strike
(in miles, which do not have to be whole numbers). Your program will keep
track of how many lightning strikes are within 15 miles of the stadium
(inclusive). Your program will then print one of the following statements:

**# of lightning strikes in immediate area** | **0** | **1-3** | **> 3**  
---|---|---|---  
**Output** | All Clear | Weather Warning | Game Delay  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

4

15.0

13.2

6.5

9.8

|

3

17.8

15.1

19.0

  
  
**OUTPUT** | Game Delay | All Clear  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

The Academy Athletic Director asked you are to write a program that will
determine whether or not a football game in progress should be delayed based
on current weather conditions. Your program will ask for the number of
lightning strikes occurred in the immediate area in the past thirty minutes.
It will then ask for the distance from Falcon Stadium to each lightning strike
(in miles, which do not have to be whole numbers). Your program will keep
track of how many lightning strikes are within 15 miles of the stadium
(inclusive). Your program will then print one of the following statements:

**# of lightning strikes in immediate area** | **0** | **1-3** | **> 3**  
---|---|---|---  
**Output** | All Clear | Weather Warning | Game Delay  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

4

15.0

13.2

6.5

9.8

|

3

17.8

15.1

19.0

  
  
**OUTPUT** | Game Delay | All Clear  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
197,a2_6_combat,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You are writing a program that will determine whether or not a fighter pilot
will need to make an evasive action when enemy aircraft are near. Your program
will ask for the number of enemy planes in the area. It will then ask for the
distance between the pilot and each of the enemy planes (in miles, which do
not have to be whole numbers). Your program will keep track of how many enemy
planes are within 20 miles of the pilot (inclusive). Your program will then
print one of the following statements:

**# of Enemy Planes in Area** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | All Clear | Warning | Evasive Action  
  


**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

10.5

17.2

23.7

|

3

21.4

34.0

27.9  
  
**OUTPUT** | Warning | All Clear


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You are writing a program that will determine whether or not a fighter pilot
will need to make an evasive action when enemy aircraft are near. Your program
will ask for the number of enemy planes in the area. It will then ask for the
distance between the pilot and each of the enemy planes (in miles, which do
not have to be whole numbers). Your program will keep track of how many enemy
planes are within 20 miles of the pilot (inclusive). Your program will then
print one of the following statements:

**# of Enemy Planes in Area** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | All Clear | Warning | Evasive Action  
  


**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

10.5

17.2

23.7

|

3

21.4

34.0

27.9  
  
**OUTPUT** | Warning | All Clear


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
n = int(input())
count = 0

for _ in range(n):
    distance = float(input())
    if distance <= 20:
        count += 1

if count == 0:
    print(""All Clear"")
elif count <= 2:
    print(""Warning"")
else:
    print(""Evasive Action"")
"
198,a2_4_slash,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets the following values from the
user:

  * **slash_separated_string** : A slash separated string  
Example: johnson81/4081/30no86/cj4081/Craig/Johnson/Depot/London  
  

  * **column_to_print** : A number representing the value to print from the slash separated string  
NOTE: 0 represents the first value in the slash separated string, 1 represents
the second, etc



Write a Python program that:

  1. Splits the **slash separated string**
  2. Prints the column_to_printth value.



**EXAMPLE:**

If the user types:

    
    
    johnson81/4081/30no86/cj4081/Craig/Johnson/Depot/London  
    2

Your program should then output:

    
    
    30no86




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets the following values from the
user:

  * **slash_separated_string** : A slash separated string  
Example: johnson81/4081/30no86/cj4081/Craig/Johnson/Depot/London  
  

  * **column_to_print** : A number representing the value to print from the slash separated string  
NOTE: 0 represents the first value in the slash separated string, 1 represents
the second, etc



Write a Python program that:

  1. Splits the **slash separated string**
  2. Prints the column_to_printth value.



**EXAMPLE:**

If the user types:

    
    
    johnson81/4081/30no86/cj4081/Craig/Johnson/Depot/London  
    2

Your program should then output:

    
    
    30no86




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
'''
# Reads a slash separated string and a column number from the user, then prints the value at that column number
# Example input:
# johnson81/4081/30no86/cj4081/Craig/Johnson/Depot/London
# 2
# Output:
# 30no86
'''

# Read the input values from the user
slash_separated_string = input()
column_to_print = int(input())

# Split the slash separated string
values = slash_separated_string.split('/')

# Print the value at the specified column number
print(values[column_to_print])
"
199,a2_4_semic,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets the following values from the
user:

  * **semicolon_separated_string** : A semicolon separated string  
Example: booker12;9012;12se74;rb9012;Rachel;Booker;Sales;Manchester  
  

  * **column_to_print** : A number representing the value to print from the semicolon separated string  
NOTE: 0 represents the first value in the semicolon separated string, 1
represents the second, etc



Write a Python program that:

  1. Splits the **semicolon separated string**
  2. Prints the column_to_printth value.



**EXAMPLE:**

If the user types:

    
    
    booker12;9012;12se74;rb9012;Rachel;Booker;Sales;Manchester  
    2

Your program should then output:

    
    
    12se74




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets the following values from the
user:

  * **semicolon_separated_string** : A semicolon separated string  
Example: booker12;9012;12se74;rb9012;Rachel;Booker;Sales;Manchester  
  

  * **column_to_print** : A number representing the value to print from the semicolon separated string  
NOTE: 0 represents the first value in the semicolon separated string, 1
represents the second, etc



Write a Python program that:

  1. Splits the **semicolon separated string**
  2. Prints the column_to_printth value.



**EXAMPLE:**

If the user types:

    
    
    booker12;9012;12se74;rb9012;Rachel;Booker;Sales;Manchester  
    2

Your program should then output:

    
    
    12se74




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","semicolon_separated_string = input()
column_to_print = int(input())

# Split the semicolon separated string
values = semicolon_separated_string.split("";"")

# Print the column_to_printth value
print(values[column_to_print])"
200,a2_4_dash,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets the following values from the
user:

  * **dash_separated_string** : A dash separated string  
Example: johnson81-4081-30no86-cj4081-Craig-Johnson-Depot-London  
  

  * **column_to_print** : A number representing the value to print from the dash separated string  
NOTE: 0 represents the first value in the dash separated string, 1 represents
the second, etc



Write a Python program that:

  1. Splits the **dash separated string**
  2. Prints the column_to_printth value.



**EXAMPLE:**

If the user types:

    
    
    johnson81-4081-30no86-cj4081-Craig-Johnson-Depot-London  
    2

Your program should then output:

    
    
    30no86




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets the following values from the
user:

  * **dash_separated_string** : A dash separated string  
Example: johnson81-4081-30no86-cj4081-Craig-Johnson-Depot-London  
  

  * **column_to_print** : A number representing the value to print from the dash separated string  
NOTE: 0 represents the first value in the dash separated string, 1 represents
the second, etc



Write a Python program that:

  1. Splits the **dash separated string**
  2. Prints the column_to_printth value.



**EXAMPLE:**

If the user types:

    
    
    johnson81-4081-30no86-cj4081-Craig-Johnson-Depot-London  
    2

Your program should then output:

    
    
    30no86




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def print_column_value(dash_separated_string, column_to_print):
    split_string = dash_separated_string.split(""-"")
    print(split_string[column_to_print])
    
# Read input from user
dash_separated_string = input()
column_to_print = int(input())

# Call the function
print_column_value(dash_separated_string, column_to_print)
"
201,a2_4_comma,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets the following values from the
user:

  * **comma_separated_string** : A comma separated string  
Example: booker12,9012,12se74,rb9012,Rachel,Booker,Sales,Manchester  
  

  * **column_to_print** : A number representing the value to print from the comma separated string  
NOTE: 0 represents the first value in the comma separated string, 1 represents
the second, etc



Write a Python program that:

  1. Splits the **comma separated** **string**
  2. Prints the column_to_printth value



**EXAMPLE:**

If the user types:

    
    
    booker12,9012,12se74,rb9012,Rachel,Booker,Sales,Manchester  
    2

Your program should then output:

    
    
    12se74




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets the following values from the
user:

  * **comma_separated_string** : A comma separated string  
Example: booker12,9012,12se74,rb9012,Rachel,Booker,Sales,Manchester  
  

  * **column_to_print** : A number representing the value to print from the comma separated string  
NOTE: 0 represents the first value in the comma separated string, 1 represents
the second, etc



Write a Python program that:

  1. Splits the **comma separated** **string**
  2. Prints the column_to_printth value



**EXAMPLE:**

If the user types:

    
    
    booker12,9012,12se74,rb9012,Rachel,Booker,Sales,Manchester  
    2

Your program should then output:

    
    
    12se74




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def print_column(comma_separated_string, column_to_print):
    values = comma_separated_string.split(',')
    print(values[column_to_print])

comma_separated_string = input()
column_to_print = int(input())
print_column(comma_separated_string, column_to_print)
"
202,a2_4_colon,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets the following values from the
user:

  * **colon_separated_string** : A colon separated string  
Example: jones78:4273:24px47:kj4273:Karyl:Jones:Accounts:Essex  
  

  * **column_to_print** : A number representing the value to print from the colon separated string  
NOTE: 0 represents the first value in the colon separated string, 1 represents
the second, etc



Write a Python program that:

  1. Splits the **colon separated string**
  2. Prints the column_to_printth value.



**EXAMPLE:**

If the user types:

    
    
    jones78:4273:24px47:kj4273:Karyl:Jones:Accounts:Essex  
    2

Your program should then output:

    
    
    24px47




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets the following values from the
user:

  * **colon_separated_string** : A colon separated string  
Example: jones78:4273:24px47:kj4273:Karyl:Jones:Accounts:Essex  
  

  * **column_to_print** : A number representing the value to print from the colon separated string  
NOTE: 0 represents the first value in the colon separated string, 1 represents
the second, etc



Write a Python program that:

  1. Splits the **colon separated string**
  2. Prints the column_to_printth value.



**EXAMPLE:**

If the user types:

    
    
    jones78:4273:24px47:kj4273:Karyl:Jones:Accounts:Essex  
    2

Your program should then output:

    
    
    24px47




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def print_colon_value(colon_separated_string, column_to_print):
    values = colon_separated_string.split("":"")
    print(values[column_to_print])
"
203,a2_3_twenty_one,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.

Write a program that prints all of the numbers between  **starting_number**
and  **0**  (inclusive), counting down by **21** each time.



For example, if the user types **85** , your program should print:

    
    
    85  
    64  
    43  
    22  
    1

Similarly, if the user types  **51** , your program should print:

    
    
    51  
    30  
    9  
      
    

You may assume that the user will only enter positive numbers.



**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.

Write a program that prints all of the numbers between  **starting_number**
and  **0**  (inclusive), counting down by **21** each time.



For example, if the user types **85** , your program should print:

    
    
    85  
    64  
    43  
    22  
    1

Similarly, if the user types  **51** , your program should print:

    
    
    51  
    30  
    9  
      
    

You may assume that the user will only enter positive numbers.



**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
starting_number = int(input(""Enter a number: ""))

for number in range(starting_number, -1, -21):
    print(number)
"
204,a2_3_seventeen,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called **starting_number**.  

Write a program that prints all of the numbers between **starting_number** and
**0** (inclusive), counting down by **17** each time.



For example, if the user types **45** , your program should print:

    
    
    45  
    28  
    11

Similarly, if the user types **51** , your program should print:

    
    
    51  
    34  
    17  
    0

You may assume that the user will only enter positive numbers.



**HINT:**

  * This problem can be solved using either a **for** or **while** loop.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called **starting_number**.  

Write a program that prints all of the numbers between **starting_number** and
**0** (inclusive), counting down by **17** each time.



For example, if the user types **45** , your program should print:

    
    
    45  
    28  
    11

Similarly, if the user types **51** , your program should print:

    
    
    51  
    34  
    17  
    0

You may assume that the user will only enter positive numbers.



**HINT:**

  * This problem can be solved using either a **for** or **while** loop.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
starting_number = int(input())

for number in range(starting_number, -1, -17):
    print(number)
"
205,a2_3_fourty_two,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.

Write a program that prints all of the numbers between  **starting_number**
and  **0**  (inclusive), counting down by **42** each time.



For example, if the user types  **228** , your program should print:

    
    
    228  
    186  
    144  
    102  
    60  
    18

Similarly, if the user types **106** , your program should print:

    
    
    106  
    64  
    22

You may assume that the user will only enter positive numbers.



**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.

Write a program that prints all of the numbers between  **starting_number**
and  **0**  (inclusive), counting down by **42** each time.



For example, if the user types  **228** , your program should print:

    
    
    228  
    186  
    144  
    102  
    60  
    18

Similarly, if the user types **106** , your program should print:

    
    
    106  
    64  
    22

You may assume that the user will only enter positive numbers.



**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
starting_number = int(input(""Enter a number: ""))

for num in range(starting_number, -1, -42):
    print(num)
"
206,a2_3_countdown,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.

Write a program that prints all of the numbers between  **starting_number**
and **0** (inclusive), counting down by **13** each time.



For example, if the user types **45** , your program should print:

    
    
    45  
    32  
    19  
    6

Similarly, if the user types **39** , your program should print:

    
    
    39  
    26  
    13  
    0

You may assume that the user will only enter positive numbers.



**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.

Write a program that prints all of the numbers between  **starting_number**
and **0** (inclusive), counting down by **13** each time.



For example, if the user types **45** , your program should print:

    
    
    45  
    32  
    19  
    6

Similarly, if the user types **39** , your program should print:

    
    
    39  
    26  
    13  
    0

You may assume that the user will only enter positive numbers.



**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
starting_number = int(input(""Enter a number: ""))

for i in range(starting_number, -1, -13):
    print(i)
"
207,a2_3_19,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.

Write a program that prints all of the numbers between  **starting_number**
and **0** (inclusive), counting down by **19** each time.



For example, if the user types **45** , your program should print:

    
    
    45  
    26  
    7

Similarly, if the user types **57** , your program should print:

    
    
    57  
    38  
    19  
    0  
      
    

You may assume that the user will only enter positive numbers.



**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.

Write a program that prints all of the numbers between  **starting_number**
and **0** (inclusive), counting down by **19** each time.



For example, if the user types **45** , your program should print:

    
    
    45  
    26  
    7

Similarly, if the user types **57** , your program should print:

    
    
    57  
    38  
    19  
    0  
      
    

You may assume that the user will only enter positive numbers.



**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
starting_number = int(input(""Enter a number: ""))

# Print the numbers
for i in range(starting_number, -1, -19):
    print(i)
"
208,a2_2_unladen,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

The airspeed velocity of an unladen swallow can be estimated using the
following formula:  
  

`SPEED = 3 * F * A`



In this formula:

  * **F** is the number of wing flaps per minute (integer)
  * **A** is the distance the wing travels (up and down) per wing flap (floating point number in meters)



Write a function called **speed_of_unladen_swallow** that takes **F** and
**A** as parameters (in that order), and **returns** the speed in meters per
minute.



**NOTES:**

  * You do NOT need to call this function. Simply define it.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

The airspeed velocity of an unladen swallow can be estimated using the
following formula:  
  

`SPEED = 3 * F * A`



In this formula:

  * **F** is the number of wing flaps per minute (integer)
  * **A** is the distance the wing travels (up and down) per wing flap (floating point number in meters)



Write a function called **speed_of_unladen_swallow** that takes **F** and
**A** as parameters (in that order), and **returns** the speed in meters per
minute.



**NOTES:**

  * You do NOT need to call this function. Simply define it.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def speed_of_unladen_swallow(F, A):
    return 3 * F * A
"
209,a2_2_stride,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You can calculate a person's speed using the following formula:

`Speed = Stride * SPM * .011`



In this formula:

  * **Stride** in inches (float)
  * **SPM** is strides per minute (integer)



Write a function called **person_speed** that takes **Stride**  and **SPM**
as parameters (in that order), and **returns** the speed.



**NOTES:**

  * You do NOT need to call this function. Simply define it


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You can calculate a person's speed using the following formula:

`Speed = Stride * SPM * .011`



In this formula:

  * **Stride** in inches (float)
  * **SPM** is strides per minute (integer)



Write a function called **person_speed** that takes **Stride**  and **SPM**
as parameters (in that order), and **returns** the speed.



**NOTES:**

  * You do NOT need to call this function. Simply define it


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def person_speed(Stride, SPM):
    return Stride * SPM * .011"
210,a2_2_speed,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You can calculate how fast a vehicle is moving in feet per minute using the
following formula:  
  

`SPEED = RPM * Cir / 12`



In this formula:

  * **RPM** is the rotations per minute of the wheel (integer)
  * **Cir** is the Circumference of the wheel (floating point number in inches)



Write a function called **speed_fpm** that takes **RPM** and **Cir** as
parameters (in that order), and **returns** the speed in feet per minute.



**NOTES:**

  * You do NOT need to call this function. Simply define it.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You can calculate how fast a vehicle is moving in feet per minute using the
following formula:  
  

`SPEED = RPM * Cir / 12`



In this formula:

  * **RPM** is the rotations per minute of the wheel (integer)
  * **Cir** is the Circumference of the wheel (floating point number in inches)



Write a function called **speed_fpm** that takes **RPM** and **Cir** as
parameters (in that order), and **returns** the speed in feet per minute.



**NOTES:**

  * You do NOT need to call this function. Simply define it.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def speed_fpm(RPM, Cir):
    SPEED = RPM * Cir / 12
    return SPEED"
211,a2_2_hp,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM** **STATEMENT:  
**

You can calculate a car's horsepower by using the following formula:

`Horsepower = RPM * Torque / 5252`



In this formula:

  * **RPM** is rotations per minute (integer)
  * **Torque**  in foot pounds (floating point number)



Write a function called  **horsepower**  that takes  **RPM**  and  **Torque**
as parameters (in that order), and  **returns** the calculated horsepower.



**NOTES:**

  * You do NOT need to call this function. Simply define it


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM** **STATEMENT:  
**

You can calculate a car's horsepower by using the following formula:

`Horsepower = RPM * Torque / 5252`



In this formula:

  * **RPM** is rotations per minute (integer)
  * **Torque**  in foot pounds (floating point number)



Write a function called  **horsepower**  that takes  **RPM**  and  **Torque**
as parameters (in that order), and  **returns** the calculated horsepower.



**NOTES:**

  * You do NOT need to call this function. Simply define it


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def horsepower(RPM, Torque):
    return RPM * Torque / 5252"
212,a2_2_bmi,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You can calculate a person's body mass index using the following formula:  
  

`BMI = Weight / Height2 * 703`



In this formula:

  * **height** in inches (integer)
  * **weight** in pounds (floating point number)



Write a function called **body_mass_index** that takes **height** and
**weight** as parameters (in that order), and **returns**  the body mass
index.



**NOTES:**

  * You do NOT need to call this function. Simply define it


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You can calculate a person's body mass index using the following formula:  
  

`BMI = Weight / Height2 * 703`



In this formula:

  * **height** in inches (integer)
  * **weight** in pounds (floating point number)



Write a function called **body_mass_index** that takes **height** and
**weight** as parameters (in that order), and **returns**  the body mass
index.



**NOTES:**

  * You do NOT need to call this function. Simply define it


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def body_mass_index(height, weight):
    return weight / (height ** 2) * 703
"
213,a2_1_surface,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_surface, which takes
two parameters:

  * **radius**
  * **Pi**

Call this function and pass it **5**  for **radius** , and
**3.141592653589793** for **Pi**. Store the result in a variable called
**result**. Do not print. Simply call the function and store the returned
value in the variable **result**.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_surface, which takes
two parameters:

  * **radius**
  * **Pi**

Call this function and pass it **5**  for **radius** , and
**3.141592653589793** for **Pi**. Store the result in a variable called
**result**. Do not print. Simply call the function and store the returned
value in the variable **result**.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_surface(radius, Pi):
    return Pi * radius * radius

result = calculate_surface(5, 3.141592653589793)
"
214,a2_1_future_value,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_future_value, which
takes two parameters:

  * **present_value**
  * **years**

Call this function and pass it **50000**  for **present_value** , and  **25
**for  **years**. Store the result in a variable called  **result**. Do not
print. Simply call the function and store the returned value in the variable
**result**.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_future_value, which
takes two parameters:

  * **present_value**
  * **years**

Call this function and pass it **50000**  for **present_value** , and  **25
**for  **years**. Store the result in a variable called  **result**. Do not
print. Simply call the function and store the returned value in the variable
**result**.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def calculate_future_value(present_value, years):
    future_value = present_value * (1 + 0.05) ** years
    return future_value

result = calculate_future_value(50000, 25)
result"
215,a2_1_equation,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_equation, which takes
two parameters:

  * **value**
  * **C**

Call this function and pass it **355000** for **value** , and **2.99 * 10**
**8**  for **C**. Store the result in a variable called **result.** Do not
print. Simply call the function, and store the returned value in the variable
**result**.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_equation, which takes
two parameters:

  * **value**
  * **C**

Call this function and pass it **355000** for **value** , and **2.99 * 10**
**8**  for **C**. Store the result in a variable called **result.** Do not
print. Simply call the function, and store the returned value in the variable
**result**.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_equation(value, C):
    return value * C

result = calculate_equation(355000, 2.99 * 10**8)
"
216,a2_1_calculate,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_equation, which takes
two parameters:

  * **value**
  * **C**

Call this function and pass it  **278**  for  **value** , and  **6.4 * 2 10**
for  **C**. Store the result in a variable called  **result**. Do not print.
Simply call the function, and store the returned value in the variable
**result**.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_equation, which takes
two parameters:

  * **value**
  * **C**

Call this function and pass it  **278**  for  **value** , and  **6.4 * 2 10**
for  **C**. Store the result in a variable called  **result**. Do not print.
Simply call the function, and store the returned value in the variable
**result**.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","result = calculate_equation(278, 6.4 * 2 * 10)"
217,a2_1_calculate_volume,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_volume, which takes
two parameters:

  * **radius**
  * **Pi**

Call this function and pass it **15**  for  **radius** , and
**3.141592653589793  **for  **Pi**. Store the result in a variable called
**result**. Do not print. Simply call the function and store the returned
value in the variable  **result**.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_volume, which takes
two parameters:

  * **radius**
  * **Pi**

Call this function and pass it **15**  for  **radius** , and
**3.141592653589793  **for  **Pi**. Store the result in a variable called
**result**. Do not print. Simply call the function and store the returned
value in the variable  **result**.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_volume(radius, Pi):
    return (4/3) * Pi * radius**3

result = calculate_volume(15, 3.141592653589793)
result"
218,a1_7_pilot_quals,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

C-130 Pilot qualifications usually depend on a pilot's flight experience in
terms of flight hours.

**C-130 Pilot Qualification** | **Flight Hours**  
---|---  
Upgrade Pilot | 600  
Aircraft Commander | 800  
Formation Lead | 1000  
Instructor Pilot | 1250  
Evaluator Pilot | 1500  
  
  
Write a Python program that asks the user to enter the number of flight hours
they currently have (does not need to be a whole number). Then, referencing
the table above, print out all qualifications they should have achieved in the
aircraft (one per line). If the their experience in the C-130 is more than 600
flight hours, output ""Co-Pilot"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 1996 | 1156.7 | 535.4  
**Output** |

Upgrade Pilot  
Aircraft Commander  
Formation Lead  
Instructor Pilot  
Evaluator Pilot

|

Upgrade Pilot  
Aircraft Commander  
Formation Lead

| Co-Pilot  
  
NOTE: The qualifications can be listed in any order, so long as only the ones
in range are printed.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

C-130 Pilot qualifications usually depend on a pilot's flight experience in
terms of flight hours.

**C-130 Pilot Qualification** | **Flight Hours**  
---|---  
Upgrade Pilot | 600  
Aircraft Commander | 800  
Formation Lead | 1000  
Instructor Pilot | 1250  
Evaluator Pilot | 1500  
  
  
Write a Python program that asks the user to enter the number of flight hours
they currently have (does not need to be a whole number). Then, referencing
the table above, print out all qualifications they should have achieved in the
aircraft (one per line). If the their experience in the C-130 is more than 600
flight hours, output ""Co-Pilot"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 1996 | 1156.7 | 535.4  
**Output** |

Upgrade Pilot  
Aircraft Commander  
Formation Lead  
Instructor Pilot  
Evaluator Pilot

|

Upgrade Pilot  
Aircraft Commander  
Formation Lead

| Co-Pilot  
  
NOTE: The qualifications can be listed in any order, so long as only the ones
in range are printed.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
flight_hours = float(input())

if flight_hours > 600:
    print(""Co-Pilot"")
if flight_hours >= 600:
    print(""Upgrade Pilot"")
if flight_hours >= 800:
    print(""Aircraft Commander"")
if flight_hours >= 1000:
    print(""Formation Lead"")
if flight_hours >= 1250:
    print(""Instructor Pilot"")
if flight_hours >= 1500:
    print(""Evaluator Pilot"")
"
219,a1_7_payload,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

The USAF is known for its massive cargo transport capabilities. Below are the
names of 5 aircraft, as well as their maximum payload capacity



**Cargo Aircraft**

|

**Maximum Load (inclusive, in Lbs. )**  
  
---|---  
  
C-5 Galaxy

|

285000  
  
C-17 Globemaster

|

170900  
  
KC-10 Extender

|

169000  
  
C-130 Hercules

|

42000  
  
V-22 Osprey

|

6000  
  
  
Write a Python program that asks the user to enter the payload weight (in
Lbs.) that needs to be moved. Then, referencing the table, print out all of
the Aircraft that could potentially carry that payload (one per line). If no
aircraft can carry the payload, output ""Too Heavy for Airlift"".



**EXAMPLES:**

  |

**Example 1**

|

**Example 2**

|

**Example 3**  
  
---|---|---|---  
  
**Input**

|

150000

|

250000

|

300000  
  
**Output**

|

C-5 Galaxy

C-17 Globemaster

KC-10 Extender

|

C-5 Galaxy

|

Too Heavy for Airlift  
  
NOTE: The aircraft can be listed in any order, so long as only the ones
capable of the lift are printed.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

The USAF is known for its massive cargo transport capabilities. Below are the
names of 5 aircraft, as well as their maximum payload capacity



**Cargo Aircraft**

|

**Maximum Load (inclusive, in Lbs. )**  
  
---|---  
  
C-5 Galaxy

|

285000  
  
C-17 Globemaster

|

170900  
  
KC-10 Extender

|

169000  
  
C-130 Hercules

|

42000  
  
V-22 Osprey

|

6000  
  
  
Write a Python program that asks the user to enter the payload weight (in
Lbs.) that needs to be moved. Then, referencing the table, print out all of
the Aircraft that could potentially carry that payload (one per line). If no
aircraft can carry the payload, output ""Too Heavy for Airlift"".



**EXAMPLES:**

  |

**Example 1**

|

**Example 2**

|

**Example 3**  
  
---|---|---|---  
  
**Input**

|

150000

|

250000

|

300000  
  
**Output**

|

C-5 Galaxy

C-17 Globemaster

KC-10 Extender

|

C-5 Galaxy

|

Too Heavy for Airlift  
  
NOTE: The aircraft can be listed in any order, so long as only the ones
capable of the lift are printed.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
payload = int(input())

if payload <= 6000:
    print(""V-22 Osprey"")
if payload <= 42000:
    print(""C-130 Hercules"")
if payload <= 169000:
    print(""KC-10 Extender"")
if payload <= 170900:
    print(""C-17 Globemaster"")
if payload <= 285000:
    print(""C-5 Galaxy"")
if payload > 285000:
    print(""Too Heavy for Airlift"")
"
220,a1_7_missilethreat,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

According to intelligence reports, the North Korean military uses at least 5
different classes of Ballistic Missiles. The names of these missiles, as well
as their maximum theoretical range, are provided below:

**Missile Class** | **Maximum Range (inclusive, in Kilometers)**  
---|---  
Hwasong-6 | 500  
KN-11 | 1200  
Musudan BM-25 | 4000  
Hwasong-14 | 8000  
Taepodong-2 | 12000  
  
  
Write a Python program that asks the user to enter the distance to a potential
target (in Kilometers). Then, referencing the table, print out all of the
Missile Classes that could potentially reach the target (one per line). If no
missiles are in range, output ""Not in range"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 1800 | 8000 | 18000  
**Output** | Musudan BM-25  
Hwason-14  
Taepodong-2 |

Hwasong-14  
Taepodong-2

| Not in range  
  
NOTE: The missiles can be listed in any order, so long as only the ones in
range are printed.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

According to intelligence reports, the North Korean military uses at least 5
different classes of Ballistic Missiles. The names of these missiles, as well
as their maximum theoretical range, are provided below:

**Missile Class** | **Maximum Range (inclusive, in Kilometers)**  
---|---  
Hwasong-6 | 500  
KN-11 | 1200  
Musudan BM-25 | 4000  
Hwasong-14 | 8000  
Taepodong-2 | 12000  
  
  
Write a Python program that asks the user to enter the distance to a potential
target (in Kilometers). Then, referencing the table, print out all of the
Missile Classes that could potentially reach the target (one per line). If no
missiles are in range, output ""Not in range"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 1800 | 8000 | 18000  
**Output** | Musudan BM-25  
Hwason-14  
Taepodong-2 |

Hwasong-14  
Taepodong-2

| Not in range  
  
NOTE: The missiles can be listed in any order, so long as only the ones in
range are printed.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
distance = int(input())

if distance <= 500:
    print(""Hwasong-6"")

if distance <= 1200:
    print(""KN-11"")

if distance <= 4000:
    print(""Musudan BM-25"")

if distance <= 8000:
    print(""Hwasong-14"")

if distance <= 12000:
    print(""Taepodong-2"")

if distance > 12000:
    print(""Not in range"")
"
221,a1_7_evacuation,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
PROBLEM STATEMENT:  

Terrorist groups in the past have created improvised explosive devices in
various shapes and sizes. According to the National Counterterrorism Center,
the following evacuation distances are appropriate for certain explosive
devices.

Explosive Container

|

Evacuation Distance (inclusive, in Feet)  
  
---|---  
  
Pipe Bomb

|

850  
  
Suitcase Bomb

|

1850  
  
Sedan

|

2000  
  
Cargo Van

|

2750  
  
Semi-Trailer

|

7000  
  
  
Write a Python program that asks the user to enter a distance to a device (in
feet). Then, referencing the table, print out all of the explosive devices
that could potentially reach a target at the specified distance (one per
line). If no explosives can reach the specified distance, output ""Not in
range"".

EXAMPLES:

|

Example 1

|

Example 2

|

Example 3  
  
---|---|---|---  
  
Input

|

1900

|

2500

|

8000  
  
Output

|

Sedan  
Cargo Van  
Semi-Trailer

|

Cargo Van  
Semi-Trailer

|

Not in range  
  
NOTE: The devices can be listed in any order, so long as only the ones in
range are printed.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
PROBLEM STATEMENT:  

Terrorist groups in the past have created improvised explosive devices in
various shapes and sizes. According to the National Counterterrorism Center,
the following evacuation distances are appropriate for certain explosive
devices.

Explosive Container

|

Evacuation Distance (inclusive, in Feet)  
  
---|---  
  
Pipe Bomb

|

850  
  
Suitcase Bomb

|

1850  
  
Sedan

|

2000  
  
Cargo Van

|

2750  
  
Semi-Trailer

|

7000  
  
  
Write a Python program that asks the user to enter a distance to a device (in
feet). Then, referencing the table, print out all of the explosive devices
that could potentially reach a target at the specified distance (one per
line). If no explosives can reach the specified distance, output ""Not in
range"".

EXAMPLES:

|

Example 1

|

Example 2

|

Example 3  
  
---|---|---|---  
  
Input

|

1900

|

2500

|

8000  
  
Output

|

Sedan  
Cargo Van  
Semi-Trailer

|

Cargo Van  
Semi-Trailer

|

Not in range  
  
NOTE: The devices can be listed in any order, so long as only the ones in
range are printed.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
distance = int(input())

if distance <= 850:
    print(""Pipe Bomb"")
if distance <= 1850:
    print(""Suitcase Bomb"")
if distance <= 2000:
    print(""Sedan"")
if distance <= 2750:
    print(""Cargo Van"")
if distance <= 7000:
    print(""Semi-Trailer"")
if distance > 7000:
    print(""Not in range"")
"
222,a1_7_digitalstorage,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Assume someone takes hundreds of photos on their smartphone every week. They
are seeking the best and least expensive alternatives to store/share their
images because their phone's storage capacity is limited. Using the table
below, determine which storage options they should consider, assuming each
image has an average file size of 6 MB.



**Storage Option** | **Short Name** | **Number of Images (inclusive)**  
---|---|---  
CD-ROM (700 MB) | CD | 116  
DVD-ROM (4.7 GB) | DVD | 780  
USB Thumb Drive (16 GB) | USB Small | 2660  
USB Thumb Drive (64 GB) | USB Large | 10600  
Portable Hard Drive (256 GB) | Portable HDD | 42600  
  
  
Write a Python program that asks the user to enter the number of images that
need to be shared/stored (non-negative, whole number). Then, referencing the
table above, print out all the storage options (by Short Name) capable of
holding that many images (one per line). If no storage options are capable of
storing that many images, output ""Consider Cloud Storage"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 2000 | 4000 | 45000  
**Output** | USB Small  
USB Large  
Portable HDD |

USB Large  
Portable HDD

| Consider Cloud Storage  
  
NOTE: The devices can be listed in any order, so long as only the ones in
range are printed.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Assume someone takes hundreds of photos on their smartphone every week. They
are seeking the best and least expensive alternatives to store/share their
images because their phone's storage capacity is limited. Using the table
below, determine which storage options they should consider, assuming each
image has an average file size of 6 MB.



**Storage Option** | **Short Name** | **Number of Images (inclusive)**  
---|---|---  
CD-ROM (700 MB) | CD | 116  
DVD-ROM (4.7 GB) | DVD | 780  
USB Thumb Drive (16 GB) | USB Small | 2660  
USB Thumb Drive (64 GB) | USB Large | 10600  
Portable Hard Drive (256 GB) | Portable HDD | 42600  
  
  
Write a Python program that asks the user to enter the number of images that
need to be shared/stored (non-negative, whole number). Then, referencing the
table above, print out all the storage options (by Short Name) capable of
holding that many images (one per line). If no storage options are capable of
storing that many images, output ""Consider Cloud Storage"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 2000 | 4000 | 45000  
**Output** | USB Small  
USB Large  
Portable HDD |

USB Large  
Portable HDD

| Consider Cloud Storage  
  
NOTE: The devices can be listed in any order, so long as only the ones in
range are printed.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def get_storage_options(num_images):
    if num_images <= 116:
        print(""CD"")
    if num_images <= 780:
        print(""DVD"")
    if num_images <= 2660:
        print(""USB Small"")
    if num_images <= 10600:
        print(""USB Large"")
    if num_images <= 42600:
        print(""Portable HDD"")
    if num_images > 42600:
        print(""Consider Cloud Storage"")

num_images = int(input())
get_storage_options(num_images)
"
223,a1_7_broadband,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Choosing the right broadband speed for your internet connection depends on
which online activities you plan on engaging while online. Using the table
below, determine which activities are possible with a given broadband speed,
given in Kilobits per second (Kbps).



**Activity** | **Short Name** | **Minimum Broadband Speed  
(inclusive, in Kbps)**  
---|---|---  
Social Media | Social Media | 1000  
Multiplayer Gaming | Gaming | 4000  
HD Video Conferencing | Video Conferencing | 6000  
File Downloading | File Downloads | 10000  
Stream Ultra HD 4K Video | HD 4K Video | 25000  
  
  
Write a Python program that asks the user to enter the broadband speed in
Kbps. Then, referencing the table above, print out all the activities (by
Short Name) that can be achieved using that speed (one per line). If the
broadband speed is less than 1000 Kbps, output ""Upgrade to Broadband"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 8500 | 5000 | 750  
**Output** |

Social Media  
Gaming  
Video Conferencing

|

Social Media  
Gaming

| Upgrade to Broadband  
  
NOTE: The activities can be listed in any order, so long as only the ones in
range are printed.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Choosing the right broadband speed for your internet connection depends on
which online activities you plan on engaging while online. Using the table
below, determine which activities are possible with a given broadband speed,
given in Kilobits per second (Kbps).



**Activity** | **Short Name** | **Minimum Broadband Speed  
(inclusive, in Kbps)**  
---|---|---  
Social Media | Social Media | 1000  
Multiplayer Gaming | Gaming | 4000  
HD Video Conferencing | Video Conferencing | 6000  
File Downloading | File Downloads | 10000  
Stream Ultra HD 4K Video | HD 4K Video | 25000  
  
  
Write a Python program that asks the user to enter the broadband speed in
Kbps. Then, referencing the table above, print out all the activities (by
Short Name) that can be achieved using that speed (one per line). If the
broadband speed is less than 1000 Kbps, output ""Upgrade to Broadband"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 8500 | 5000 | 750  
**Output** |

Social Media  
Gaming  
Video Conferencing

|

Social Media  
Gaming

| Upgrade to Broadband  
  
NOTE: The activities can be listed in any order, so long as only the ones in
range are printed.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# read the input
speed = int(input())

# check if the speed is less than 1000 kbps
if speed < 1000:
    print(""Upgrade to Broadband"")
else:
    # check each activity and print if the speed is enough
    if speed >= 1000:
        print(""Social Media"")
    if speed >= 4000:
        print(""Gaming"")
    if speed >= 6000: 
        print(""Video Conferencing"")
    if speed >= 10000:
        print(""File Downloads"")
    if speed >= 25000:
        print(""HD 4K Video"")
"
224,a1_6_woodshop,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have a personal woodshop and want to easily calculate whether you can
afford the board materials for a project. It is unlikely you can obtain the
exact amount of board materials that you may need for the project because wood
planks are provided in fixed lengths.

Write an algorithm that asks for:

  *     * The total length of board materials required for the project
    * The budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The number of boards needed for the project (Hint: use math.ceil(VALUE) to round up to the next full board).
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of boards is greater than or not greater than the budget, respectfully.



Assume your local lumberyard sells each board in **5.33** feet pieces at
**$45.25** per board. You may assume that all inputs are non-negative numbers.



**EXAMPLES:**



  | **Example 1** | **Example 2**  
---|---|---  
Input | 26  
250 |

46  
300  
  
Output | 5  
226.25  
Within Budget | 9  
407.25  
Over Budget  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have a personal woodshop and want to easily calculate whether you can
afford the board materials for a project. It is unlikely you can obtain the
exact amount of board materials that you may need for the project because wood
planks are provided in fixed lengths.

Write an algorithm that asks for:

  *     * The total length of board materials required for the project
    * The budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The number of boards needed for the project (Hint: use math.ceil(VALUE) to round up to the next full board).
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of boards is greater than or not greater than the budget, respectfully.



Assume your local lumberyard sells each board in **5.33** feet pieces at
**$45.25** per board. You may assume that all inputs are non-negative numbers.



**EXAMPLES:**



  | **Example 1** | **Example 2**  
---|---|---  
Input | 26  
250 |

46  
300  
  
Output | 5  
226.25  
Within Budget | 9  
407.25  
Over Budget  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

# Input
total_length = float(input())
budget = float(input())

# Calculate the number of boards needed
num_boards = math.ceil(total_length / 5.33)

# Calculate the estimated cost
estimated_cost = num_boards * 45.25

# Check if the cost is within the budget
if estimated_cost <= budget:
    within_budget = ""Within Budget""
else:
    within_budget = ""Over Budget""

# Output
print(num_boards)
print(estimated_cost)
print(within_budget)
"
225,a1_6_scuba,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Recreational SCUBA divers have to plan out how many air tanks they will need
in order to safely dive. The amount varies per diver because each person
consumes air at a different rate. This rate is commonly called Surface Air
Consumption. You want to figure whether you can afford the air requirements
for the trips that you are planning.

Write an algorithm that asks for:

  *     * The total dive time for the trip in minutes 
    * The air budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The number of liters needed for the project.
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of compressed air is greater than or not greater than the budget, respectfully.



Assume that your Surface Air Consumption is **14.5** liters/minute, and that
air costs **2 cents** per liter. You may assume that all inputs are non-
negative numbers.



**EXAMPLES:**



  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 180  
70 |

120  
30  
  
**Output** | 2610.0  
52.2  
Within Budget | 1740.0  
34.800000000000004  
Over Budget  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Recreational SCUBA divers have to plan out how many air tanks they will need
in order to safely dive. The amount varies per diver because each person
consumes air at a different rate. This rate is commonly called Surface Air
Consumption. You want to figure whether you can afford the air requirements
for the trips that you are planning.

Write an algorithm that asks for:

  *     * The total dive time for the trip in minutes 
    * The air budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The number of liters needed for the project.
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of compressed air is greater than or not greater than the budget, respectfully.



Assume that your Surface Air Consumption is **14.5** liters/minute, and that
air costs **2 cents** per liter. You may assume that all inputs are non-
negative numbers.



**EXAMPLES:**



  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 180  
70 |

120  
30  
  
**Output** | 2610.0  
52.2  
Within Budget | 1740.0  
34.800000000000004  
Over Budget  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def scuba_diving(dive_time, air_budget):
    consumption_rate = 14.5
    air_cost_per_liter = 0.02
    
    liters_needed = dive_time * consumption_rate
    cost = liters_needed * air_cost_per_liter
    
    if cost <= air_budget:
        return liters_needed, cost, 'Within Budget'
    else:
        return liters_needed, cost, 'Over Budget'

dive_time = int(input())
air_budget = int(input())

liters_needed, cost, budget_status = scuba_diving(dive_time, air_budget)
print(float(liters_needed))
print(cost)
print(budget_status)
"
226,a1_6_runway,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

The CSAF has authorized new runways for any base that can accomplish the
project under their current budget. The new runways will be solid concrete
with their lengths measured in meters.

Write an algorithm that asks for:

  *     * The length of runway to be built (in meters)
    * The base's budget (in dollars--do not worry about the dollar sign, do not round to the nearest)



Your program should then output:

  *     * The amount of concrete (in tons) needed for the base's runway
    * The estimated cost (in dollars--do not output a dollar sign)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of materials is greater than or not greater than the base's budget, respectfully.

Assume that each meter of runway requires **  2.5** tons of concrete to build,
and that concrete costs  **$75.50**  per ton. You may assume that all inputs
are non-negative numbers.



**EXAMPLES:**

  |

Example 1

|

Example 2  
  
---|---|---  
  
Input

|

2000  
400000

|

1500  
250000  
  
Output

|

5000.0  
377500.0  
Within Budget

|

3750.0  
283125.0  
Over Budget  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

The CSAF has authorized new runways for any base that can accomplish the
project under their current budget. The new runways will be solid concrete
with their lengths measured in meters.

Write an algorithm that asks for:

  *     * The length of runway to be built (in meters)
    * The base's budget (in dollars--do not worry about the dollar sign, do not round to the nearest)



Your program should then output:

  *     * The amount of concrete (in tons) needed for the base's runway
    * The estimated cost (in dollars--do not output a dollar sign)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of materials is greater than or not greater than the base's budget, respectfully.

Assume that each meter of runway requires **  2.5** tons of concrete to build,
and that concrete costs  **$75.50**  per ton. You may assume that all inputs
are non-negative numbers.



**EXAMPLES:**

  |

Example 1

|

Example 2  
  
---|---|---  
  
Input

|

2000  
400000

|

1500  
250000  
  
Output

|

5000.0  
377500.0  
Within Budget

|

3750.0  
283125.0  
Over Budget  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_runway(length, budget):
    concrete_needed = length * 2.5
    cost = concrete_needed * 75.50
    if cost <= budget:
        return concrete_needed, cost, ""Within Budget""
    else:
        return concrete_needed, cost, ""Over Budget""
"
227,a1_6_printer,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

A 3D printer converts computer generated models into physical objects by
heating and extruding a filament known as Polylactic Acid (PLA). PLA, normally
sold in spools, is directly fed to the printer head like a thread. You want to
determine if you can afford to 3D print a project given its volume of
material.

Write an algorithm that asks for:

  *     * The volume of the 3D model to be printed (in cm3)
    * The user's budget (in dollars--do not worry about the dollar sign, do not round to the nearest)



Your program should then output:

  *     * The length of material (in meters) needed to produce the object
    * The estimated cost (in dollars--do not output a dollar sign)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of materials is greater than or not greater than the user's budget, respectfully.

Assume that each cm3 requires **  0.312** meters of PLA to print, and that PLA
filament costs  **$0.063**  per meter. You may assume that all inputs are non-
negative numbers.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 15.0  
2.5 | 500.0  
5.0  
Output | 4.68  
0.29484  
Within Budget | 156.0  
9.828  
Over Budget  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

A 3D printer converts computer generated models into physical objects by
heating and extruding a filament known as Polylactic Acid (PLA). PLA, normally
sold in spools, is directly fed to the printer head like a thread. You want to
determine if you can afford to 3D print a project given its volume of
material.

Write an algorithm that asks for:

  *     * The volume of the 3D model to be printed (in cm3)
    * The user's budget (in dollars--do not worry about the dollar sign, do not round to the nearest)



Your program should then output:

  *     * The length of material (in meters) needed to produce the object
    * The estimated cost (in dollars--do not output a dollar sign)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of materials is greater than or not greater than the user's budget, respectfully.

Assume that each cm3 requires **  0.312** meters of PLA to print, and that PLA
filament costs  **$0.063**  per meter. You may assume that all inputs are non-
negative numbers.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 15.0  
2.5 | 500.0  
5.0  
Output | 4.68  
0.29484  
Within Budget | 156.0  
9.828  
Over Budget  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","

def print_3D_model():
    volume = float(input(""Enter the volume of the 3D model to be printed (in cm3): ""))
    budget = float(input(""Enter your budget (in dollars): ""))

    length_of_material = volume * 0.312
    estimated_cost = length_of_material * 0.063

    if estimated_cost <= budget:
        print(""%.2f"" % length_of_material)
        print(""%.5f"" % estimated_cost)
        print(""Within Budget"")
    else:
        print(""%.2f"" % length_of_material)
        print(""%.5f"" % estimated_cost)
        print(""Over Budget"")

print_3D_model()

"
228,a1_6_fueldepot,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Fuel in the military is essential to conducting operations. Balancing mission
requirements against budgetary constraints is a constant concern.

Write an algorithm that asks for:

  *     * The distance to a target in miles
    * The budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The amount of fuel (in gallons) needed to reach the target
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of fuel is greater than or not greater than the budget, respectfully.

Assume that the convoy can get **  12.5** miles to the gallon, and that the
current price of fuel is  **$3.73**  per gallon. You may assume that all
inputs are non-negative numbers.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 130.7  
50.50 |

750  
100  
  
Output | 10.456  
39.0009  
Within Budget | 60.0  
223.80  
Over Budget  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Fuel in the military is essential to conducting operations. Balancing mission
requirements against budgetary constraints is a constant concern.

Write an algorithm that asks for:

  *     * The distance to a target in miles
    * The budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The amount of fuel (in gallons) needed to reach the target
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of fuel is greater than or not greater than the budget, respectfully.

Assume that the convoy can get **  12.5** miles to the gallon, and that the
current price of fuel is  **$3.73**  per gallon. You may assume that all
inputs are non-negative numbers.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 130.7  
50.50 |

750  
100  
  
Output | 10.456  
39.0009  
Within Budget | 60.0  
223.80  
Over Budget  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
distance = float(input())
budget = float(input())

fuel_needed = distance / 12.5
cost = fuel_needed * 3.73

if cost > budget:
    result = ""Over Budget""
else:
    result = ""Within Budget""

print('{:.3f}'.format(fuel_needed))
print('{:.4f}'.format(cost))
print(result)
"
229,a1_4_speed,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. aircraft_speed (input by the user in mph)
  2. speed_of_sound (already initialized in mph)



Add code to the end of this program that will output:

  *     *         Faster than Mach 1 

If the aircraft speed is higher than the speed of sound  
  

    *         Mach 1 

If the aircraft speed is equal to the speed of sound  
  

    *         Slower than Mach 1 

If the aircraft speed is lower than the speed of sound  
  



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 800 | 767.269 | 450.8  
**Output** | Faster than Mach 1 | Mach 1 | Slower than Mach 1


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. aircraft_speed (input by the user in mph)
  2. speed_of_sound (already initialized in mph)



Add code to the end of this program that will output:

  *     *         Faster than Mach 1 

If the aircraft speed is higher than the speed of sound  
  

    *         Mach 1 

If the aircraft speed is equal to the speed of sound  
  

    *         Slower than Mach 1 

If the aircraft speed is lower than the speed of sound  
  



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 800 | 767.269 | 450.8  
**Output** | Faster than Mach 1 | Mach 1 | Slower than Mach 1


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Get input from user
aircraft_speed = float(input(""Enter aircraft speed (in mph): ""))

# Initialize speed of sound
speed_of_sound = 767.269

# Compare aircraft speed to speed of sound
if aircraft_speed > speed_of_sound:
    print(""Faster than Mach 1"")
elif aircraft_speed == speed_of_sound:
    print(""Mach 1"")
else:
    print(""Slower than Mach 1"")
"
230,a1_4_satellite,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

You have been provided with a partially complete Python program that contains
2 variables.

  1. satellite_speed (input by the user in km/s)
  2. orbit_speed (already initialize in km/s)



Add code to the end of this program that will output:

    *       *             Crashed to Earth

If the speed of the satellite is below the orbital speed.

      *             In Orbit

If the speed of the satellite is equal to the orbital speed.

      *             Lost to Space

If the speed of the satellite is above the orbital speed.



** **

**EXAMPLES:**

|

**Example 1**

|

**Example 2**

|

**Example 3**  
  
---|---|---|---  
  
**Input**

|

3

|

7.8

|

9  
  
**Output**

|

Crashed to Earth

|

In Orbit

|

Lost to Space  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

You have been provided with a partially complete Python program that contains
2 variables.

  1. satellite_speed (input by the user in km/s)
  2. orbit_speed (already initialize in km/s)



Add code to the end of this program that will output:

    *       *             Crashed to Earth

If the speed of the satellite is below the orbital speed.

      *             In Orbit

If the speed of the satellite is equal to the orbital speed.

      *             Lost to Space

If the speed of the satellite is above the orbital speed.



** **

**EXAMPLES:**

|

**Example 1**

|

**Example 2**

|

**Example 3**  
  
---|---|---|---  
  
**Input**

|

3

|

7.8

|

9  
  
**Output**

|

Crashed to Earth

|

In Orbit

|

Lost to Space  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
satellite_speed = float(input())
orbit_speed = 7.8

# TODO: Add code here to output the correct message based on the satellite speed

if satellite_speed < orbit_speed:
    print(""Crashed to Earth"")
elif satellite_speed == orbit_speed:
    print(""In Orbit"")
else:
    print(""Lost to Space"")"
231,a1_4_goldilocks,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. porridge_temp (input by the user in °F)
  2. correct_temp (already initialized in °F)



Add code to the end of this program that will output:

  *     *         Too Hot 

When the porridge temp is above the correct temperature.  
  

    *         Just Right 

When the porridge temp is equal to the correct temperature  
  

    *         Too Cold 

When the porridge temp is below the correct temperature.  
  



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 110 | 105 | 98  
**Output** | Too Hot | Just Right | Too Cold


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. porridge_temp (input by the user in °F)
  2. correct_temp (already initialized in °F)



Add code to the end of this program that will output:

  *     *         Too Hot 

When the porridge temp is above the correct temperature.  
  

    *         Just Right 

When the porridge temp is equal to the correct temperature  
  

    *         Too Cold 

When the porridge temp is below the correct temperature.  
  



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 110 | 105 | 98  
**Output** | Too Hot | Just Right | Too Cold


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
porridge_temp = int(input())
correct_temp = 100

# Add your code below this line




# Add your code above this line

print(output)
"
232,a1_4_cards,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. number_of_cards (input by the user)
  2. cards_needed (already initialized)



Add code to the end of this program that will output whether you have enough
cards to make a full deck of 52 cards (already initialized):

  *     *         Too many cards 

If the number of cards is more than the cards needed  
  

    *         Full deck

If the number of cards is equal to the cards needed  
  

    *         Not enough cards 

If the number of cards is fewer than the cards needed  
  



**EXAMPLES:**



  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 57 | 52 | 38  
**Output** | Too many cards | Full deck | Not enough cards


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. number_of_cards (input by the user)
  2. cards_needed (already initialized)



Add code to the end of this program that will output whether you have enough
cards to make a full deck of 52 cards (already initialized):

  *     *         Too many cards 

If the number of cards is more than the cards needed  
  

    *         Full deck

If the number of cards is equal to the cards needed  
  

    *         Not enough cards 

If the number of cards is fewer than the cards needed  
  



**EXAMPLES:**



  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 57 | 52 | 38  
**Output** | Too many cards | Full deck | Not enough cards


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
number_of_cards = int(input())
cards_needed = 52

if number_of_cards > cards_needed:
    print(""Too many cards"")
elif number_of_cards == cards_needed:
    print(""Full deck"")
else:
    print(""Not enough cards"")
"
233,a1_4_arrow,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. arrow_height (input by the user in feet)
  2. apple_height (already initialized in feet)



Add code to the end of this program that will output:

  *     *         Arrow too high 

If the arrow height is higher than the apple  
  

    *         Direct hit

If the arrow height is equal to the apple  
  

    *         Arrow too low 

If the arrow is lower than the apple  
  



**EXAMPLES:**



  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 7.1 | 6.2 | 5.9  
**Output** | Arrow too high | Direct hit | Arrow too low


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. arrow_height (input by the user in feet)
  2. apple_height (already initialized in feet)



Add code to the end of this program that will output:

  *     *         Arrow too high 

If the arrow height is higher than the apple  
  

    *         Direct hit

If the arrow height is equal to the apple  
  

    *         Arrow too low 

If the arrow is lower than the apple  
  



**EXAMPLES:**



  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 7.1 | 6.2 | 5.9  
**Output** | Arrow too high | Direct hit | Arrow too low


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
arrow_height = float(input(""Enter the arrow height (in feet): ""))
apple_height = 6.5

# Add code below to determine the relation between arrow height and apple height
if arrow_height > apple_height:
    print(""Arrow too high"")
elif arrow_height == apple_height:
    print(""Direct hit"")
else:
    print(""Arrow too low"")
"
234,a1_3_spheres,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the volume of a multiple
spheres. The template provided to you defines 2 variables:

  * **radius**  \- radius of the sphere
  * **total**  \- The total amount of spheres



Calculate the volume, using the following formula:

V=4/3 π r3 t

Where . . .

  *     * **π**  is the mathematical constant (approximately equal to 3.14... -- see the HINT for more details)
    * **r**  is the radius of the cylinder
    * **t**  is the total amount of spheres



Store the answer in a variable called **  volume**. You do not need to print
the variable.



**HINT:**

The math module contains the mathematical constant, π. To use it, simply type
**math.pi**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the volume of a multiple
spheres. The template provided to you defines 2 variables:

  * **radius**  \- radius of the sphere
  * **total**  \- The total amount of spheres



Calculate the volume, using the following formula:

V=4/3 π r3 t

Where . . .

  *     * **π**  is the mathematical constant (approximately equal to 3.14... -- see the HINT for more details)
    * **r**  is the radius of the cylinder
    * **t**  is the total amount of spheres



Store the answer in a variable called **  volume**. You do not need to print
the variable.



**HINT:**

The math module contains the mathematical constant, π. To use it, simply type
**math.pi**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

radius = 10
total = 5

volume = (4/3) * math.pi * (radius**3) * total
volume
"
235,a1_3_radius,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the volume of multiple
identical cylinders. The template provided to you defines 3 variables:

  * **radius**  \- radius of the cylinders
  * **height** \- height of the cylinders
  * **total**  \- The total amount of cylinders



Calculate the volume, using the following formula:

V = π r2 h t

Where . . .

  *     * **π**  is the mathematical constant (approximately equal to 3.14... -- see the HINT for more details)
    * **r**  is the radius of the cylinder
    * **h  **is the height of the cylinder
    * **t**  is the total amount of cylinders



Store the answer in a variable called **volume**. You do not need to print the
variable.



**HINT:**

The math module contains the mathematical constant, π. To use it, simply type
**math.pi**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the volume of multiple
identical cylinders. The template provided to you defines 3 variables:

  * **radius**  \- radius of the cylinders
  * **height** \- height of the cylinders
  * **total**  \- The total amount of cylinders



Calculate the volume, using the following formula:

V = π r2 h t

Where . . .

  *     * **π**  is the mathematical constant (approximately equal to 3.14... -- see the HINT for more details)
    * **r**  is the radius of the cylinder
    * **h  **is the height of the cylinder
    * **t**  is the total amount of cylinders



Store the answer in a variable called **volume**. You do not need to print the
variable.



**HINT:**

The math module contains the mathematical constant, π. To use it, simply type
**math.pi**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

radius = 5
height = 10
total = 3

volume = math.pi * radius**2 * height * total

volume
"
236,a1_3_interest,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the amount of money a person
will earn from an investment. The template provided to you defines 3
variables:

  * **principal_amount**  \- The principal (i.e., starting) amount of money that a person has
  * **interest_rate**  \- The interest rate
  * **time**  \- The length of the investment (in months)



Calculate the amount of money earned, using the following formula:

    
    
    amount = pert

Where . . .

  *     * **p**  is the principal amount
    * **e**  is the mathematical constant (approximately equal to 2.718... -- see the HINT for more details)
    * **r**  is the interest rate
    * **t**  is the time



Store the answer in a variable called  **amount.** You do not need to print
the variable.



**HINT:**

The math module contains the mathematical constant, e. To use it, simply type
**math.e**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the amount of money a person
will earn from an investment. The template provided to you defines 3
variables:

  * **principal_amount**  \- The principal (i.e., starting) amount of money that a person has
  * **interest_rate**  \- The interest rate
  * **time**  \- The length of the investment (in months)



Calculate the amount of money earned, using the following formula:

    
    
    amount = pert

Where . . .

  *     * **p**  is the principal amount
    * **e**  is the mathematical constant (approximately equal to 2.718... -- see the HINT for more details)
    * **r**  is the interest rate
    * **t**  is the time



Store the answer in a variable called  **amount.** You do not need to print
the variable.



**HINT:**

The math module contains the mathematical constant, e. To use it, simply type
**math.e**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",amount = principal_amount * math.e**(interest_rate*time)
237,a1_3_cones,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the volume of multiple
identical cones. The template provided to you defines 3 variables:

  * **radius**  \- radius of the cones
  * **height** \- height of the cones
  * **total**  \- The total amount of cones



Calculate the volume, using the following formula:

V = π r2(h/3)t

Where . . .

  *     * **π**  is the mathematical constant (approximately equal to 3.14... -- see the HINT for more details)
    * **r**  is the radius of the cones
    * **h  **is the height of the cones
    * **t**  is the total amount of cones



Store the answer in a variable called **volume**. You do not need to print the
variable.



**HINT:**

The math module contains the mathematical constant, e. To use it, simply type
**math.pi**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the volume of multiple
identical cones. The template provided to you defines 3 variables:

  * **radius**  \- radius of the cones
  * **height** \- height of the cones
  * **total**  \- The total amount of cones



Calculate the volume, using the following formula:

V = π r2(h/3)t

Where . . .

  *     * **π**  is the mathematical constant (approximately equal to 3.14... -- see the HINT for more details)
    * **r**  is the radius of the cones
    * **h  **is the height of the cones
    * **t**  is the total amount of cones



Store the answer in a variable called **volume**. You do not need to print the
variable.



**HINT:**

The math module contains the mathematical constant, e. To use it, simply type
**math.pi**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

# Values given in the problem statement
radius = 2.5
height = 10
total = 5

# Calculation of volume
volume = math.pi * radius**2 * (height/3) * total

volume
"
238,a1_3_circles,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the area of multiple
circles. The template provided to you defines 2 variables:

  * **radius**  \- radius of the circle
  * **total**  \- The total amount of circles



Calculate the volume, using the following formula:

V=π r2t

Where . . .

  *     * **π**  is the mathematical constant (approximately equal to 3.14... -- see the HINT for more details)
    * **r** is the radius of the circle
    * **t** is the total amount of circles



Store the answer in a variable called **area**. You do not need to print the
variable.



**HINT:**

The math module contains the mathematical constant, π. To use it, simply type
**math.pi**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the area of multiple
circles. The template provided to you defines 2 variables:

  * **radius**  \- radius of the circle
  * **total**  \- The total amount of circles



Calculate the volume, using the following formula:

V=π r2t

Where . . .

  *     * **π**  is the mathematical constant (approximately equal to 3.14... -- see the HINT for more details)
    * **r** is the radius of the circle
    * **t** is the total amount of circles



Store the answer in a variable called **area**. You do not need to print the
variable.



**HINT:**

The math module contains the mathematical constant, π. To use it, simply type
**math.pi**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

radius = 3
total = 5

# Calculate the area of multiple circles
area = math.pi * radius**2 * total

area
"
239,a1_1_squad,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
PROBLEM STATEMENT:  

Write the Python code needed to get three values from the user:

  1. A string representing the name of a cadet squadron (e.g., Grim Reapers). Store this value in a variable called sqd_name
  2. A floating point value representing average age for all cadets in the squadron. Store this value in a variable called sqd_avg_age
  3. An integer representing the weight of the ICBM in kilograms. Store this value in a variable called sqd_number

IMPORTANT: Your template file contains a print statement that combines these
values to produce an output (see Example). Do not modify this line. Simply add
your input statements in the space provided.

EXAMPLE:

If the user types ""Grim Reapers"", 20.5, and 31, your program should print:

    
    
    Cadet Squadron 31, aka ""Grim Reapers"",
    
    
     has an average cadet age of 20.5.

  


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
PROBLEM STATEMENT:  

Write the Python code needed to get three values from the user:

  1. A string representing the name of a cadet squadron (e.g., Grim Reapers). Store this value in a variable called sqd_name
  2. A floating point value representing average age for all cadets in the squadron. Store this value in a variable called sqd_avg_age
  3. An integer representing the weight of the ICBM in kilograms. Store this value in a variable called sqd_number

IMPORTANT: Your template file contains a print statement that combines these
values to produce an output (see Example). Do not modify this line. Simply add
your input statements in the space provided.

EXAMPLE:

If the user types ""Grim Reapers"", 20.5, and 31, your program should print:

    
    
    Cadet Squadron 31, aka ""Grim Reapers"",
    
    
     has an average cadet age of 20.5.

  


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Get input from the user
sqd_name = input()
sqd_avg_age = float(input())
sqd_number = int(input())

# Print the output
print('Cadet Squadron ' + str(sqd_number) + ', aka ""' + sqd_name + '"",')
print('has an average cadet age of ' + str(sqd_avg_age) + '.')
"
240,a1_1_icbm,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write the Python code needed to get three values from the user:

  1. A string representing the name of an Intercontinental Ballistic Missile (ICBM) (e.g., Minuteman). Store this value in a variable called **  icbm** **_name**
  2. A floating point value representing the length of this missile in meters. Store this value in a variable called  **icbm_length**
  3. An integer representing the weight of the ICBM in kilograms. Store this value in a variable called  **icbm_weight**

**IMPORTANT:** Your template file contains a print statement that combines
these values to produce an output (see Example). **Do not modify this line.**
Simply add your input statements in the space provided.



**EXAMPLE:**

If the user types ""Minuteman"", 16.3, and 290000, your program should print:

    
    
    The Minuteman has a total length of 16.3 meters and it weighs 290000 kilograms.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write the Python code needed to get three values from the user:

  1. A string representing the name of an Intercontinental Ballistic Missile (ICBM) (e.g., Minuteman). Store this value in a variable called **  icbm** **_name**
  2. A floating point value representing the length of this missile in meters. Store this value in a variable called  **icbm_length**
  3. An integer representing the weight of the ICBM in kilograms. Store this value in a variable called  **icbm_weight**

**IMPORTANT:** Your template file contains a print statement that combines
these values to produce an output (see Example). **Do not modify this line.**
Simply add your input statements in the space provided.



**EXAMPLE:**

If the user types ""Minuteman"", 16.3, and 290000, your program should print:

    
    
    The Minuteman has a total length of 16.3 meters and it weighs 290000 kilograms.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
icbm_name = input()
icbm_length = float(input())
icbm_weight = int(input())

print(""The"", icbm_name, ""has a total length of"", icbm_length, ""meters and it weighs"", icbm_weight, ""kilograms."")
"
241,a1_1_dorms,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write the Python code needed to get three values from the user:

  1. A string representing the name of an USAFA dormitory (e.g., Vandenburg). Store this value in a variable called **dorm** **_name**
  2. A floating point value representing the total area, in square feet, that the dormitory contains. Store this value in a variable called **dorm_area**
  3. An integer representing the number cadets living in this dormitory. Store this value in a variable called **dorm_population**

**IMPORTANT:** Your template file contains a print statement that combines
these values to produce an output (see Example). **Do not modify this line.**
Simply add your input statements in the space provided.



**EXAMPLE:**

If the user types ""Vandenberg"", 63383.5, and 1720, your program should print:

    
    
    The Vandenburg dormitory has an area of 63383.5 square feet and has 1720 cadets living in it.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write the Python code needed to get three values from the user:

  1. A string representing the name of an USAFA dormitory (e.g., Vandenburg). Store this value in a variable called **dorm** **_name**
  2. A floating point value representing the total area, in square feet, that the dormitory contains. Store this value in a variable called **dorm_area**
  3. An integer representing the number cadets living in this dormitory. Store this value in a variable called **dorm_population**

**IMPORTANT:** Your template file contains a print statement that combines
these values to produce an output (see Example). **Do not modify this line.**
Simply add your input statements in the space provided.



**EXAMPLE:**

If the user types ""Vandenberg"", 63383.5, and 1720, your program should print:

    
    
    The Vandenburg dormitory has an area of 63383.5 square feet and has 1720 cadets living in it.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Get user inputs
dorm_name = input()
dorm_area = float(input())
dorm_population = int(input())

# Print the output
print(""The "" + dorm_name + "" dormitory has an area of "" + str(dorm_area) + "" square feet and has "" + str(dorm_population) + "" cadets living in it."")
"
242,a1_1_bases,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write the Python code needed to get three values from the user:

  1. A string representing the name of an Air Force Base (e.g., Travis). Store this value in a variable called **  base** **_name**
  2. A floating point value representing the area of this base in acres. Store this value in a variable called  **base_acres**
  3. An integer representing the number of buildings on this base. Store this value in a variable called  **building_** **quantity**

**IMPORTANT:** Your template file contains a print statement that combines
these values to produce an output (see Example). **Do not modify this line.**
Simply add your input statements in the space provided.



**EXAMPLE:**

If the user types ""Travis"", 6383.5, and 1720, your program should print:

    
    
    Travis Air Force Base sits on 6383.5 acres and has 1720 buildings on it.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write the Python code needed to get three values from the user:

  1. A string representing the name of an Air Force Base (e.g., Travis). Store this value in a variable called **  base** **_name**
  2. A floating point value representing the area of this base in acres. Store this value in a variable called  **base_acres**
  3. An integer representing the number of buildings on this base. Store this value in a variable called  **building_** **quantity**

**IMPORTANT:** Your template file contains a print statement that combines
these values to produce an output (see Example). **Do not modify this line.**
Simply add your input statements in the space provided.



**EXAMPLE:**

If the user types ""Travis"", 6383.5, and 1720, your program should print:

    
    
    Travis Air Force Base sits on 6383.5 acres and has 1720 buildings on it.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
base_name = input()
base_acres = float(input())
building_quantity = int(input())

print(base_name, ""Air Force Base sits on"", base_acres, ""acres and has"", building_quantity, ""buildings on it."")
"
243,a1_1_aircraft,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


Write the Python code needed to get three values from the user:

  1. A string representing the name of an aircraft (e.g., F-16). Store this value in a variable called  **aircraft_name**
  2. A floating point value representing the maximum speed of the aircraft. Store this value in a variable called  **aircraft_speed**
  3. An integer representing the number of airplanes of this type owned by the USAF. Store this value in a variable called  **quantity**

**IMPORTANT:** Your template file contains a print statement that combines
these values to produce an output (see Example). **Do not modify this line.**
Simply add your input statements in the space provided.



**EXAMPLE:**

If the user types ""F-16"", 1500.1, and 600, your program should print:

    
    
    The F-16 has a top speed of 1500.1 MPH. The USAF has 600 in its inventory. 


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


Write the Python code needed to get three values from the user:

  1. A string representing the name of an aircraft (e.g., F-16). Store this value in a variable called  **aircraft_name**
  2. A floating point value representing the maximum speed of the aircraft. Store this value in a variable called  **aircraft_speed**
  3. An integer representing the number of airplanes of this type owned by the USAF. Store this value in a variable called  **quantity**

**IMPORTANT:** Your template file contains a print statement that combines
these values to produce an output (see Example). **Do not modify this line.**
Simply add your input statements in the space provided.



**EXAMPLE:**

If the user types ""F-16"", 1500.1, and 600, your program should print:

    
    
    The F-16 has a top speed of 1500.1 MPH. The USAF has 600 in its inventory. 


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
aircraft_name = input()
aircraft_speed = float(input())
quantity = int(input())

print(""The"", aircraft_name, ""has a top speed of"", aircraft_speed, ""MPH. The USAF has"", quantity, ""in its inventory."")
"
244,lsn21_bouncingball,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Using the pythonGraph animation template, create an animation of a bouncing
ball. Your ball should start at a random location, and change direction each
time it hits a side, top, or bottom of the window.  
  



**CHALLENGE:**

  1. Try to make the ball change color every time it hits a wall.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Using the pythonGraph animation template, create an animation of a bouncing
ball. Your ball should start at a random location, and change direction each
time it hits a side, top, or bottom of the window.  
  



**CHALLENGE:**

  1. Try to make the ball change color every time it hits a wall.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from graphics import *

def main():
    win = GraphWin(""Bouncing Ball"", 500, 500)
    win.setBackground(""white"")
    
    ball = Circle(Point(250, 250), 20)
    ball.setFill(""red"")
    ball.draw(win)
    
    dx = 5
    dy = 5
    
    while True:
        ball.move(dx, dy)
        center = ball.getCenter()
        
        if center.getX() + 20 >= 500 or center.getX() - 20 <= 0:
            dx = -dx
            ball.setFill(""blue"")
        if center.getY() + 20 >= 500 or center.getY() - 20 <= 0:
            dy = -dy
            ball.setFill(""green"")
    
    win.getMouse()
    win.close()

main()
"
245,lsn21_bouncingtriangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Using the Bouncing Ball from the previous lab as a starting point, generate
an animation of a bouncing triangle. The triangle's vertices should start at
random locations, and bounce whenever the triangle hits a wall.





**HINTS** :

  * Try drawing 3 bouncing balls on the screen.
  * Once the balls are moving correctly, draw 3 lines to connect them!


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Using the Bouncing Ball from the previous lab as a starting point, generate
an animation of a bouncing triangle. The triangle's vertices should start at
random locations, and bounce whenever the triangle hits a wall.





**HINTS** :

  * Try drawing 3 bouncing balls on the screen.
  * Once the balls are moving correctly, draw 3 lines to connect them!


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pygame, sys
from pygame.locals import *
import random

# set up pygame
pygame.init()

# set up the window
WINDOWWIDTH = 800
WINDOWHEIGHT = 600
windowSurface = pygame.display.set_mode((WINDOWWIDTH, WINDOWHEIGHT), 0, 32)
pygame.display.set_caption('Bouncing Triangle')

# set up the colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)

# set up the triangle's vertices
x1 = random.randint(0, WINDOWWIDTH)
y1 = random.randint(0, WINDOWHEIGHT)
x2 = random.randint(0, WINDOWWIDTH)
y2 = random.randint(0, WINDOWHEIGHT)
x3 = random.randint(0, WINDOWWIDTH)
y3 = random.randint(0, WINDOWHEIGHT)

# set up the triangle's velocities
vx1 = random.randint(-5, 5)
vy1 = random.randint(-5, 5)
vx2 = random.randint(-5, 5)
vy2 = random.randint(-5, 5)
vx3 = random.randint(-5, 5)
vy3 = random.randint(-5, 5)

while True:
    # check for the QUIT event
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            sys.exit()

    # draw the black background onto the surface
    windowSurface.fill(BLACK)

    # update the triangle's positions
    x1 += vx1
    y1 += vy1
    x2 += vx2
    y2 += vy2
    x3 += vx3
    y3 += vy3

    # check if the triangle hits a wall
    if y1 < 0 or y1 > WINDOWHEIGHT:
        vy1 = -vy1
    if x1 < 0 or x1 > WINDOWWIDTH:
        vx1 = -vx1
    if y2 < 0 or y2 > WINDOWHEIGHT:
        vy2 = -vy2
    if x2 < 0 or x2 > WINDOWWIDTH:
        vx2 = -vx2
    if y3 < 0 or y3 > WINDOWHEIGHT:
        vy3 = -vy3
    if x3 < 0 or x3 > WINDOWWIDTH:
        vx3 = -vx3

    # draw the triangle
    pygame.draw.polygon(windowSurface, WHITE, [(x1, y1), (x2, y2), (x3, y3)], 0)

    # draw the lines
    pygame.draw.line(windowSurface, WHITE, (x1, y1), (x2, y2))
    pygame.draw.line(windowSurface, WHITE, (x2, y2), (x3, y3))
    pygame.draw.line(windowSurface, WHITE, (x3, y3), (x1, y1))

    # update the display
    pygame.display.update()

    # set the frame rate
    pygame.time.Clock().tick(60)
"
246,lsn12_fastestcar,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a Python program with the definition of a new function named fastest_car
and takes two lists of car info as parameters. The function will then
**return** the car model name with the higher top speed or ""Same speed"" if the
top speeds are the same.

The two parameters to the function are both a list with the same 3 types of
elements, as follows:

  
| **Car Model** | **Cost** | **Top Speed**  
---|---|---|---  
**Value** | Ford Mustang | 27205.00 | 163  
  


| **Car Model** | **Cost** | **Top Speed**  
---|---|---|---  
**Value** | Chevy Corvette | 66400.00 | 194  
  


**EXAMPLE** :

| **Example**  
---|---  
**Input Parameters to** `fastest_car()` |

`fastest_car([""Ford Mustang"", 27205.00, 163], [""Chevy Corvette"", 66400.00,
194])`  
  
**Outputs** | Chevy Corvette


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a Python program with the definition of a new function named fastest_car
and takes two lists of car info as parameters. The function will then
**return** the car model name with the higher top speed or ""Same speed"" if the
top speeds are the same.

The two parameters to the function are both a list with the same 3 types of
elements, as follows:

  
| **Car Model** | **Cost** | **Top Speed**  
---|---|---|---  
**Value** | Ford Mustang | 27205.00 | 163  
  


| **Car Model** | **Cost** | **Top Speed**  
---|---|---|---  
**Value** | Chevy Corvette | 66400.00 | 194  
  


**EXAMPLE** :

| **Example**  
---|---  
**Input Parameters to** `fastest_car()` |

`fastest_car([""Ford Mustang"", 27205.00, 163], [""Chevy Corvette"", 66400.00,
194])`  
  
**Outputs** | Chevy Corvette


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def fastest_car(car1, car2):
    if car1[2] > car2[2]:
        return car1[0]
    elif car1[2] < car2[2]:
        return car2[0]
    else:
        return ""Same speed"""
247,lsn12_listrange,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a Python program that obtains two whole numbers that represent the start
and stop values for a range of numbers. You may assume the second number is
always greater than the first.

Using these start and stop values, print the two following items in order:

1.  Print a list that starts at the start value and ends at (the list contains) the stop value

**HINT** : Use `range()` to accomplish this. In order to print the result from
range() as a list, surround it with list(), `list(range(#,#))`, like you
surround input() with int() or float(), `int(input())`.

2.  Print the size (how many numbers are contained) of that list



**EXAMPLE:**

| **Example 1** | **Example 2**  
---|---|---  
**Inputs** |

1

10

|

1023

1029  
  
**Outputs** | [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  
10 |

[1023, 1024, 1025, 1026, 1027, 1028, 1029]  
7


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a Python program that obtains two whole numbers that represent the start
and stop values for a range of numbers. You may assume the second number is
always greater than the first.

Using these start and stop values, print the two following items in order:

1.  Print a list that starts at the start value and ends at (the list contains) the stop value

**HINT** : Use `range()` to accomplish this. In order to print the result from
range() as a list, surround it with list(), `list(range(#,#))`, like you
surround input() with int() or float(), `int(input())`.

2.  Print the size (how many numbers are contained) of that list



**EXAMPLE:**

| **Example 1** | **Example 2**  
---|---|---  
**Inputs** |

1

10

|

1023

1029  
  
**Outputs** | [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  
10 |

[1023, 1024, 1025, 1026, 1027, 1028, 1029]  
7


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","start = int(input())
stop = int(input())

num_list = list(range(start, stop+1))
size = len(num_list)

print(num_list)
print(size)"
248,lsn22_paint,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Using PythonGraph, create a simple paint application. Your program should draw
circles on the window whenever the user presses the left mouse button. Your
program should also watch for keyboard inputs, and allow the user to change
colors and the size of the circle by pressing on different keys of your
choice.

The code template of a paint program has been provided to you as a starting
point in paint. Use this code and make the necessary modifications in the
Animation while loop.

When you are finished, upload your Python code.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Using PythonGraph, create a simple paint application. Your program should draw
circles on the window whenever the user presses the left mouse button. Your
program should also watch for keyboard inputs, and allow the user to change
colors and the size of the circle by pressing on different keys of your
choice.

The code template of a paint program has been provided to you as a starting
point in paint. Use this code and make the necessary modifications in the
Animation while loop.

When you are finished, upload your Python code.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from PythonGraph import canvas, COLORS

# Creates the canvas
win = canvas.Cartesian(title=""Paint Program"", width=800, height=600)

# Initializes variables for circle size and color
circle_size = 30
circle_color = COLORS.GREEN

# Event handler for mouse click
def handle_mouse_click(x, y):
    # Draws a circle at the mouse click coordinates
    win.draw_circle(x, y, circle_size, color=circle_color)

# Event handler for keyboard input
def handle_key_press(key):
    global circle_size, circle_color
    
    # Change circle size based on key pressed
    if key == '1':
        circle_size = 10
    elif key == '2':
        circle_size = 20
    elif key == '3':
        circle_size = 30

    # Change circle color based on key pressed
    elif key == 'r':
        circle_color = COLORS.RED
    elif key == 'g':
        circle_color = COLORS.GREEN
    elif key == 'b':
        circle_color = COLORS.BLUE

# Binds event handlers to window events
win.on_mouse_click(handle_mouse_click)
win.on_key_press(handle_key_press)

# Animation loop
while True:
    win.update()
```

Note: This solution assumes that you have already imported the `canvas` module from `PythonGraph`."
249,lsn12_pftscores,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

You are provided a list of PFT scores, already in the lab template, in a
variable `pft_scores` arranged in no particular order.

Write a Python program that obtains a new score from the user. If the score is
valid (above zero and no greater than 500), add it to the list and print out
the following two stats in this order:

1\. **average score  ** HINT: use the functions `len()` and `sum()` on your
list to find the average

2\. **range of scores** , the difference between the largest score and
smallest score. HINT: use the functions `min()` and `max()` on your list to
find the range

If the score is invalid (below zero or above 500), instead print:  ""Invalid
score provided"".



**EXAMPLE:**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | -5 | 328 | 65  
**Outputs** | Invalid score provided |

291.8

403

|

274.26666666666665

408  
  




  




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

You are provided a list of PFT scores, already in the lab template, in a
variable `pft_scores` arranged in no particular order.

Write a Python program that obtains a new score from the user. If the score is
valid (above zero and no greater than 500), add it to the list and print out
the following two stats in this order:

1\. **average score  ** HINT: use the functions `len()` and `sum()` on your
list to find the average

2\. **range of scores** , the difference between the largest score and
smallest score. HINT: use the functions `min()` and `max()` on your list to
find the range

If the score is invalid (below zero or above 500), instead print:  ""Invalid
score provided"".



**EXAMPLE:**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | -5 | 328 | 65  
**Outputs** | Invalid score provided |

291.8

403

|

274.26666666666665

408  
  




  




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
pft_scores = [200, 250, 300, 350, 400]

score = int(input())

if score > 0 and score <= 500:
    pft_scores.append(score)
    average_score = sum(pft_scores) / len(pft_scores)
    score_range = max(pft_scores) - min(pft_scores)
    print(average_score)
    print(score_range)
else:
    print(""Invalid score provided"")
"
250,lsn22_soundboard,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Using PythonGraph, create a ""soundboard"" application. Your program should
display a list of colored buttons (i.e., rectangles). When the user clicks
inside of a rectangle, the program plays a different
sound.[](https://canvas.instructure.com/courses/1762383/files/86200052/download?download_frd=1)

The provided template file comes with a single button implemented. Your job is
to study this code and create at least 5 other buttons. Note: The buttons do
not have to be laid out in the same arrangement, but they should look
organized.

When you are finished, upload your Python code. Do NOT upload any of the sound
files.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Using PythonGraph, create a ""soundboard"" application. Your program should
display a list of colored buttons (i.e., rectangles). When the user clicks
inside of a rectangle, the program plays a different
sound.[](https://canvas.instructure.com/courses/1762383/files/86200052/download?download_frd=1)

The provided template file comes with a single button implemented. Your job is
to study this code and create at least 5 other buttons. Note: The buttons do
not have to be laid out in the same arrangement, but they should look
organized.

When you are finished, upload your Python code. Do NOT upload any of the sound
files.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pygame
import pygbutton

# Define the colors
WHITE = (255, 255, 255)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
YELLOW = (255, 255, 0)
PURPLE = (255, 0, 255)

# Initialize pygame
pygame.init()

# Set the dimensions of the window
window_width = 800
window_height = 600
window_size = (window_width, window_height)
window_surface = pygame.display.set_mode(window_size)
pygame.display.set_caption(""Soundboard"")

# Create buttons
button1 = pygbutton.PygButton((100, 100, 100, 100), 'Button 1')
button2 = pygbutton.PygButton((300, 100, 100, 100), 'Button 2')
button3 = pygbutton.PygButton((500, 100, 100, 100), 'Button 3')
button4 = pygbutton.PygButton((200, 300, 100, 100), 'Button 4')
button5 = pygbutton.PygButton((400, 300, 100, 100), 'Button 5')
button6 = pygbutton.PygButton((600, 300, 100, 100), 'Button 6')

# Create a list of buttons
buttons = [button1, button2, button3, button4, button5, button6]

# Create a dictionary to store sound files and their corresponding buttons
sound_mapping = {
    button1: ""sound1.wav"",
    button2: ""sound2.wav"",
    button3: ""sound3.wav"",
    button4: ""sound4.wav"",
    button5: ""sound5.wav"",
    button6: ""sound6.wav""
}

# Run the game loop
running = True
while running:
    # Fill the window with white color
    window_surface.fill(WHITE)

    # Check for events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        # Check for button clicks
        if ""click"" in button1.handleEvent(event):
            # Play sound file for button 1
            pygame.mixer.music.load(sound_mapping[button1])
            pygame.mixer.music.play()

        if ""click"" in button2.handleEvent(event):
            # Play sound file for button 2
            pygame.mixer.music.load(sound_mapping[button2])
            pygame.mixer.music.play()

        if ""click"" in button3.handleEvent(event):
            # Play sound file for button 3
            pygame.mixer.music.load(sound_mapping[button3])
            pygame.mixer.music.play()

        if ""click"" in button4.handleEvent(event):
            # Play sound file for button 4
            pygame.mixer.music.load(sound_mapping[button4])
            pygame.mixer.music.play()

        if ""click"" in button5.handleEvent(event):
            # Play sound file for button 5
            pygame.mixer.music.load(sound_mapping[button5])
            pygame.mixer.music.play()

        if ""click"" in button6.handleEvent(event):
            # Play sound file for button 6
            pygame.mixer.music.load(sound_mapping[button6])
            pygame.mixer.music.play()

    # Draw buttons
    for button in buttons:
        button.draw(window_surface)

    # Update the display
    pygame.display.update()

# Quit pygame
pygame.quit()
"
251,lsn8_practice4,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that asks the user for the area of three plots of land.

  * The first area will be provided to you in ACRES
  * The second area will be provided to you in SQUARE MILES
  * The third area will be provided to you in SQUARE KILOMETERS

Your program will output ""Plot X is the biggest"", replacing X with either a 1,
2, or 3 depending on if the first, second, or third plot of land is the
biggest, respectively.  For this problem, you may assume that the plots are
all different sizes (e.g., no two plots will be the same size)



**NOTES:**

  * **1 acre = 0.0015625 square miles**
  * **1 sq kilometer = 0.386102 square miles**



**EXAMPLES:**

| **EXAMPLE 1** | **EXAMPLE 2**  
---|---|---  
**Inputs** |

35  
0.25  
1

|

150  
1  
2.2  
  
**Expected Output** | Plot 3 is the biggest | Plot 2 is the biggest  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that asks the user for the area of three plots of land.

  * The first area will be provided to you in ACRES
  * The second area will be provided to you in SQUARE MILES
  * The third area will be provided to you in SQUARE KILOMETERS

Your program will output ""Plot X is the biggest"", replacing X with either a 1,
2, or 3 depending on if the first, second, or third plot of land is the
biggest, respectively.  For this problem, you may assume that the plots are
all different sizes (e.g., no two plots will be the same size)



**NOTES:**

  * **1 acre = 0.0015625 square miles**
  * **1 sq kilometer = 0.386102 square miles**



**EXAMPLES:**

| **EXAMPLE 1** | **EXAMPLE 2**  
---|---|---  
**Inputs** |

35  
0.25  
1

|

150  
1  
2.2  
  
**Expected Output** | Plot 3 is the biggest | Plot 2 is the biggest  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
acre_to_sq_mile = 0.0015625
sq_km_to_sq_mile = 0.386102

# Get input from the user
plot1 = float(input())
plot2 = float(input())
plot3 = float(input())

# Convert plot1 to square miles
plot1_sq_mile = plot1 * acre_to_sq_mile

# Convert plot3 to square miles
plot3_sq_mile = plot3 * sq_km_to_sq_mile

# Check which plot is the biggest
if plot1_sq_mile > plot2 and plot1_sq_mile > plot3_sq_mile:
    print(""Plot 1 is the biggest"")
elif plot2 > plot1_sq_mile and plot2 > plot3_sq_mile:
    print(""Plot 2 is the biggest"")
else:
    print(""Plot 3 is the biggest"")
"
252,lsn8_practice3,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that asks the user for the price of an item in US dollars /
cents.  Then calculate and print out the equivalent price of the item in:

  *     * British Pounds (1.25 USD per Pound)
    * Korean Won (1 Won == 0.00083 USD)
    * Mexican Pesos (1 Peso == 53.81 Won)

Print each currency on a separate line.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that asks the user for the price of an item in US dollars /
cents.  Then calculate and print out the equivalent price of the item in:

  *     * British Pounds (1.25 USD per Pound)
    * Korean Won (1 Won == 0.00083 USD)
    * Mexican Pesos (1 Peso == 53.81 Won)

Print each currency on a separate line.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
price = float(input(""Enter the price in US dollars/cents: ""))

british_pounds = price / 1.25
korean_won = price / 0.00083
mexican_pesos = korean_won / 53.81

print(british_pounds)
print(korean_won)
print(mexican_pesos)
"
253,lsn8_practice2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a program that gets two (x, y) coordinates from
the user in the following order: x1, y1, x2, y2.  Write a program that
calculates the distance between these two points, and prints them out. The
distance formula is  ( x 1 x 2 ) 2 + ( y 1 y 2 ) 2

HINT:  You will have to use the math module.



**EXAMPLES:**

| **EXAMPLE 1** | **EXAMPLE 2**  
---|---|---  
**Inputs** |

5.0  
10.0

8.0  
16.0

|

8.3  
-5.0

-9.3  
4.6  
  
**Expected Output (within 0.01)** | 6.708 | 20.047


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a program that gets two (x, y) coordinates from
the user in the following order: x1, y1, x2, y2.  Write a program that
calculates the distance between these two points, and prints them out. The
distance formula is  ( x 1 x 2 ) 2 + ( y 1 y 2 ) 2

HINT:  You will have to use the math module.



**EXAMPLES:**

| **EXAMPLE 1** | **EXAMPLE 2**  
---|---|---  
**Inputs** |

5.0  
10.0

8.0  
16.0

|

8.3  
-5.0

-9.3  
4.6  
  
**Expected Output (within 0.01)** | 6.708 | 20.047


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

x1 = float(input())
y1 = float(input())
x2 = float(input())
y2 = float(input())

distance = math.sqrt((x2 - x1)**2 + (y2 - y1)**2)
print(""{:.3f}"".format(distance))
"
254,lsn8_practice1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with an incomplete Python program that prints out a
message with the class year.  Write the appropriate input statement above this
line to make this program work.



**EXAMPLE:** ****

If the user types ""2014"", your program should print:

    
    
    Members of the class of 2014 arrived at USAFA in 2010


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with an incomplete Python program that prints out a
message with the class year.  Write the appropriate input statement above this
line to make this program work.



**EXAMPLE:** ****

If the user types ""2014"", your program should print:

    
    
    Members of the class of 2014 arrived at USAFA in 2010


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
255,lsn4_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that gets a cadet's age, and stores it in a variable called
**your_age.**

Print the user's age + 4.

For example, if the user types:

    
    
     18

Your program should print:

    
    
    22


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that gets a cadet's age, and stores it in a variable called
**your_age.**

Print the user's age + 4.

For example, if the user types:

    
    
     18

Your program should print:

    
    
    22


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
your_age = int(input())
print(your_age + 4)
"
256,lsn4_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Create a variable called  **name,  **and set it equal to your name
(represented as a string--don't forget to use the quotation marks!).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Create a variable called  **name,  **and set it equal to your name
(represented as a string--don't forget to use the quotation marks!).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","name = ""Your Name"""
257,lsn4_scoreaverage,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that prompts the user for three sports game scores and
outputs the average.

  
**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15  
12 | 89  
103  
63 | 14  
42  
36  
Output | 11.666666666666666 | 85.0 | 30.666666666666668  
  
**Note: Output must match (within a predefined tolerance).**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that prompts the user for three sports game scores and
outputs the average.

  
**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15  
12 | 89  
103  
63 | 14  
42  
36  
Output | 11.666666666666666 | 85.0 | 30.666666666666668  
  
**Note: Output must match (within a predefined tolerance).**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_average():
    score1 = float(input())
    score2 = float(input())
    score3 = float(input())
    
    average = (score1 + score2 + score3) / 3
    
    return average
"
258,lsn4_pointspread,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

A ""Point Spread"" is a term used to in sports (and gambling) to describe the
difference between two teams' scores. For example, if one team scores 20
points and another team scores 30 points, the point spread is 10. A point
spread is always a positive number.

Write an algorithm that prompts the user for two sports game scores and
outputs the point spread.  
  
**  
EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15 | 89  
103 | 42  
14  
Output | 7 | 14 | 28  
  
**Note: Output must match exactly.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

A ""Point Spread"" is a term used to in sports (and gambling) to describe the
difference between two teams' scores. For example, if one team scores 20
points and another team scores 30 points, the point spread is 10. A point
spread is always a positive number.

Write an algorithm that prompts the user for two sports game scores and
outputs the point spread.  
  
**  
EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15 | 89  
103 | 42  
14  
Output | 7 | 14 | 28  
  
**Note: Output must match exactly.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","score1 = int(input())
score2 = int(input())

point_spread = abs(score1 - score2)

print(point_spread)"
259,lsn4_madlib,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Mad Libs are activities that have a person provide various words, which are
then used to complete a short story in unexpected (and hopefully funny) ways.
(EDITOR'S NOTE: Do you kids even do Mad Libs anymore?)

Complete the program to read the needed values from input, that the existing
output statement(s) can use to output a short story.

**EXAMPLE:**

If the input is:

    
    
    Eric
    Chipotle
    12
    burritos
    

Then the output is:

    
    
    Eric went to Chipotle to buy 12 different types of burritos


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Mad Libs are activities that have a person provide various words, which are
then used to complete a short story in unexpected (and hopefully funny) ways.
(EDITOR'S NOTE: Do you kids even do Mad Libs anymore?)

Complete the program to read the needed values from input, that the existing
output statement(s) can use to output a short story.

**EXAMPLE:**

If the input is:

    
    
    Eric
    Chipotle
    12
    burritos
    

Then the output is:

    
    
    Eric went to Chipotle to buy 12 different types of burritos


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","name = input()
place = input()
number = input()
food = input()

print(name + "" went to "" + place + "" to buy "" + number + "" different types of "" + food)"
260,lsn4_girlscouts,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that asks the user for the amount of money he/she has on
hand, and outputs the number of girl scout cookies that he/she can purchase.
Use the following prices:

$5 per box for the ""Super Six"" (Thin Mints, Samoas, Tagalongs, Do-Si-Dos,
Trefoils, Savannah Smiles)  
$6 per box for the Specialty Cookies (S'mores, Toffee-tastic)

**For this problem, assume that the user will buy all of one or the other. In
other words, output the number of boxes that he/she would be able to obtain if
he/she bought nothing but the Super Six, and nothing but the Specialty
Cookies.**

**HINT:**  
You can convert a number to an integer by using the int() function. For
example:  
 **int(2.51)** will convert the number to 2

EXAMPLE:  
If the input is:

    
    
    26

Then the output is:

    
    
    5 boxes of Thin Mints, Samoas, Tagalongs, Do-Si-Dos, Trefoils, or Savannah Smiles  
    4 boxes of S'mores and Toffee-tastic


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that asks the user for the amount of money he/she has on
hand, and outputs the number of girl scout cookies that he/she can purchase.
Use the following prices:

$5 per box for the ""Super Six"" (Thin Mints, Samoas, Tagalongs, Do-Si-Dos,
Trefoils, Savannah Smiles)  
$6 per box for the Specialty Cookies (S'mores, Toffee-tastic)

**For this problem, assume that the user will buy all of one or the other. In
other words, output the number of boxes that he/she would be able to obtain if
he/she bought nothing but the Super Six, and nothing but the Specialty
Cookies.**

**HINT:**  
You can convert a number to an integer by using the int() function. For
example:  
 **int(2.51)** will convert the number to 2

EXAMPLE:  
If the input is:

    
    
    26

Then the output is:

    
    
    5 boxes of Thin Mints, Samoas, Tagalongs, Do-Si-Dos, Trefoils, or Savannah Smiles  
    4 boxes of S'mores and Toffee-tastic


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_cookies(money):
    # Calculate the number of boxes for the Super Six
    super_six_price = 5
    super_six_boxes = int(money / super_six_price)

    # Calculate the number of boxes for the Specialty Cookies
    specialty_price = 6
    specialty_boxes = int(money / specialty_price)

    return super_six_boxes, specialty_boxes

money = float(input())
super_six_boxes, specialty_boxes = calculate_cookies(money)

print(f""{super_six_boxes} boxes of Thin Mints, Samoas, Tagalongs, Do-Si-Dos, Trefoils, or Savannah Smiles"")
print(f""{specialty_boxes} boxes of S'mores and Toffee-tastic"")
"
261,lsn4_arrivaltime,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write an algorithm that prompts the user for a distance to travel (in miles)
and a speed (in mph) and outputs time of arrival in hours.

  
**For Example:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 72  
60 | 1282  
85 | 120.5  
59.2  
Output | 1.2 | 15.0823 | 2.0355  
  
**Note: Output needs to match the examples.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write an algorithm that prompts the user for a distance to travel (in miles)
and a speed (in mph) and outputs time of arrival in hours.

  
**For Example:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 72  
60 | 1282  
85 | 120.5  
59.2  
Output | 1.2 | 15.0823 | 2.0355  
  
**Note: Output needs to match the examples.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","# Prompt the user for distance and speed
distance = float(input(""Enter the distance to travel (in miles): ""))
speed = float(input(""Enter the speed (in mph): ""))

# Calculate the time of arrival in hours
time_of_arrival = distance / speed

# Print the time of arrival
print(time_of_arrival)"
262,lsn23_tokens,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python program that asks the user for the name of a file.

Your program should then read this file and count how many times each token
(i.e., word) appears (NOTE: to keep it simple, and split on the ). Finally,
let the user type a token, and print how many times that token appears (if a
word is not in your dictionary, print 0).



**HINTS:**

  * You have been provided with the file review.txt to test your code.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python program that asks the user for the name of a file.

Your program should then read this file and count how many times each token
(i.e., word) appears (NOTE: to keep it simple, and split on the ). Finally,
let the user type a token, and print how many times that token appears (if a
word is not in your dictionary, print 0).



**HINTS:**

  * You have been provided with the file review.txt to test your code.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def count_tokens(file_name):
    token_counts = {}
    with open(file_name, 'r') as file:
        for line in file:
            tokens = line.strip().split()
            for token in tokens:
                if token in token_counts:
                    token_counts[token] += 1
                else:
                    token_counts[token] = 1
    return token_counts


def main():
    file_name = input(""Enter the name of the file: "")
    token_counts = count_tokens(file_name)
    token = input(""Enter a token: "")
    if token in token_counts:
        print(token_counts[token])
    else:
        print(0)


if __name__ == ""__main__"":
    main()
"
263,lsn23_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You are being provided with a function called `mini_sort` that takes two
numbers as parameters. Modify this function so that it returns a tuple
containing the numbers in ascending order.



**EXAMPLES:**

`mini_sort(1, 2)` should return the tuple:  (1, 2)

`mini_sort(50, 40)` should return the tuple:  (40, 50)




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You are being provided with a function called `mini_sort` that takes two
numbers as parameters. Modify this function so that it returns a tuple
containing the numbers in ascending order.



**EXAMPLES:**

`mini_sort(1, 2)` should return the tuple:  (1, 2)

`mini_sort(50, 40)` should return the tuple:  (40, 50)




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def mini_sort(a, b):
    if a > b:
        return (b, a)
    else:
        return (a, b)
"
264,lsn23_crashes,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with  crashdata_subset1.csv file.  Here is a typical
line from the file:



`2015, 1, 5, 0, 2-Car, No Injury, Following Too Closely, W 3rd`



Each position in the line represents a different ""data element"". Here is a key
for your reference:

| Year | Month | Day | Hour | Accident Type | Injury Type | Reason | Location  
---|---|---|---|---|---|---|---|---  
Value | **2015** | **1** | **5** | **0** | **2-Car** | **No Injury** |
**Following Too Closely** | **W** 3rd  
  
  
Create a Python function called `get_accident_types` that takes the name of a
file as a parameter. Your function should open the file, read its contents,
and return a  **set**  containing all of the unique accident types.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with  crashdata_subset1.csv file.  Here is a typical
line from the file:



`2015, 1, 5, 0, 2-Car, No Injury, Following Too Closely, W 3rd`



Each position in the line represents a different ""data element"". Here is a key
for your reference:

| Year | Month | Day | Hour | Accident Type | Injury Type | Reason | Location  
---|---|---|---|---|---|---|---|---  
Value | **2015** | **1** | **5** | **0** | **2-Car** | **No Injury** |
**Following Too Closely** | **W** 3rd  
  
  
Create a Python function called `get_accident_types` that takes the name of a
file as a parameter. Your function should open the file, read its contents,
and return a  **set**  containing all of the unique accident types.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def get_accident_types(file_name):
    types = set()
    with open(file_name, 'r') as file:
        for line in file:
            accident_type = line.split(',')[4]
            types.add(accident_type)
    return types"
265,lsn18_triangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write an algorithm that asks the user for X and Y coordinates of a single
point (the coordinates of the top left point on the triangle), the length of
the base, and the height of a right triangle. Then, open a graphics window and
draw the triangle. The area of the triangle is should be displayed at the
bottom center of the window in black.



**HINTS:**

  * Make sure you get the user input BEFORE you open the window. Otherwise, the program will freeze.
  * The `draw_text` function will draw text on a screen. Don't worry about getting the text EXACTLY in the center (it's hard!).




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write an algorithm that asks the user for X and Y coordinates of a single
point (the coordinates of the top left point on the triangle), the length of
the base, and the height of a right triangle. Then, open a graphics window and
draw the triangle. The area of the triangle is should be displayed at the
bottom center of the window in black.



**HINTS:**

  * Make sure you get the user input BEFORE you open the window. Otherwise, the program will freeze.
  * The `draw_text` function will draw text on a screen. Don't worry about getting the text EXACTLY in the center (it's hard!).




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import graphics

win = graphics.GraphWin(""Triangle Area"", 400, 400)

# Get user input
x = float(input(""Enter X coordinate: ""))
y = float(input(""Enter Y coordinate: ""))
base = float(input(""Enter base length: ""))
height = float(input(""Enter height: ""))

# Calculate area
area = 0.5 * base * height

# Draw triangle
p1 = graphics.Point(x, y)
p2 = graphics.Point(x + base, y)
p3 = graphics.Point(x + base/2, y + height)
triangle = graphics.Polygon(p1, p2, p3)
triangle.setFill(""white"")
triangle.draw(win)

# Draw text
text = graphics.Text(graphics.Point(200, 380), ""Area: {0}"".format(area))
text.setTextColor(""black"")
text.draw(win)

win.getMouse()
win.close()
"
266,lsn18_stamp,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Create a pythonGraph function called `draw_stamp` that accepts an x and y
coordinate as parameters. Add code so that this function will then draw a
picture (of your choosing) centered on that coordinate.



To test your function, create a pythonGraph window, and call your function
several times (each time, passing it a different set of x and y coordinates).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Create a pythonGraph function called `draw_stamp` that accepts an x and y
coordinate as parameters. Add code so that this function will then draw a
picture (of your choosing) centered on that coordinate.



To test your function, create a pythonGraph window, and call your function
several times (each time, passing it a different set of x and y coordinates).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from graphics import *

def draw_stamp(x, y):
    win = GraphWin(""PythonGraph"", 500, 500)
    win.setBackground(""white"")

    # Drawing code here
    # Draw a picture centered on the given coordinates

    win.getMouse()
    win.close()

draw_stamp(100, 100)
draw_stamp(200, 200)
draw_stamp(300, 300)
"
267,lsn18_simpledrawing,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Using pythonGraph (and the documentation for pythonGraph), experiment with
each of the drawing commands listed (drawing commands begin with the keyword
""draw""). Draw something interesting using at least 4 different drawing
commands. One of those drawing commands must be `draw_image`

**NOTE:  
** The best files will be added to our Python ""Hall of Fame"".


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Using pythonGraph (and the documentation for pythonGraph), experiment with
each of the drawing commands listed (drawing commands begin with the keyword
""draw""). Draw something interesting using at least 4 different drawing
commands. One of those drawing commands must be `draw_image`

**NOTE:  
** The best files will be added to our Python ""Hall of Fame"".


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from graph import *

# Draw a red rectangle
draw_rectangle(100, 200, 300, 400, color=""red"")

# Draw a blue circle
draw_circle(500, 300, 100, color=""blue"")

# Draw a green line
draw_line(600, 200, 700, 400, color=""green"")

# Draw an image
draw_image(800, 300, ""image.png"")
"
268,lsn18_randomcircles,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Create a pythonGraph that asks the user for the number of circles to draw.
Your program should then open a pythonGraph window and then draw that many
circles somewhere within view.

**Hints**

  * Import the `random` module in order to generate random numbers. There are specifically two functions that are useful:
  * `random.random()` returns a random number between 0.0 and 1.0
  * `random.randint(start, end)` returns a random integer between `start` and `end`




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Create a pythonGraph that asks the user for the number of circles to draw.
Your program should then open a pythonGraph window and then draw that many
circles somewhere within view.

**Hints**

  * Import the `random` module in order to generate random numbers. There are specifically two functions that are useful:
  * `random.random()` returns a random number between 0.0 and 1.0
  * `random.randint(start, end)` returns a random integer between `start` and `end`




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pythonGraph
import random

num_circles = int(input(""Enter the number of circles to draw: ""))

pythonGraph.open_window(800, 600)

for _ in range(num_circles):
    x = random.randint(0, 800)
    y = random.randint(0, 600)
    radius = random.randint(10, 50)
    pythonGraph.draw_circle(x, y, radius)

pythonGraph.wait_for_close()
"
269,lsn11_in_circle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that determines if a point is within a circle. You will
name your function `in_circle()`. It has five parameters:

  1. The coordinates of the point that is to be tested (x, y)
  2. The center of a circle (cir_x, cir_y)
  3. The radius of the circle (radius)

 The `in_circle()` function will return **True** if the point is on or inside
the circle, and **False** otherwise.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that determines if a point is within a circle. You will
name your function `in_circle()`. It has five parameters:

  1. The coordinates of the point that is to be tested (x, y)
  2. The center of a circle (cir_x, cir_y)
  3. The radius of the circle (radius)

 The `in_circle()` function will return **True** if the point is on or inside
the circle, and **False** otherwise.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Here is the code for the `in_circle()` function:

```python
def in_circle(x, y, cir_x, cir_y, radius):
    distance = ((x - cir_x)**2 + (y - cir_y)**2)**0.5
    if distance <= radius:
        return True
    else:
        return False
```

Remember to only include the code for the function itself when submitting to the server."
270,lsn11_distance,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that computes the distance between two points. You will
name your function `dist_points`. It has four parameters, the cordinates of
the two points as `x1, y1, x2, y2`. The `dist_points()` function will return
the distance between the two points as a floating point number.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that computes the distance between two points. You will
name your function `dist_points`. It has four parameters, the cordinates of
the two points as `x1, y1, x2, y2`. The `dist_points()` function will return
the distance between the two points as a floating point number.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

def dist_points(x1, y1, x2, y2):
    distance = math.sqrt((x2 - x1)**2 + (y2 - y1)**2)
    return distance
"
271,lsn11_circle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that computes the area of a circle. You will name your
function `area_circle`. It has one parameter, the radius of the circle,
`radius`. The `area_circle()` function will return the area of the circle.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that computes the area of a circle. You will name your
function `area_circle`. It has one parameter, the radius of the circle,
`radius`. The `area_circle()` function will return the area of the circle.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def area_circle(radius):
    return 3.14159 * radius**2"
272,lsn11_asteroids,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

""Asteroids"" was an arcade game created in 1979 by Atari, Inc. In the game, the
player is given control of a spaceship that has the ability to shoot bullets.
The player is then placed in a field of floating rocks, and is tasked with
destroying them without running into them.

In this lab, you will write a ""collision detection"" function that will be used
by the game to determine if the player's ship has hit a rock. To make this
simple, assume that an imaginary circle extends from the center of the
asteroid and the player's ship (see below image). If the two circles ever
overlap one another, then a collision has occurred. (NOTE: There are more
accurate ways to detect a collision. [Click here if you want to learn more
(Links to an external site.)](https://bell0bytes.eu/basic-collision-
detection/)).

![](https://bell0bytes.eu/content/images/2019/03/spaceShipAsteroid.png)

Your function, which you will name `detect_collision()` should have six
parameters: the (x, y) coordinates of the center of player's ship, the ship's
radius, the (x, y) coordinates of the center of an asteroid, and the
asteroid's radius. Your function will return `True` if the player's ship has
hit the asteroid, and `False` otherwise.

**HINT: _  
_** _You may want to copy and paste the_  `dist_points`  _function you created
earlier. It's almost as if we are trying to demonstrate the importance of
reusable functions . . ._

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

""Asteroids"" was an arcade game created in 1979 by Atari, Inc. In the game, the
player is given control of a spaceship that has the ability to shoot bullets.
The player is then placed in a field of floating rocks, and is tasked with
destroying them without running into them.

In this lab, you will write a ""collision detection"" function that will be used
by the game to determine if the player's ship has hit a rock. To make this
simple, assume that an imaginary circle extends from the center of the
asteroid and the player's ship (see below image). If the two circles ever
overlap one another, then a collision has occurred. (NOTE: There are more
accurate ways to detect a collision. [Click here if you want to learn more
(Links to an external site.)](https://bell0bytes.eu/basic-collision-
detection/)).

![](https://bell0bytes.eu/content/images/2019/03/spaceShipAsteroid.png)

Your function, which you will name `detect_collision()` should have six
parameters: the (x, y) coordinates of the center of player's ship, the ship's
radius, the (x, y) coordinates of the center of an asteroid, and the
asteroid's radius. Your function will return `True` if the player's ship has
hit the asteroid, and `False` otherwise.

**HINT: _  
_** _You may want to copy and paste the_  `dist_points`  _function you created
earlier. It's almost as if we are trying to demonstrate the importance of
reusable functions . . ._

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

def detect_collision(ship_x, ship_y, ship_radius, asteroid_x, asteroid_y, asteroid_radius):
    distance = math.sqrt((ship_x - asteroid_x)**2 + (ship_y - asteroid_y)**2)
    if distance <= (ship_radius + asteroid_radius):
        return True
    else:
        return False
"
273,lsn10_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_multiple_trees()` that
outputs a tree using ASCII art. Unlike the previous problem, this function
accepts a parameter that tells it how many trees to draw.

Write a program that:

  1. Gets an integer from the user and stores it in a variable. You can name this variable whatever you want.
  2. Calls the function, and passes the variable to it. 

Remember that ""passing a value"" to a function simply means putting the number
inside the parenthesis when you call it.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_multiple_trees()` that
outputs a tree using ASCII art. Unlike the previous problem, this function
accepts a parameter that tells it how many trees to draw.

Write a program that:

  1. Gets an integer from the user and stores it in a variable. You can name this variable whatever you want.
  2. Calls the function, and passes the variable to it. 

Remember that ""passing a value"" to a function simply means putting the number
inside the parenthesis when you call it.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def draw_multiple_trees(num_trees):
    for _ in range(num_trees):
        print(""   *"")
        print(""  ***"")
        print("" *****"")
        print(""*******"")
        print(""   *"")
        print()
        
num_trees = int(input(""Enter the number of trees: ""))
draw_multiple_trees(num_trees)
"
274,lsn10_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_tree()` that prints a
tree using ASCII art:

    
    
     *  
     ***  
    *****  
     |

Call this function.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_tree()` that prints a
tree using ASCII art:

    
    
     *  
     ***  
    *****  
     |

Call this function.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def draw_tree():
    print(""     *"")
    print(""    ***"")
    print(""   *****"")
    print(""     |"")


# Call the draw_tree function
draw_tree()
"
275,a3_6_situps,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes the number of situps
done by a group of cadets.  Write a program that gets from the user the number
of people tested, and gets that many situp scores (which you may assume are
whole numbers) from the user.  Your program must print out:

  * The average number of situps for the group.
  * The count of cadets that scored higher than the average.



**EXAMPLES:**

| **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
75  
90  
88  
  
  
| 5  
86  
79  
90  
90  
100  
**Output** | 84.3  
2 | 89.0  
3  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been asked to write a program that analyzes the number of situps
done by a group of cadets.  Write a program that gets from the user the number
of people tested, and gets that many situp scores (which you may assume are
whole numbers) from the user.  Your program must print out:

  * The average number of situps for the group.
  * The count of cadets that scored higher than the average.



**EXAMPLES:**

| **Example 1** | **Example 2**  
---|---|---  
**Input** | 3  
75  
90  
88  
  
  
| 5  
86  
79  
90  
90  
100  
**Output** | 84.3  
2 | 89.0  
3  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# get the number of people tested
num_people = int(input())

# get the situp scores from the user
situp_scores = []
for _ in range(num_people):
    situp_score = int(input())
    situp_scores.append(situp_score)

# calculate the average number of situps
average = sum(situp_scores) / num_people

# count the number of cadets that scored higher than the average
count = 0
for score in situp_scores:
    if score > average:
        count += 1

# print the average and count
print(average)
print(count)
"
276,a3_5_connect,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a table that describes a connect 4 board. In
this code, a list (`connect_4`) is populated with characters representing the
location of each of the pieces (Red, Yellow, or Blank).



    
    
    X = Red; 0 = Yellow; _ = Blank



Write a program that gets two values from the user in the following order:

1) a row index, a 0 indicates the Top row and 5 the Bottom row

2) a column index, a 0 indicates the Leftmost column and 6 the Rightmost
column



Finally,  **Print  **out the contents of the table at that particular cell.



  

**HINT:**

  * Your output should be one of the following letters:  ""X"", ""0"" or ""_""


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a table that describes a connect 4 board. In
this code, a list (`connect_4`) is populated with characters representing the
location of each of the pieces (Red, Yellow, or Blank).



    
    
    X = Red; 0 = Yellow; _ = Blank



Write a program that gets two values from the user in the following order:

1) a row index, a 0 indicates the Top row and 5 the Bottom row

2) a column index, a 0 indicates the Leftmost column and 6 the Rightmost
column



Finally,  **Print  **out the contents of the table at that particular cell.



  

**HINT:**

  * Your output should be one of the following letters:  ""X"", ""0"" or ""_""


 
Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 5
# --------------------------------------------------------------
#DO NOT TOUCH THIS LIST!
connect_4   =      [['X', '_', '_', '_', '_', '_', '_'],
                    ['X', '_', 'X', '_', '_', '_', '_'],
                    ['0', '_', 'X', '_', '_', '_', '_'],
                    ['0', '_', '0', 'X', '_', '_', '0'],
                    ['0', '_', '0', '0', 'X', '_', 'X'],
                    ['X', '_', 'X', '0', '0', 'X', 'X']]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 5
# --------------------------------------------------------------
#DO NOT TOUCH THIS LIST!
connect_4   =      [['X', '_', '_', '_', '_', '_', '_'],
                    ['X', '_', 'X', '_', '_', '_', '_'],
                    ['0', '_', 'X', '_', '_', '_', '_'],
                    ['0', '_', '0', 'X', '_', '_', '0'],
                    ['0', '_', '0', '0', 'X', '_', 'X'],
                    ['X', '_', 'X', '0', '0', 'X', 'X']]

#Your code goes here.
row_index = int(input(""Enter the row index: ""))
column_index = int(input(""Enter the column index: ""))
print(connect_4[row_index][column_index])"
277,a3_4_testscores,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_test_scores. Write a
program that prints out the range ( _i.e.,  _the difference between the max
and min scores)



**EXAMPLE:  
** If, for example, the list contained the values:  50, 64, 72

Your program should print:

    
    
    22




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a list called list_of_test_scores. Write a
program that prints out the range ( _i.e.,  _the difference between the max
and min scores)



**EXAMPLE:  
** If, for example, the list contained the values:  50, 64, 72

Your program should print:

    
    
    22




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","list_of_test_scores = [50, 64, 72]
range_of_scores = max(list_of_test_scores) - min(list_of_test_scores)
print(range_of_scores)"
278,a3_3_dogs,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_dogs`. Write a program
that prints out each of the items in this list (one item per line).  



**EXAMPLE:  
** If, for example, the list contained the items:  ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task.  


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_dogs`. Write a program
that prints out each of the items in this list (one item per line).  



**EXAMPLE:  
** If, for example, the list contained the items:  ""A"", ""B"", ""C""

Your program should print:

    
    
    A  
    B  
    C



**NOTE:**

  * You must use a loop to complete this task.  


 
Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_dogs = [""Pug"", ""Lab"", ""Yorkie"", ""Pit Bull"", ""Poodle"", ""Great Dane""]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
for dog in list_of_dogs:
    print(dog)
"
279,a3_1_light_aircraft,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_aircraft`. Write a program
that prints a single, specified aircraft from the list. Your program shall
take a number via user input used to identify which aircraft to print. For
example, if the user types a 3, you should print out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a list called `list_of_aircraft`. Write a program
that prints a single, specified aircraft from the list. Your program shall
take a number via user input used to identify which aircraft to print. For
example, if the user types a 3, you should print out the third item.



**NOTE:**

  * You may assume that the user will always enter a value that ""should"" exist within the list (e.g., the user will not enter 100 when the list only contains 5 elements)


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
list_of_aircraft = [""Airbus A380"", ""Boeing 747"", ""Embraer E190"", ""Cessna 172"", ""Bombardier Challenger""]

user_input = int(input(""Enter a number to select an aircraft: ""))
print(list_of_aircraft[user_input - 1])
"
280,a2_6_lowest_spec_def,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The value of lowest Special Defense from a Pokemon with the matching type.
  * The name of the Pokemon of the matching type with the lowest value of Special Defense. In the event of a tie, print out the name of the FIRST Pokemon that matches.



**EXAMPLE:  
** If, for example, the Dark Pokemon with the lowest Special Defense is
Poochyena (with Special Defense of 30), your program should print out:

    
    
    30  
    Poochyena



NOTE: The above answer is purely hypothetical. Your answer will be different.

Also, all of the numeric values are positive integers with values less than
999.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The value of lowest Special Defense from a Pokemon with the matching type.
  * The name of the Pokemon of the matching type with the lowest value of Special Defense. In the event of a tie, print out the name of the FIRST Pokemon that matches.



**EXAMPLE:  
** If, for example, the Dark Pokemon with the lowest Special Defense is
Poochyena (with Special Defense of 30), your program should print out:

    
    
    30  
    Poochyena



NOTE: The above answer is purely hypothetical. Your answer will be different.

Also, all of the numeric values are positive integers with values less than
999.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

def find_lowest_special_defense(pokemon_type):
    lowest_defense = float('inf')
    lowest_pokemon = """"

    with open('pokemon.csv', newline='') as csvfile:
        reader = csv.reader(csvfile)
        next(reader) # Skip header row
        for row in reader:
            if row[2] == pokemon_type and int(row[7]) < lowest_defense:
                lowest_defense = int(row[7])
                lowest_pokemon = row[1]

    print(lowest_defense)
    print(lowest_pokemon)

type = input(""Enter a Pokemon Type: "")
find_lowest_special_defense(type)
"
281,a2_6_lowest_spec_attack,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The value of lowest Special Attack from a Pokemon with the matching type
  * The name of the Pokemon with the lowest value of Special Attack. In the event of a tie, print out the name of the FIRST Pokemon that matches.



**EXAMPLE:  
** If, for example, the Dark Pokemon with the lowest Special Attack is Scrafty
(with Special Attack of 115.0), your program should print out:

    
    
    115.0  
    Scrafty



NOTE: The above answer is purely hypothetical. Your answer will be different.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The value of lowest Special Attack from a Pokemon with the matching type
  * The name of the Pokemon with the lowest value of Special Attack. In the event of a tie, print out the name of the FIRST Pokemon that matches.



**EXAMPLE:  
** If, for example, the Dark Pokemon with the lowest Special Attack is Scrafty
(with Special Attack of 115.0), your program should print out:

    
    
    115.0  
    Scrafty



NOTE: The above answer is purely hypothetical. Your answer will be different.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def find_lowest_special_attack():
    pokemon_type = input(""Enter a Pokemon Type: "")
    file_path = ""pokemon.csv""
    lowest_special_attack = float('inf')
    pokemon_with_lowest_special_attack = """"
    with open(file_path, 'r') as file:
        for line in file:
            data = line.strip().split("", "")
            if data[2].lower() == pokemon_type.lower():
                special_attack = float(data[6])
                if special_attack < lowest_special_attack:
                    lowest_special_attack = special_attack
                    pokemon_with_lowest_special_attack = data[1]
    print(lowest_special_attack)
    print(pokemon_with_lowest_special_attack)

find_lowest_special_attack()
"
282,a2_6_lowest_defense,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric"")



Your program should then analyze the file and print:

  * The lowest defensive rating from a Pokemon with the matching type
  * The name of the Pokemon with the lowest defensive rating. In the event of a tie, print out the name of the FIRST Pokemon with the lowest defensive value.



**EXAMPLE:  
** If, for example, the Poison Pokemon with the lowest defense rating is Zubat
(with an defensive of 35.0), your program should print out:

    
    
    35.0  
    Zubat



NOTE: The above answer is purely hypothetical. Your answer will be different.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric"")



Your program should then analyze the file and print:

  * The lowest defensive rating from a Pokemon with the matching type
  * The name of the Pokemon with the lowest defensive rating. In the event of a tie, print out the name of the FIRST Pokemon with the lowest defensive value.



**EXAMPLE:  
** If, for example, the Poison Pokemon with the lowest defense rating is Zubat
(with an defensive of 35.0), your program should print out:

    
    
    35.0  
    Zubat



NOTE: The above answer is purely hypothetical. Your answer will be different.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def get_lowest_defense_pokemon(pokemon_type):
    min_defense = float('inf')
    min_defense_pokemon = """"
    
    with open(""pokemon_data.txt"", ""r"") as file:
        for line in file:
            data = line.strip().split("","")
            if data[2] == pokemon_type:
                defense = float(data[6])
                if defense < min_defense:
                    min_defense = defense
                    min_defense_pokemon = data[1]
    
    return min_defense, min_defense_pokemon

pokemon_type = input(""Enter a Pokemon Type: "")
min_defense, min_defense_pokemon = get_lowest_defense_pokemon(pokemon_type)
print(min_defense)
print(min_defense_pokemon)
"
283,a2_6_highest_hp,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The highest Hit Points from a Pokemon with the matching type
  * The name of the Pokemon with the highest value of Hit Points. In the event of a tie, print out the name of the FIRST Pokemon that matches.



**EXAMPLE:  
** If, for example, the Ice Pokemon with the highest Hit Points is Froslass
(with Hit Points of 70.0), your program should print out:

    
    
    70.0  
    Frosless



NOTE: The above answer is purely hypothetical. Your answer will be different.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The highest Hit Points from a Pokemon with the matching type
  * The name of the Pokemon with the highest value of Hit Points. In the event of a tie, print out the name of the FIRST Pokemon that matches.



**EXAMPLE:  
** If, for example, the Ice Pokemon with the highest Hit Points is Froslass
(with Hit Points of 70.0), your program should print out:

    
    
    70.0  
    Frosless



NOTE: The above answer is purely hypothetical. Your answer will be different.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Read the dataset file

# Get the user input for the Pokemon type

# Initialize variables to store the highest Hit Points and the name of the Pokemon
highest_hit_points = 0
pokemon_name = """"

# Iterate through each line in the dataset
    # Split the line into individual elements
    # Check if the Type matches the user input
        # Convert the Hit Points value to a float
        # Check if the Hit Points is greater than the current highest value
            # If it is, update the highest Hit Points value and the name of the Pokemon

# Print the highest Hit Points and the name of the Pokemon
"
284,a2_6_fastest,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The highest speed from a Pokemon with the matching type
  * The name of the Pokemon with the fastest speed. In the event of a tie, print out the name of the FIRST Pokemon that matches.



**EXAMPLE:  
** If, for example, the fastest Bug Pokemon is Accelgor (with a speed of
145.0), your program should print out:

    
    
    145.0  
    Accelgor



NOTE: The above answer is purely hypothetical. Your answer will be different.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The highest speed from a Pokemon with the matching type
  * The name of the Pokemon with the fastest speed. In the event of a tie, print out the name of the FIRST Pokemon that matches.



**EXAMPLE:  
** If, for example, the fastest Bug Pokemon is Accelgor (with a speed of
145.0), your program should print out:

    
    
    145.0  
    Accelgor



NOTE: The above answer is purely hypothetical. Your answer will be different.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

def find_fastest_pokemon(pokemon_type):
    fastest_speed = 0.0
    fastest_pokemon = """"

    with open('pokemon.csv') as file:
        reader = csv.reader(file)
        next(reader)  # Skip header row
        for row in reader:
            if row[2] == pokemon_type:
                speed = float(row[8])
                if speed > fastest_speed:
                    fastest_speed = speed
                    fastest_pokemon = row[1]

    print(fastest_speed)
    print(fastest_pokemon)

pokemon_type = input(""Enter a Pokemon Type: "")
find_fastest_pokemon(pokemon_type)
"
285,a2_6_attack,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The highest attack rating from a Pokemon with the matching type
  * The name of the Pokemon with the highest attack rating. In the event of a tie, print out the name of the FIRST Pokemon with the highest attack value.



**EXAMPLE:  
** If, for example, the Electric Pokemon with the highest attack rating is
Raichu (with an attack of 90.0), your program should print out:

    
    
    90.0  
    Raichu



NOTE: The above answer is purely hypothetical. Your answer will be different.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

You have been provided with a dataset containing information about various
types of Pokemon. Here is an example entry from the file:

    
    
    25, Pikachu, Electric, 35, 55, 40, 50, 50, 90, 1, FALSE



Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | **ID** | **Name** | **Type** | **Hit Points** | **Attack** | **Defense** |
**Special Attack** | **Special Defense** | **Speed** | **Generation** |
**Legendary**  
---|---|---|---|---|---|---|---|---|---|---|---  
Value | 25 | Pikachu | Electric | 35 | 55 | 40 | 50 | 50 | 90 | 1 | False  
  


Write a program that asks the user for:

  * a Pokemon Type (e.g., ""Electric""). 



Your program should then analyze the file and print:

  * The highest attack rating from a Pokemon with the matching type
  * The name of the Pokemon with the highest attack rating. In the event of a tie, print out the name of the FIRST Pokemon with the highest attack value.



**EXAMPLE:  
** If, for example, the Electric Pokemon with the highest attack rating is
Raichu (with an attack of 90.0), your program should print out:

    
    
    90.0  
    Raichu



NOTE: The above answer is purely hypothetical. Your answer will be different.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def find_highest_attack(pokemon_type):
    highest_attack = 0.0
    highest_attack_name = """"
    with open(""pokemon.csv"", ""r"") as file:
        for line in file:
            pokemon_data = line.strip().split("","")
            if pokemon_data[2] == pokemon_type:
                attack = float(pokemon_data[4])
                if attack > highest_attack:
                    highest_attack = attack
                    highest_attack_name = pokemon_data[1]
    print(highest_attack)
    print(highest_attack_name)

pokemon_type = input(""Enter the Pokemon type: "")
find_highest_attack(pokemon_type)
"
286,a2_5_virus,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You are writing a program that will help you decide if there are too many
people at a restaurant for you to dine safely. Your program will ask for the
number of people in the restaurant. It will then ask for the distance between
yourself and each of the people (in feet, which do not have to be whole
numbers). Your program will keep track of how many people are within 6 feet of
you (inclusive). Your program will then print one of the following statements:

**# of People within 6 Feet** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | All Clear | Warning | Find Another Place  
  


**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** | 3  
5.7  
10.2  
12.4 | 2  
7.0  
15.1  
**OUTPUT** | Warning | All Clear


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You are writing a program that will help you decide if there are too many
people at a restaurant for you to dine safely. Your program will ask for the
number of people in the restaurant. It will then ask for the distance between
yourself and each of the people (in feet, which do not have to be whole
numbers). Your program will keep track of how many people are within 6 feet of
you (inclusive). Your program will then print one of the following statements:

**# of People within 6 Feet** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | All Clear | Warning | Find Another Place  
  


**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** | 3  
5.7  
10.2  
12.4 | 2  
7.0  
15.1  
**OUTPUT** | Warning | All Clear


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
people_count = int(input())

within_six_feet = 0

for i in range(people_count):
    distance = float(input())
    if distance <= 6:
        within_six_feet += 1

if within_six_feet == 0:
    print(""All Clear"")
elif within_six_feet <= 2:
    print(""Warning"")
else:
    print(""Find Another Place"")
"
287,a2_5_traffic_lights,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

The City Manager is having a traffic problem and asked you are to write a
program that will determine whether or not to activate a newly installed
alternate traffic light schedule to help alleviate traffic throughout the city
during peak traffic hours. Your program will ask for the number of traffic
""time periods"" to analyze. It will then ask for the traffic throughput (in
average number of cars per minute, which does not have to be a whole number)
for each ""time period"". Your program will keep track of how many ""time
periods"" are considered heavy traffic, as defined as 15 cars per minutes or
more (inclusive). Your program will then print one of the following
statements:

**# of ""time periods"" of heavy traffic** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | Regular Schedule | Prepare Activation | Activate New Schedule  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

12.8

15.0

6.7

|

3

17.3

15.1

19.2  
  
**OUTPUT** | Prepare Activation | Activate New Schedule


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

The City Manager is having a traffic problem and asked you are to write a
program that will determine whether or not to activate a newly installed
alternate traffic light schedule to help alleviate traffic throughout the city
during peak traffic hours. Your program will ask for the number of traffic
""time periods"" to analyze. It will then ask for the traffic throughput (in
average number of cars per minute, which does not have to be a whole number)
for each ""time period"". Your program will keep track of how many ""time
periods"" are considered heavy traffic, as defined as 15 cars per minutes or
more (inclusive). Your program will then print one of the following
statements:

**# of ""time periods"" of heavy traffic** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | Regular Schedule | Prepare Activation | Activate New Schedule  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

12.8

15.0

6.7

|

3

17.3

15.1

19.2  
  
**OUTPUT** | Prepare Activation | Activate New Schedule


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_periods = int(input())

heavy_traffic_count = 0

for _ in range(num_periods):
    traffic_throughput = float(input())
    if traffic_throughput >= 15.0:
        heavy_traffic_count += 1

if heavy_traffic_count == 0:
    print(""Regular Schedule"")
elif heavy_traffic_count <= 2:
    print(""Prepare Activation"")
else:
    print(""Activate New Schedule"")
"
288,a2_5_network_traffic,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

The 10th Communications Squadron (10 CS) recently detected a higher volume of
network traffic on the base network. The 10 CS Director of Operations asked
you are to write a program that will determine whether or not to activate an
additional Network Load Balancer (NLB) to improve the network performance
during these peak loads. Your program will ask for the number of network
traffic ""snapshots"" to analyze. It will then ask for the network load (in
Gigabits per second (Gbps), which does not have to be a whole number) for each
""snapshot"". Your program will keep track of how many ""snapshots"" are
designated as high volume network traffic, defined as loads greater than 512
Gbps. Your program will then print one of the following statements:

**# of ""snapshots"" with high network traffic volume** | **0** | **1-2** | **>
2**  
---|---|---|---  
**Output** | Ops Normal | Initialize NLB | Activate NLB  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

512.0

738.5

199.6

|

3

498.6

372.9

512.0  
  
**OUTPUT** | Initialize NLB | Ops Normal


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

The 10th Communications Squadron (10 CS) recently detected a higher volume of
network traffic on the base network. The 10 CS Director of Operations asked
you are to write a program that will determine whether or not to activate an
additional Network Load Balancer (NLB) to improve the network performance
during these peak loads. Your program will ask for the number of network
traffic ""snapshots"" to analyze. It will then ask for the network load (in
Gigabits per second (Gbps), which does not have to be a whole number) for each
""snapshot"". Your program will keep track of how many ""snapshots"" are
designated as high volume network traffic, defined as loads greater than 512
Gbps. Your program will then print one of the following statements:

**# of ""snapshots"" with high network traffic volume** | **0** | **1-2** | **>
2**  
---|---|---|---  
**Output** | Ops Normal | Initialize NLB | Activate NLB  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

512.0

738.5

199.6

|

3

498.6

372.9

512.0  
  
**OUTPUT** | Initialize NLB | Ops Normal


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def determine_nlb_activation():
    snapshots = int(input())
    high_volume_snapshots = 0
    
    for _ in range(snapshots):
        load = float(input())
        if load > 512.0:
            high_volume_snapshots += 1
    
    if high_volume_snapshots == 0:
        return ""Ops Normal""
    elif high_volume_snapshots <= 2:
        return ""Initialize NLB""
    else:
        return ""Activate NLB""

print(determine_nlb_activation())
"
289,a2_5_grades,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You are writing a program that will help your instructors analyze student
performance on an exam. Your program will ask for the number of students in
the class. It will then ask for the grade of each student (this grade does not
have to be a whole number). Your program will keep track of how many students
received less than 70 on an assignment. Your program will then print one of
the following statements.



**# of scores below 70** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | Excellent | Satisfactory | Unsatisfactory  
  


**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**INPUT** |

4  
75.6  
80.2  
95.5  
71.0

|

3  
68.2  
72.9  
95.4

|

3  
67.0  
65.5  
68.3  
  
**OUTPUT** | Excellent | Satisfactory | Unsatisfactory  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You are writing a program that will help your instructors analyze student
performance on an exam. Your program will ask for the number of students in
the class. It will then ask for the grade of each student (this grade does not
have to be a whole number). Your program will keep track of how many students
received less than 70 on an assignment. Your program will then print one of
the following statements.



**# of scores below 70** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | Excellent | Satisfactory | Unsatisfactory  
  


**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**INPUT** |

4  
75.6  
80.2  
95.5  
71.0

|

3  
68.2  
72.9  
95.4

|

3  
67.0  
65.5  
68.3  
  
**OUTPUT** | Excellent | Satisfactory | Unsatisfactory  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
290,a2_5_gameday,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

The Academy Athletic Director asked you are to write a program that will
determine whether or not a football game in progress should be delayed based
on current weather conditions. Your program will ask for the number of
lightning strikes occurred in the immediate area in the past thirty minutes.
It will then ask for the distance from Falcon Stadium to each lightning strike
(in miles, which do not have to be whole numbers). Your program will keep
track of how many lightning strikes are within 15 miles of the stadium
(inclusive). Your program will then print one of the following statements:

**# of lightning strikes in immediate area** | **0** | **1-3** | **> 3**  
---|---|---|---  
**Output** | All Clear | Weather Warning | Game Delay  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

4

15.0

13.2

6.5

9.8

|

3

17.8

15.1

19.0

  
  
**OUTPUT** | Game Delay | All Clear  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

The Academy Athletic Director asked you are to write a program that will
determine whether or not a football game in progress should be delayed based
on current weather conditions. Your program will ask for the number of
lightning strikes occurred in the immediate area in the past thirty minutes.
It will then ask for the distance from Falcon Stadium to each lightning strike
(in miles, which do not have to be whole numbers). Your program will keep
track of how many lightning strikes are within 15 miles of the stadium
(inclusive). Your program will then print one of the following statements:

**# of lightning strikes in immediate area** | **0** | **1-3** | **> 3**  
---|---|---|---  
**Output** | All Clear | Weather Warning | Game Delay  
  
**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

4

15.0

13.2

6.5

9.8

|

3

17.8

15.1

19.0

  
  
**OUTPUT** | Game Delay | All Clear  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
291,a2_5_combat,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You are writing a program that will determine whether or not a fighter pilot
will need to make an evasive action when enemy aircraft are near. Your program
will ask for the number of enemy planes in the area. It will then ask for the
distance between the pilot and each of the enemy planes (in miles, which do
not have to be whole numbers). Your program will keep track of how many enemy
planes are within 20 miles of the pilot (inclusive). Your program will then
print one of the following statements:

**# of Enemy Planes in Area** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | All Clear | Warning | Evasive Action  
  


**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

10.5

17.2

23.7

|

3

21.4

34.0

27.9  
  
**OUTPUT** | Warning | All Clear


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

You are writing a program that will determine whether or not a fighter pilot
will need to make an evasive action when enemy aircraft are near. Your program
will ask for the number of enemy planes in the area. It will then ask for the
distance between the pilot and each of the enemy planes (in miles, which do
not have to be whole numbers). Your program will keep track of how many enemy
planes are within 20 miles of the pilot (inclusive). Your program will then
print one of the following statements:

**# of Enemy Planes in Area** | **0** | **1-2** | **> 2**  
---|---|---|---  
**Output** | All Clear | Warning | Evasive Action  
  


**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**INPUT** |

3

10.5

17.2

23.7

|

3

21.4

34.0

27.9  
  
**OUTPUT** | Warning | All Clear


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_planes = int(input())

within_20_miles = 0

for _ in range(num_planes):
    distance = float(input())
    if distance <= 20:
        within_20_miles += 1

if within_20_miles == 0:
    print(""All Clear"")
elif within_20_miles <= 2:
    print(""Warning"")
else:
    print(""Evasive Action"")
"
292,a2_4_pipe,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a Python program that already contains code to get
the following two items from the user:

  * **the_string** :  A pipe-separated string.  
Example: johnson81|4081|30no86|cj4081|Craig|Johnson|Depot|London

  * **column_to_print** :  A number indicating which item from the input string to print  
NOTE:  0 indicates the first item in the string, 1 indicates the second, etc.

Add code to this program that:

  1. Splits the the_string into separate items.
  2. Prints the number of items that result from splitting the_string (not the number of characters in the string).
  3. Prints the item indicated by the column_to_print value.

**EXAMPLE:**

If the user types:

    
    
    johnson81|4081|30no86|cj4081|Craig|Johnson|Depot|London  
    2

Your program should output:

    
    
    8  
    30no86



**HINT: A pipe is this: '|'. On most keyboards it is located on the same key
as the backslash ('\').** **If you cannot find it, ask an instructor for
help.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a Python program that already contains code to get
the following two items from the user:

  * **the_string** :  A pipe-separated string.  
Example: johnson81|4081|30no86|cj4081|Craig|Johnson|Depot|London

  * **column_to_print** :  A number indicating which item from the input string to print  
NOTE:  0 indicates the first item in the string, 1 indicates the second, etc.

Add code to this program that:

  1. Splits the the_string into separate items.
  2. Prints the number of items that result from splitting the_string (not the number of characters in the string).
  3. Prints the item indicated by the column_to_print value.

**EXAMPLE:**

If the user types:

    
    
    johnson81|4081|30no86|cj4081|Craig|Johnson|Depot|London  
    2

Your program should output:

    
    
    8  
    30no86



**HINT: A pipe is this: '|'. On most keyboards it is located on the same key
as the backslash ('\').** **If you cannot find it, ask an instructor for
help.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
the_string = input()
column_to_print = int(input())

# Split the_string into separate items
items = the_string.split('|')

# Print the number of items
print(len(items))

# Print the item indicated by column_to_print
print(items[column_to_print])
"
293,a2_4_hyphen,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a Python program that already contains code to get
the following two items from the user:

  * **the_string** :  A hyphen-separated string.  
Example: johnson81-4081-30no86-cj4081-Craig-Johnson-Depot-London

  * **column_to_print** :  A number indicating which item from the string to print.  
NOTE:  0 indicates the first item in the string, 1 indicates the second, etc.

Add code to this program that:

  1. Splits the_string into separate items.
  2. Prints the number of items that result from splitting the_string (not the number of characters in the string).
  3. Prints the item indicated by the column_to_print value.

**EXAMPLE:**

If the user types:

    
    
    johnson81-4081-30no86-cj4081-Craig-Johnson-Depot-London  
    2

Your program should output:

    
    
    8  
    30no86

**HINT: A hyphen (dash) is this: '-'. On most keyboards it is located to the
right of the '0' key.** **If you cannot find it, ask an instructor for help.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a Python program that already contains code to get
the following two items from the user:

  * **the_string** :  A hyphen-separated string.  
Example: johnson81-4081-30no86-cj4081-Craig-Johnson-Depot-London

  * **column_to_print** :  A number indicating which item from the string to print.  
NOTE:  0 indicates the first item in the string, 1 indicates the second, etc.

Add code to this program that:

  1. Splits the_string into separate items.
  2. Prints the number of items that result from splitting the_string (not the number of characters in the string).
  3. Prints the item indicated by the column_to_print value.

**EXAMPLE:**

If the user types:

    
    
    johnson81-4081-30no86-cj4081-Craig-Johnson-Depot-London  
    2

Your program should output:

    
    
    8  
    30no86

**HINT: A hyphen (dash) is this: '-'. On most keyboards it is located to the
right of the '0' key.** **If you cannot find it, ask an instructor for help.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
the_string = input()
column_to_print = int(input())

# Split the_string into separate items
items = the_string.split('-')

# Print the number of items
print(len(items))

# Print the item indicated by the column_to_print value
print(items[column_to_print])
"
294,a2_4_hash,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a Python program that already contains code to get
the following two items from the user:

  * **the_string** :  A hashtag-separated string.  
Example: johnson81#4081#30no86#cj4081#Craig#Johnson#Depot#London

  * **column_to_print** :  A number indicating which item from the string to print.  
NOTE:  0 indicates the first item in the string, 1 indicates the second, etc.

Add code to this program that:

  1. Splits the_string into separate items.
  2. Prints the number of items that result from splitting the_string (not the number of characters in the string).
  3. Prints the item indicated by the column_to_print value.

**EXAMPLE:**

If the user types:

    
    
    johnson81#4081#30no86#cj4081#Craig#Johnson#Depot#London  
    2

Your program should output:

    
    
    8  
    30no86

**HINT: A hashtag (pound sign) looks like this: '#'. On most keyboards it is
on the same key as the '3'. If you cannot find it, ask an instructor for
help.** ****


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a Python program that already contains code to get
the following two items from the user:

  * **the_string** :  A hashtag-separated string.  
Example: johnson81#4081#30no86#cj4081#Craig#Johnson#Depot#London

  * **column_to_print** :  A number indicating which item from the string to print.  
NOTE:  0 indicates the first item in the string, 1 indicates the second, etc.

Add code to this program that:

  1. Splits the_string into separate items.
  2. Prints the number of items that result from splitting the_string (not the number of characters in the string).
  3. Prints the item indicated by the column_to_print value.

**EXAMPLE:**

If the user types:

    
    
    johnson81#4081#30no86#cj4081#Craig#Johnson#Depot#London  
    2

Your program should output:

    
    
    8  
    30no86

**HINT: A hashtag (pound sign) looks like this: '#'. On most keyboards it is
on the same key as the '3'. If you cannot find it, ask an instructor for
help.** ****


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","the_string = input()
column_to_print = int(input())

# Split the_string into separate items
items = the_string.split('#')

# Print the number of items
print(len(items))

# Print the item indicated by the column_to_print value
print(items[column_to_print])"
295,a2_3_thirteen,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.  

Write a program that prints all of the numbers between  **starting_number**
and **0** (including **0** ), counting down by **13** each time.



For example, if the user types **45** , your program should print:

    
    
    45  
    32  
    19  
    6

Similarly, if the user types **39** , your program should print:

    
    
    39  
    26  
    13  
    0

You may assume that the user will only enter positive numbers.

**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.  

Write a program that prints all of the numbers between  **starting_number**
and **0** (including **0** ), counting down by **13** each time.



For example, if the user types **45** , your program should print:

    
    
    45  
    32  
    19  
    6

Similarly, if the user types **39** , your program should print:

    
    
    39  
    26  
    13  
    0

You may assume that the user will only enter positive numbers.

**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
starting_number = int(input())

for i in range(starting_number, -1, -13):
    print(i)
"
296,a2_3_nineteen,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.  

Write a program that prints all of the numbers between  **starting_number**
and **0** (including **0** ), counting down by **19** each time.



For example, if the user types **45** , your program should print:

    
    
    45  
    26  
    7

Similarly, if the user types **57** , your program should print:

    
    
    57  
    38  
    19  
    0

You may assume that the user will only enter positive numbers.

**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.  

Write a program that prints all of the numbers between  **starting_number**
and **0** (including **0** ), counting down by **19** each time.



For example, if the user types **45** , your program should print:

    
    
    45  
    26  
    7

Similarly, if the user types **57** , your program should print:

    
    
    57  
    38  
    19  
    0

You may assume that the user will only enter positive numbers.

**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Get the starting number from the user
starting_number = int(input(""Enter a number: ""))

# Print all the numbers between starting_number and 0, counting down by 19
for num in range(starting_number, -1, -19):
    print(num)
"
297,a2_3_nine,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.  

Write a program that prints all of the numbers between  **starting_number**
and  **0** (including **0** ), counting down by **9**  each time.



For example, if the user types ** 45**, your program should print:

    
    
    45  
    36  
    27  
    18  
    9  
    0

Similarly, if the user types **50** , your program should print:

    
    
    50  
    41  
    32  
    23  
    14  
    5

You may assume that the user will only enter positive numbers.

**HINT:**

  * This problem can be solved using either a  **for** or  **while** loop.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.  

Write a program that prints all of the numbers between  **starting_number**
and  **0** (including **0** ), counting down by **9**  each time.



For example, if the user types ** 45**, your program should print:

    
    
    45  
    36  
    27  
    18  
    9  
    0

Similarly, if the user types **50** , your program should print:

    
    
    50  
    41  
    32  
    23  
    14  
    5

You may assume that the user will only enter positive numbers.

**HINT:**

  * This problem can be solved using either a  **for** or  **while** loop.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","starting_number = int(input())

for i in range(starting_number, -1, -9):
    print(i)"
298,a2_3_eighteen,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.  

Write a program that prints all of the numbers between  **starting_number**
and  **0**  (including **0** ), counting down by **18** each time.



For example, if the user types  **108** , your program should print:

    
    
    108  
    90  
    72  
    54  
    36  
    18  
    0

Similarly, if the user types **92** , your program should print:

    
    
    92  
    74  
    56  
    38  
    20  
    2

You may assume that the user will only enter positive numbers.

**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with program that gets a number from the user and
stores it in a variable called  **starting_number**.  

Write a program that prints all of the numbers between  **starting_number**
and  **0**  (including **0** ), counting down by **18** each time.



For example, if the user types  **108** , your program should print:

    
    
    108  
    90  
    72  
    54  
    36  
    18  
    0

Similarly, if the user types **92** , your program should print:

    
    
    92  
    74  
    56  
    38  
    20  
    2

You may assume that the user will only enter positive numbers.

**HINT:**

  * This problem can be solved using either a  **for**  or  **while**  loop.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","

starting_number = int(input(""Enter a number: ""))

for num in range(starting_number, -1, -18):
    print(num)

"
299,a2_2_orbit,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

The oribt period of a planet can be calculated using the following formula:



`Period = (D * 3.14)/ V`





In this formula:

  * **D**  is the diameter of the orbit path (a floating point number)
  * **V**  is the velocity of the planet (a floating point number)



Write a function called  **orbit_period**  that takes **D**  and **V**  as
parameters (in that order), and  **returns**  the orbit period.  



**NOTES:**

  * You do NOT need to call this function.  Simply define it.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

The oribt period of a planet can be calculated using the following formula:



`Period = (D * 3.14)/ V`





In this formula:

  * **D**  is the diameter of the orbit path (a floating point number)
  * **V**  is the velocity of the planet (a floating point number)



Write a function called  **orbit_period**  that takes **D**  and **V**  as
parameters (in that order), and  **returns**  the orbit period.  



**NOTES:**

  * You do NOT need to call this function.  Simply define it.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def orbit_period(D, V):
    return (D * 3.14) / V
"
300,a2_1_right_triangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_hypotenuse, which
takes two parameters:

  * **side_1**
  * **side_2**

Call this function and pass it  **15**  for  **side_1** , and  **6.786**  for
**side_2**.  Store the result in a variable called  **result**.  Do not print.
Simply call the function, and store the returned value in the variable
**result**.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a function called calculate_hypotenuse, which
takes two parameters:

  * **side_1**
  * **side_2**

Call this function and pass it  **15**  for  **side_1** , and  **6.786**  for
**side_2**.  Store the result in a variable called  **result**.  Do not print.
Simply call the function, and store the returned value in the variable
**result**.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_hypotenuse(side_1, side_2):
    # Calculate the hypotenuse using Pythagorean theorem
    hypotenuse = (side_1 ** 2 + side_2 ** 2) ** 0.5
    return hypotenuse

result = calculate_hypotenuse(15, 6.786)
"
301,a1_6_pilot_quals,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

C-130 Pilot qualifications usually depend on a pilot's flight experience in
terms of flight hours.

**C-130 Pilot Qualification** | **Flight Hours**  
---|---  
Upgrade Pilot | 600  
Aircraft Commander | 800  
Formation Lead | 1000  
Instructor Pilot | 1250  
Evaluator Pilot | 1500  
  
  
Write a Python program that asks the user to enter the number of flight hours
they currently have (does not need to be a whole number). Then, referencing
the table above, print out all qualifications they should have achieved in the
aircraft (one per line). If the their experience in the C-130 is more than 600
flight hours, output ""Co-Pilot"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 1996 | 1156.7 | 535.4  
**Output** |

Upgrade Pilot  
Aircraft Commander  
Formation Lead  
Instructor Pilot  
Evaluator Pilot

|

Upgrade Pilot  
Aircraft Commander  
Formation Lead

| Co-Pilot  
  
NOTE: The qualifications can be listed in any order, so long as only the ones
in range are printed.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

C-130 Pilot qualifications usually depend on a pilot's flight experience in
terms of flight hours.

**C-130 Pilot Qualification** | **Flight Hours**  
---|---  
Upgrade Pilot | 600  
Aircraft Commander | 800  
Formation Lead | 1000  
Instructor Pilot | 1250  
Evaluator Pilot | 1500  
  
  
Write a Python program that asks the user to enter the number of flight hours
they currently have (does not need to be a whole number). Then, referencing
the table above, print out all qualifications they should have achieved in the
aircraft (one per line). If the their experience in the C-130 is more than 600
flight hours, output ""Co-Pilot"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 1996 | 1156.7 | 535.4  
**Output** |

Upgrade Pilot  
Aircraft Commander  
Formation Lead  
Instructor Pilot  
Evaluator Pilot

|

Upgrade Pilot  
Aircraft Commander  
Formation Lead

| Co-Pilot  
  
NOTE: The qualifications can be listed in any order, so long as only the ones
in range are printed.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
flight_hours = float(input(""Enter your number of flight hours: ""))
if flight_hours >= 600:
    print(""Upgrade Pilot"")
if flight_hours >= 800:
    print(""Aircraft Commander"")
if flight_hours >= 1000:
    print(""Formation Lead"")
if flight_hours >= 1250:
    print(""Instructor Pilot"")
if flight_hours >= 1500:
    print(""Evaluator Pilot"")
if flight_hours > 600:
    print(""Co-Pilot"")
"
302,a1_6_payload,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

The USAF is known for its massive cargo transport capabilities. Below are the
names of 5 aircraft, as well as their maximum payload capacity



**Cargo Aircraft**

|

**Maximum Load (inclusive, in Lbs. )**  
  
---|---  
  
C-5 Galaxy

|

285000  
  
C-17 Globemaster

|

170900  
  
KC-10 Extender

|

169000  
  
C-130 Hercules

|

42000  
  
V-22 Osprey

|

6000  
  
  
Write a Python program that asks the user to enter the payload weight (in
Lbs.) that needs to be moved. Then, referencing the table, print out all of
the Aircraft that could potentially carry that payload (one per line). If no
aircraft can carry the payload, output ""Too Heavy for Airlift"".



**EXAMPLES:**

  |

**Example 1**

|

**Example 2**

|

**Example 3**  
  
---|---|---|---  
  
**Input**

|

150000

|

250000

|

300000  
  
**Output**

|

C-5 Galaxy

C-17 Globemaster

KC-10 Extender

|

C-5 Galaxy

|

Too Heavy for Airlift  
  
NOTE: The aircraft can be listed in any order, so long as only the ones
capable of the lift are printed.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:**

The USAF is known for its massive cargo transport capabilities. Below are the
names of 5 aircraft, as well as their maximum payload capacity



**Cargo Aircraft**

|

**Maximum Load (inclusive, in Lbs. )**  
  
---|---  
  
C-5 Galaxy

|

285000  
  
C-17 Globemaster

|

170900  
  
KC-10 Extender

|

169000  
  
C-130 Hercules

|

42000  
  
V-22 Osprey

|

6000  
  
  
Write a Python program that asks the user to enter the payload weight (in
Lbs.) that needs to be moved. Then, referencing the table, print out all of
the Aircraft that could potentially carry that payload (one per line). If no
aircraft can carry the payload, output ""Too Heavy for Airlift"".



**EXAMPLES:**

  |

**Example 1**

|

**Example 2**

|

**Example 3**  
  
---|---|---|---  
  
**Input**

|

150000

|

250000

|

300000  
  
**Output**

|

C-5 Galaxy

C-17 Globemaster

KC-10 Extender

|

C-5 Galaxy

|

Too Heavy for Airlift  
  
NOTE: The aircraft can be listed in any order, so long as only the ones
capable of the lift are printed.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def check_airlift(payload):
    aircrafts = {
        ""C-5 Galaxy"": 285000,
        ""C-17 Globemaster"": 170900,
        ""KC-10 Extender"": 169000,
        ""C-130 Hercules"": 42000,
        ""V-22 Osprey"": 6000
    }
    
    capable_aircrafts = []
    for aircraft, capacity in aircrafts.items():
        if payload <= capacity:
            capable_aircrafts.append(aircraft)
    
    if len(capable_aircrafts) == 0:
        return ""Too Heavy for Airlift""
    else:
        return ""\n"".join(capable_aircrafts)

payload = int(input(""Enter the payload weight (in Lbs.): ""))
print(check_airlift(payload))
"
303,a1_6_missilethreat,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

According to intelligence reports, the North Korean military uses at least 5
different classes of Ballistic Missiles. The names of these missiles, as well
as their maximum theoretical range, are provided below:

**Missile Class** | **Maximum Range (inclusive, in Kilometers)**  
---|---  
Hwasong-6 | 500  
KN-11 | 1200  
Musudan BM-25 | 4000  
Hwasong-14 | 8000  
Taepodong-2 | 12000  
  
  
Write a Python program that asks the user to enter the distance to a potential
target (in Kilometers). Then, referencing the table, print out all of the
Missile Classes that could potentially reach the target (one per line). If no
missiles are in range, output ""Not in range"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 1800 | 8000 | 18000  
**Output** | Musudan BM-25  
Hwason-14  
Taepodong-2 |

Hwasong-14  
Taepodong-2

| Not in range  
  
NOTE: The missiles can be listed in any order, so long as only the ones in
range are printed.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

According to intelligence reports, the North Korean military uses at least 5
different classes of Ballistic Missiles. The names of these missiles, as well
as their maximum theoretical range, are provided below:

**Missile Class** | **Maximum Range (inclusive, in Kilometers)**  
---|---  
Hwasong-6 | 500  
KN-11 | 1200  
Musudan BM-25 | 4000  
Hwasong-14 | 8000  
Taepodong-2 | 12000  
  
  
Write a Python program that asks the user to enter the distance to a potential
target (in Kilometers). Then, referencing the table, print out all of the
Missile Classes that could potentially reach the target (one per line). If no
missiles are in range, output ""Not in range"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 1800 | 8000 | 18000  
**Output** | Musudan BM-25  
Hwason-14  
Taepodong-2 |

Hwasong-14  
Taepodong-2

| Not in range  
  
NOTE: The missiles can be listed in any order, so long as only the ones in
range are printed.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","distance = int(input(""Enter the distance to the potential target (in Kilometers): ""))

if distance <= 500:
    print(""Hwasong-6"")
if distance <= 1200:
    print(""KN-11"")
if distance <= 4000:
    print(""Musudan BM-25"")
if distance <= 8000:
    print(""Hwasong-14"")
if distance <= 12000:
    print(""Taepodong-2"")
    
if distance > 12000:
    print(""Not in range"")"
304,a1_6_evacuation,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
PROBLEM STATEMENT:  

Terrorist groups in the past have created improvised explosive devices in
various shapes and sizes. According to the National Counterterrorism Center,
the following evacuation distances are appropriate for certain explosive
devices.

Explosive Container

|

Evacuation Distance (inclusive, in Feet)  
  
---|---  
  
Pipe Bomb

|

850  
  
Suitcase Bomb

|

1850  
  
Sedan

|

2000  
  
Cargo Van

|

2750  
  
Semi-Trailer

|

7000  
  
  
Write a Python program that asks the user to enter a distance to a device (in
feet). Then, referencing the table, print out all of the explosive devices
that could potentially reach a target at the specified distance (one per
line). If no explosives can reach the specified distance, output ""Not in
range"".

EXAMPLES:

|

Example 1

|

Example 2

|

Example 3  
  
---|---|---|---  
  
Input

|

1900

|

2500

|

8000  
  
Output

|

Sedan  
Cargo Van  
Semi-Trailer

|

Cargo Van  
Semi-Trailer

|

Not in range  
  
NOTE: The devices can be listed in any order, so long as only the ones in
range are printed.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
PROBLEM STATEMENT:  

Terrorist groups in the past have created improvised explosive devices in
various shapes and sizes. According to the National Counterterrorism Center,
the following evacuation distances are appropriate for certain explosive
devices.

Explosive Container

|

Evacuation Distance (inclusive, in Feet)  
  
---|---  
  
Pipe Bomb

|

850  
  
Suitcase Bomb

|

1850  
  
Sedan

|

2000  
  
Cargo Van

|

2750  
  
Semi-Trailer

|

7000  
  
  
Write a Python program that asks the user to enter a distance to a device (in
feet). Then, referencing the table, print out all of the explosive devices
that could potentially reach a target at the specified distance (one per
line). If no explosives can reach the specified distance, output ""Not in
range"".

EXAMPLES:

|

Example 1

|

Example 2

|

Example 3  
  
---|---|---|---  
  
Input

|

1900

|

2500

|

8000  
  
Output

|

Sedan  
Cargo Van  
Semi-Trailer

|

Cargo Van  
Semi-Trailer

|

Not in range  
  
NOTE: The devices can be listed in any order, so long as only the ones in
range are printed.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
distance = int(input())
if distance <= 850:
    print(""Pipe Bomb"")
if distance <= 1850:
    print(""Suitcase Bomb"")
if distance <= 2000:
    print(""Sedan"")
if distance <= 2750:
    print(""Cargo Van"")
if distance <= 7000:
    print(""Semi-Trailer"")
if distance > 7000:
    print(""Not in range"")
"
305,a1_6_digitalstorage,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Assume someone takes hundreds of photos on their smartphone every week. They
are seeking the best and least expensive alternatives to store/share their
images because their phone's storage capacity is limited. Using the table
below, determine which storage options they should consider, assuming each
image has an average file size of 6 MB.



**Storage Option** | **Short Name** | **Number of Images (inclusive)**  
---|---|---  
CD-ROM (700 MB) | CD | 116  
DVD-ROM (4.7 GB) | DVD | 780  
USB Thumb Drive (16 GB) | USB Small | 2660  
USB Thumb Drive (64 GB) | USB Large | 10600  
Portable Hard Drive (256 GB) | Portable HDD | 42600  
  
  
Write a Python program that asks the user to enter the number of images that
need to be shared/stored (non-negative, whole number). Then, referencing the
table above, print out all the storage options (by Short Name) capable of
holding that many images (one per line). If no storage options are capable of
storing that many images, output ""Consider Cloud Storage"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 2000 | 4000 | 45000  
**Output** | USB Small  
USB Large  
Portable HDD |

USB Large  
Portable HDD

| Consider Cloud Storage  
  
NOTE: The devices can be listed in any order, so long as only the ones in
range are printed.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Assume someone takes hundreds of photos on their smartphone every week. They
are seeking the best and least expensive alternatives to store/share their
images because their phone's storage capacity is limited. Using the table
below, determine which storage options they should consider, assuming each
image has an average file size of 6 MB.



**Storage Option** | **Short Name** | **Number of Images (inclusive)**  
---|---|---  
CD-ROM (700 MB) | CD | 116  
DVD-ROM (4.7 GB) | DVD | 780  
USB Thumb Drive (16 GB) | USB Small | 2660  
USB Thumb Drive (64 GB) | USB Large | 10600  
Portable Hard Drive (256 GB) | Portable HDD | 42600  
  
  
Write a Python program that asks the user to enter the number of images that
need to be shared/stored (non-negative, whole number). Then, referencing the
table above, print out all the storage options (by Short Name) capable of
holding that many images (one per line). If no storage options are capable of
storing that many images, output ""Consider Cloud Storage"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 2000 | 4000 | 45000  
**Output** | USB Small  
USB Large  
Portable HDD |

USB Large  
Portable HDD

| Consider Cloud Storage  
  
NOTE: The devices can be listed in any order, so long as only the ones in
range are printed.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_images = int(input())

if num_images <= 116:
    print(""CD"")
if num_images <= 780:
    print(""DVD"")
if num_images <= 2660:
    print(""USB Small"")
if num_images <= 10600:
    print(""USB Large"")
if num_images <= 42600:
    print(""Portable HDD"")
if num_images > 42600:
    print(""Consider Cloud Storage"")
"
306,a1_6_broadband,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Choosing the right broadband speed for your internet connection depends on
which online activities you plan on engaging while online. Using the table
below, determine which activities are possible with a given broadband speed,
given in Kilobits per second (Kbps).



**Activity** | **Short Name** | **Minimum Broadband Speed  
(inclusive, in Kbps)**  
---|---|---  
Social Media | Social Media | 1000  
Multiplayer Gaming | Gaming | 4000  
HD Video Conferencing | Video Conferencing | 6000  
File Downloading | File Downloads | 10000  
Stream Ultra HD 4K Video | HD 4K Video | 25000  
  
  
Write a Python program that asks the user to enter the broadband speed in
Kbps. Then, referencing the table above, print out all the activities (by
Short Name) that can be achieved using that speed (one per line). If the
broadband speed is less than 1000 Kbps, output ""Upgrade to Broadband"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 8500 | 5000 | 750  
**Output** |

Social Media  
Gaming  
Video Conferencing

|

Social Media  
Gaming

| Upgrade to Broadband  
  
NOTE: The activities can be listed in any order, so long as only the ones in
range are printed.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Choosing the right broadband speed for your internet connection depends on
which online activities you plan on engaging while online. Using the table
below, determine which activities are possible with a given broadband speed,
given in Kilobits per second (Kbps).



**Activity** | **Short Name** | **Minimum Broadband Speed  
(inclusive, in Kbps)**  
---|---|---  
Social Media | Social Media | 1000  
Multiplayer Gaming | Gaming | 4000  
HD Video Conferencing | Video Conferencing | 6000  
File Downloading | File Downloads | 10000  
Stream Ultra HD 4K Video | HD 4K Video | 25000  
  
  
Write a Python program that asks the user to enter the broadband speed in
Kbps. Then, referencing the table above, print out all the activities (by
Short Name) that can be achieved using that speed (one per line). If the
broadband speed is less than 1000 Kbps, output ""Upgrade to Broadband"".



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 8500 | 5000 | 750  
**Output** |

Social Media  
Gaming  
Video Conferencing

|

Social Media  
Gaming

| Upgrade to Broadband  
  
NOTE: The activities can be listed in any order, so long as only the ones in
range are printed.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","broadband_speed = int(input())

if broadband_speed < 1000:
    print(""Upgrade to Broadband"")
if broadband_speed >= 1000:
    print(""Social Media"")
if broadband_speed >= 4000:
    print(""Gaming"")
if broadband_speed >= 6000:
    print(""Video Conferencing"")
if broadband_speed >= 10000:
    print(""File Downloads"")
if broadband_speed >= 25000:
    print(""HD 4K Video"")"
307,a1_5_scuba,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Recreational SCUBA divers have to plan out how many air tanks they will need
in order to safely dive. The amount varies per diver because each person
consumes air at a different rate. This rate is commonly called Surface Air
Consumption. You want to figure whether you can afford the air requirements
for the trips that you are planning.

Write an algorithm that asks for:

  *     * The total dive time for the trip in minutes 
    * The air budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The number of liters needed for the project.
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of compressed air is greater than or not greater than the budget, respectfully.



Assume that your Surface Air Consumption is **14.5** liters/minute, and that
air costs **2 cents** per liter. You may assume that all inputs are non-
negative numbers.



**EXAMPLES:**



  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 180  
70 |

120  
30  
  
**Output** | 2610.0  
52.2  
Within Budget | 1740.0  
34.800000000000004  
Over Budget  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Recreational SCUBA divers have to plan out how many air tanks they will need
in order to safely dive. The amount varies per diver because each person
consumes air at a different rate. This rate is commonly called Surface Air
Consumption. You want to figure whether you can afford the air requirements
for the trips that you are planning.

Write an algorithm that asks for:

  *     * The total dive time for the trip in minutes 
    * The air budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The number of liters needed for the project.
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of compressed air is greater than or not greater than the budget, respectfully.



Assume that your Surface Air Consumption is **14.5** liters/minute, and that
air costs **2 cents** per liter. You may assume that all inputs are non-
negative numbers.



**EXAMPLES:**



  | **Example 1** | **Example 2**  
---|---|---  
**Input** | 180  
70 |

120  
30  
  
**Output** | 2610.0  
52.2  
Within Budget | 1740.0  
34.800000000000004  
Over Budget  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
308,a1_5_runway,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

The CSAF has authorized new runways for any base that can accomplish the
project under their current budget. The new runways will be solid concrete
with their lengths measured in meters.

Write an algorithm that asks for:

  *     * The length of runway to be built (in meters)
    * The base's budget (in dollars--do not worry about the dollar sign, do not round to the nearest)



Your program should then output:

  *     * The amount of concrete (in tons) needed for the base's runway
    * The estimated cost (in dollars--do not output a dollar sign)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of materials is greater than or not greater than the base's budget, respectfully.

Assume that each meter of runway requires **  2.5** tons of concrete to build,
and that concrete costs  **$75.50**  per ton. You may assume that all inputs
are non-negative numbers.



**EXAMPLES:**

  |

Example 1

|

Example 2  
  
---|---|---  
  
Input

|

2000  
400000

|

1500  
250000  
  
Output

|

5000.0  
377500.0  
Within Budget

|

3750.0  
283125.0  
Over Budget  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

The CSAF has authorized new runways for any base that can accomplish the
project under their current budget. The new runways will be solid concrete
with their lengths measured in meters.

Write an algorithm that asks for:

  *     * The length of runway to be built (in meters)
    * The base's budget (in dollars--do not worry about the dollar sign, do not round to the nearest)



Your program should then output:

  *     * The amount of concrete (in tons) needed for the base's runway
    * The estimated cost (in dollars--do not output a dollar sign)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of materials is greater than or not greater than the base's budget, respectfully.

Assume that each meter of runway requires **  2.5** tons of concrete to build,
and that concrete costs  **$75.50**  per ton. You may assume that all inputs
are non-negative numbers.



**EXAMPLES:**

  |

Example 1

|

Example 2  
  
---|---|---  
  
Input

|

2000  
400000

|

1500  
250000  
  
Output

|

5000.0  
377500.0  
Within Budget

|

3750.0  
283125.0  
Over Budget  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
length = float(input())
budget = float(input())

concrete = length * 2.5
cost = concrete * 75.50

if cost > budget:
    outcome = ""Over Budget""
else:
    outcome = ""Within Budget""

print(concrete)
print(cost)
print(outcome)
"
309,a1_5_printer,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

A 3D printer converts computer generated models into physical objects by
heating and extruding a filament known as Polylactic Acid (PLA). PLA, normally
sold in spools, is directly fed to the printer head like a thread. You want to
determine if you can afford to 3D print a project given its volume of
material.

Write an algorithm that asks for:

  *     * The volume of the 3D model to be printed (in cm3)
    * The user's budget (in dollars--do not worry about the dollar sign, do not round to the nearest)



Your program should then output:

  *     * The length of material (in meters) needed to produce the object
    * The estimated cost (in dollars--do not output a dollar sign)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of materials is greater than or not greater than the user's budget, respectfully.

Assume that each cm3 requires **  0.312** meters of PLA to print, and that PLA
filament costs  **$0.063**  per meter. You may assume that all inputs are non-
negative numbers.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 15.0  
2.5 | 500.0  
5.0  
Output | 4.68  
0.29484  
Within Budget | 156.0  
9.828  
Over Budget  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

A 3D printer converts computer generated models into physical objects by
heating and extruding a filament known as Polylactic Acid (PLA). PLA, normally
sold in spools, is directly fed to the printer head like a thread. You want to
determine if you can afford to 3D print a project given its volume of
material.

Write an algorithm that asks for:

  *     * The volume of the 3D model to be printed (in cm3)
    * The user's budget (in dollars--do not worry about the dollar sign, do not round to the nearest)



Your program should then output:

  *     * The length of material (in meters) needed to produce the object
    * The estimated cost (in dollars--do not output a dollar sign)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of materials is greater than or not greater than the user's budget, respectfully.

Assume that each cm3 requires **  0.312** meters of PLA to print, and that PLA
filament costs  **$0.063**  per meter. You may assume that all inputs are non-
negative numbers.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 15.0  
2.5 | 500.0  
5.0  
Output | 4.68  
0.29484  
Within Budget | 156.0  
9.828  
Over Budget  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_3d_printing_cost(volume, budget):
    length = volume * 0.312
    cost = length * 0.063
    if cost <= budget:
        return length, cost, ""Within Budget""
    else:
        return length, cost, ""Over Budget""


# take inputs
volume = float(input())
budget = float(input())

# calculate and print the result
result = calculate_3d_printing_cost(volume, budget)
print(result[0])
print(result[1])
print(result[2])
"
310,a1_5_paint,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You are tasked to paint a large wall and need to see if your unit can afford
the paint for the project

Write an algorithm that asks for:

  *     * The size of the wall in square feet
    * The budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The amount of paint required to cover the wall
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of paint is greater than or not greater than the budget, respectfully.

Assume that a gallon of paint covers **15** square feet, and that the current
price of paint is  **$12.23**  per gallon. You may assume that all inputs are
non-negative numbers. You should also assume that you can purchase portions of
gallons of paint so do NOT round up to the nearest full gallon.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 120.0  
900.0 |

750.0  
100.0  
  
Output | 8.0  
97.84  
Within Budget | 50.0  
611.5  
Over Budget  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You are tasked to paint a large wall and need to see if your unit can afford
the paint for the project

Write an algorithm that asks for:

  *     * The size of the wall in square feet
    * The budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The amount of paint required to cover the wall
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of paint is greater than or not greater than the budget, respectfully.

Assume that a gallon of paint covers **15** square feet, and that the current
price of paint is  **$12.23**  per gallon. You may assume that all inputs are
non-negative numbers. You should also assume that you can purchase portions of
gallons of paint so do NOT round up to the nearest full gallon.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 120.0  
900.0 |

750.0  
100.0  
  
Output | 8.0  
97.84  
Within Budget | 50.0  
611.5  
Over Budget  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

def calculate_paint(size, budget):
    gallons_needed = math.ceil(size / 15)
    cost = gallons_needed * 12.23
    
    if cost <= budget:
        status = ""Within Budget""
    else:
        status = ""Over Budget""
    
    return gallons_needed, cost, status

size = float(input(""Enter the size of the wall in square feet: ""))
budget = float(input(""Enter the budget in dollars: ""))

gallons_needed, cost, status = calculate_paint(size, budget)

print(""Amount of paint required:"", gallons_needed)
print(""Estimated cost:"", cost)
print(status)
"
311,a1_5_fueldepot,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Fuel in the military is essential to conducting operations. Balancing mission
requirements against budgetary constraints is a constant concern.

Write an algorithm that asks for:

  *     * The distance to a target in miles
    * The budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The amount of fuel (in gallons) needed to reach the target
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of fuel is greater than or not greater than the budget, respectfully.

Assume that the convoy can get **  12.5** miles to the gallon, and that the
current price of fuel is  **$3.73**  per gallon. You may assume that all
inputs are non-negative numbers.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 130.7  
50.50 |

750  
100  
  
Output | 10.456  
39.0009  
Within Budget | 60.0  
223.80  
Over Budget  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Fuel in the military is essential to conducting operations. Balancing mission
requirements against budgetary constraints is a constant concern.

Write an algorithm that asks for:

  *     * The distance to a target in miles
    * The budget (in dollars--do not worry about the dollar sign)



Your program should then output:

  *     * The amount of fuel (in gallons) needed to reach the target
    * The estimated cost (in dollars--do not output a dollar sign, do not round to the nearest)
    * Either ""Over Budget"" or ""Within Budget"", depending on whether the cost of fuel is greater than or not greater than the budget, respectfully.

Assume that the convoy can get **  12.5** miles to the gallon, and that the
current price of fuel is  **$3.73**  per gallon. You may assume that all
inputs are non-negative numbers.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Input | 130.7  
50.50 |

750  
100  
  
Output | 10.456  
39.0009  
Within Budget | 60.0  
223.80  
Over Budget  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Skeleton Code

def calculate_fuel_distance_budget(distance, budget):
    fuel_needed = distance / 12.5
    cost = fuel_needed * 3.73

    if cost > budget:
        status = ""Over Budget""
    else:
        status = ""Within Budget""

    return fuel_needed, cost, status


# Test Cases
print(calculate_fuel_distance_budget(130.7, 750))    # expected output: (10.456, 39.0009, ""Within Budget"")
print(calculate_fuel_distance_budget(50.50, 100))    # expected output: (4.04, 15.1072, ""Over Budget"")
"
312,a1_4_sickness,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Body temperature (in Fahrenheit)
  * Body aches ( **a string** , which will be either ""yes"" or ""no"")
  * Loss of smell ( **a string** , which will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine a person's
risk of having an infectious disease:

  1. If the person's temperature is above 100.4 degrees, print ""High Risk""
  2. If the person is experiencing both body aches and loss of smell, print ""High Risk""
  3. For all other situations, print ""Low Risk""



**EXAMPLE:  
**

| **Example 1** | **Example 2**  
---|---|---  
Input |

99.0  
yes  
yes

| 100.4  
no  
yes  
Output | High Risk | Low Risk  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Body temperature (in Fahrenheit)
  * Body aches ( **a string** , which will be either ""yes"" or ""no"")
  * Loss of smell ( **a string** , which will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine a person's
risk of having an infectious disease:

  1. If the person's temperature is above 100.4 degrees, print ""High Risk""
  2. If the person is experiencing both body aches and loss of smell, print ""High Risk""
  3. For all other situations, print ""Low Risk""



**EXAMPLE:  
**

| **Example 1** | **Example 2**  
---|---|---  
Input |

99.0  
yes  
yes

| 100.4  
no  
yes  
Output | High Risk | Low Risk  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
temperature = float(input())
body_aches = input()
loss_of_smell = input()

if temperature > 100.4:
    print(""High Risk"")
elif body_aches == ""yes"" and loss_of_smell == ""yes"":
    print(""High Risk"")
else:
    print(""Low Risk"")
"
313,a1_4_run,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Outside Temperature (in Fahrenheit)
  * Is it daytime? **(a string** that will be either ""yes"" or ""no"")
  * Is it raining? ( **a string** that will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine if you go on
a run:

  1. If the outside temperature is above 95 degrees, print ""Do Not Run""
  2. If it is daytime and it is NOT raining, print ""Go Run""
  3. For all other situations, print ""Do Not Run""



**EXAMPLE:  
**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
Input |

99.0  
yes  
no

| 80  
yes  
no | 75  
no  
yes  
Output | Do Not Run | Go Run | Do Not Run  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Outside Temperature (in Fahrenheit)
  * Is it daytime? **(a string** that will be either ""yes"" or ""no"")
  * Is it raining? ( **a string** that will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine if you go on
a run:

  1. If the outside temperature is above 95 degrees, print ""Do Not Run""
  2. If it is daytime and it is NOT raining, print ""Go Run""
  3. For all other situations, print ""Do Not Run""



**EXAMPLE:  
**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
Input |

99.0  
yes  
no

| 80  
yes  
no | 75  
no  
yes  
Output | Do Not Run | Go Run | Do Not Run  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
temp = float(input())
daytime = input()
rain = input()

if temp > 95:
    print(""Do Not Run"")
elif daytime == ""yes"" and rain == ""no"":
    print(""Go Run"")
else:
    print(""Do Not Run"")
"
314,a1_4_pt,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Outside Temperature (in Fahrenheit)
  * Is it raining? ( **a string** , which will be either ""yes"" or ""no"")
  * Winds over 20 knots? ( **a string** , which will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine if PT is
cancelled or a go:

  1. If the outside temperature is above 90 degrees, print ""PT Cancelled""
  2. If it is raining and there are winds over 20 knots print ""PT Cancelled""
  3. For all other situations, print ""PT is a Go""



**EXAMPLE:  
**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
Input |

99.0  
no  
no

| 85  
yes  
yes | 85  
no  
yes  
Output | PT Cancelled | PT Cancelled | PT is a Go  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Outside Temperature (in Fahrenheit)
  * Is it raining? ( **a string** , which will be either ""yes"" or ""no"")
  * Winds over 20 knots? ( **a string** , which will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine if PT is
cancelled or a go:

  1. If the outside temperature is above 90 degrees, print ""PT Cancelled""
  2. If it is raining and there are winds over 20 knots print ""PT Cancelled""
  3. For all other situations, print ""PT is a Go""



**EXAMPLE:  
**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
Input |

99.0  
no  
no

| 85  
yes  
yes | 85  
no  
yes  
Output | PT Cancelled | PT Cancelled | PT is a Go  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
temperature = float(input(""Outside Temperature (in Fahrenheit): ""))
raining = input(""Is it raining? (yes/no): "")
winds = input(""Winds over 20 knots? (yes/no): "")

if temperature > 90:
    print(""PT Cancelled"")
elif raining == ""yes"" and winds == ""yes"":
    print(""PT Cancelled"")
else:
    print(""PT is a Go"")
"
315,a1_4_dog,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Outside Temperature (in Fahrenheit)
  * Is it raining? ( **a string** that will be either ""yes"" or ""no"")
  * Is it daytime? ( **a string** that will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine if the dog
is outside:

  1. If the outside temperature is above 85 degrees, print ""Dog Inside""
  2. If it is raining outside and it is NOT daytime, print ""Dog Inside""
  3. For all other situations, print ""Dog Outside""



**EXAMPLE:  
**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
Input |

99.0  
no  
yes

| 80  
yes  
no | 75  
no  
yes  
Output | Dog Inside | Dog Inside | Dog Outside  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a template that gets the following values from
the user:

  * Outside Temperature (in Fahrenheit)
  * Is it raining? ( **a string** that will be either ""yes"" or ""no"")
  * Is it daytime? ( **a string** that will be either ""yes"" or ""no"")



Using the following rules as a guide, have your program determine if the dog
is outside:

  1. If the outside temperature is above 85 degrees, print ""Dog Inside""
  2. If it is raining outside and it is NOT daytime, print ""Dog Inside""
  3. For all other situations, print ""Dog Outside""



**EXAMPLE:  
**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
Input |

99.0  
no  
yes

| 80  
yes  
no | 75  
no  
yes  
Output | Dog Inside | Dog Inside | Dog Outside  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
temp = float(input())
raining = input()
daytime = input()

if temp > 85:
    print(""Dog Inside"")
elif raining == ""yes"" and daytime == ""no"":
    print(""Dog Inside"")
else:
    print(""Dog Outside"")
"
316,a1_3_vspeed,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

You have been provided with a partially complete Python program that contains
2 variables.

  1. speed_of_vehicle(input by the user in mph)
  2. speed_limit (already initialized in mph)



Add code to the end of this program that will output:

  *     *         Too fast, slow down!

If the vehicle speed is higher than the speed limit  
  

    *         Maintain Speed

If the vehicle speed is equal to the speed limit  
  

    *         Too slow, speed up!

If the vehicle speed is lower than the speed limit  
  



**EXAMPLES:** ****

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 80 | 65 | 40  
**Output** | Too fast, slow down! | Maintain Speed | Too slow, speed up!


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

You have been provided with a partially complete Python program that contains
2 variables.

  1. speed_of_vehicle(input by the user in mph)
  2. speed_limit (already initialized in mph)



Add code to the end of this program that will output:

  *     *         Too fast, slow down!

If the vehicle speed is higher than the speed limit  
  

    *         Maintain Speed

If the vehicle speed is equal to the speed limit  
  

    *         Too slow, speed up!

If the vehicle speed is lower than the speed limit  
  



**EXAMPLES:** ****

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 80 | 65 | 40  
**Output** | Too fast, slow down! | Maintain Speed | Too slow, speed up!


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","This is the answer code:

```python
# Skeleton Code:

speed_of_vehicle = int(input(""Enter the speed of the vehicle (in mph): ""))  # input by the user in mph
speed_limit = 60  # already initialized in mph

# Add code to output the appropriate message based on the vehicle speed and speed limit

if speed_of_vehicle > speed_limit:
    print(""Too fast, slow down!"")
elif speed_of_vehicle == speed_limit:
    print(""Maintain Speed"")
else:
    print(""Too slow, speed up!"")
```

The added code will output the appropriate message based on the vehicle's speed and the speed limit."
317,a1_3_speed,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. aircraft_speed (input by the user in mph)
  2. speed_of_sound (already initialized in mph)



Add code to the end of this program that will output:

  *     *         Faster than Mach 1 

If the aircraft speed is higher than the speed of sound  
  

    *         Mach 1 

If the aircraft speed is equal to the speed of sound  
  

    *         Slower than Mach 1 

If the aircraft speed is lower than the speed of sound  
  



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 800 | 767.269 | 450.8  
**Output** | Faster than Mach 1 | Mach 1 | Slower than Mach 1


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. aircraft_speed (input by the user in mph)
  2. speed_of_sound (already initialized in mph)



Add code to the end of this program that will output:

  *     *         Faster than Mach 1 

If the aircraft speed is higher than the speed of sound  
  

    *         Mach 1 

If the aircraft speed is equal to the speed of sound  
  

    *         Slower than Mach 1 

If the aircraft speed is lower than the speed of sound  
  



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 800 | 767.269 | 450.8  
**Output** | Faster than Mach 1 | Mach 1 | Slower than Mach 1


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
aircraft_speed = float(input())
speed_of_sound = 767.269

if aircraft_speed > speed_of_sound:
    print(""Faster than Mach 1"")
elif aircraft_speed == speed_of_sound:
    print(""Mach 1"")
else:
    print(""Slower than Mach 1"")
"
318,a1_3_satellite,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

You have been provided with a partially complete Python program that contains
2 variables.

  1. satellite_speed (input by the user in km/s)
  2. orbit_speed (already initialize in km/s)



Add code to the end of this program that will output:

    *       *             Crashed to Earth

If the speed of the satellite is below the orbital speed.

      *             In Orbit

If the speed of the satellite is equal to the orbital speed.

      *             Lost to Space

If the speed of the satellite is above the orbital speed.



** **

**EXAMPLES:**

|

**Example 1**

|

**Example 2**

|

**Example 3**  
  
---|---|---|---  
  
**Input**

|

3

|

7.8

|

9  
  
**Output**

|

Crashed to Earth

|

In Orbit

|

Lost to Space  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

You have been provided with a partially complete Python program that contains
2 variables.

  1. satellite_speed (input by the user in km/s)
  2. orbit_speed (already initialize in km/s)



Add code to the end of this program that will output:

    *       *             Crashed to Earth

If the speed of the satellite is below the orbital speed.

      *             In Orbit

If the speed of the satellite is equal to the orbital speed.

      *             Lost to Space

If the speed of the satellite is above the orbital speed.



** **

**EXAMPLES:**

|

**Example 1**

|

**Example 2**

|

**Example 3**  
  
---|---|---|---  
  
**Input**

|

3

|

7.8

|

9  
  
**Output**

|

Crashed to Earth

|

In Orbit

|

Lost to Space  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","satellite_speed = float(input(""Enter satellite speed (in km/s): ""))
orbit_speed = 7.8

if satellite_speed < orbit_speed:
    print(""Crashed to Earth"")
elif satellite_speed == orbit_speed:
    print(""In Orbit"")
else:
    print(""Lost to Space"")"
319,a1_3_goldilocks,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. porridge_temp (input by the user in °F)
  2. correct_temp (already initialized in °F)



Add code to the end of this program that will output:

  *     *         Too Hot 

When the porridge temp is above the correct temperature.  
  

    *         Just Right 

When the porridge temp is equal to the correct temperature  
  

    *         Too Cold 

When the porridge temp is below the correct temperature.  
  



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 110 | 105 | 98  
**Output** | Too Hot | Just Right | Too Cold


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. porridge_temp (input by the user in °F)
  2. correct_temp (already initialized in °F)



Add code to the end of this program that will output:

  *     *         Too Hot 

When the porridge temp is above the correct temperature.  
  

    *         Just Right 

When the porridge temp is equal to the correct temperature  
  

    *         Too Cold 

When the porridge temp is below the correct temperature.  
  



**EXAMPLES:**

  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 110 | 105 | 98  
**Output** | Too Hot | Just Right | Too Cold


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
porridge_temp = int(input(""Enter the porridge temperature in °F: ""))
correct_temp = 100

# Add code below to output the correct message based on the porridge_temp and correct_temp

if porridge_temp > correct_temp:
    print(""Too Hot"")
elif porridge_temp == correct_temp:
    print(""Just Right"")
else:
    print(""Too Cold"")
"
320,a1_3_cards,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. number_of_cards (input by the user)
  2. cards_needed (already initialized)



Add code to the end of this program that will output whether you have enough
cards to make a full deck of 52 cards (already initialized):

  *     *         Too many cards 

If the number of cards is more than the cards needed  
  

    *         Full deck

If the number of cards is equal to the cards needed  
  

    *         Not enough cards 

If the number of cards is fewer than the cards needed  
  



**EXAMPLES:**



  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 57 | 52 | 38  
**Output** | Too many cards | Full deck | Not enough cards


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. number_of_cards (input by the user)
  2. cards_needed (already initialized)



Add code to the end of this program that will output whether you have enough
cards to make a full deck of 52 cards (already initialized):

  *     *         Too many cards 

If the number of cards is more than the cards needed  
  

    *         Full deck

If the number of cards is equal to the cards needed  
  

    *         Not enough cards 

If the number of cards is fewer than the cards needed  
  



**EXAMPLES:**



  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 57 | 52 | 38  
**Output** | Too many cards | Full deck | Not enough cards


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
number_of_cards = int(input())
cards_needed = 52

# Add your code here


"
321,a1_3_arrow,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. arrow_height (input by the user in feet)
  2. apple_height (already initialized in feet)



Add code to the end of this program that will output:

  *     *         Arrow too high 

If the arrow height is higher than the apple  
  

    *         Direct hit

If the arrow height is equal to the apple  
  

    *         Arrow too low 

If the arrow is lower than the apple  
  



**EXAMPLES:**



  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 7.1 | 6.2 | 5.9  
**Output** | Arrow too high | Direct hit | Arrow too low


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a partially complete Python program that contains
2 variables.

  1. arrow_height (input by the user in feet)
  2. apple_height (already initialized in feet)



Add code to the end of this program that will output:

  *     *         Arrow too high 

If the arrow height is higher than the apple  
  

    *         Direct hit

If the arrow height is equal to the apple  
  

    *         Arrow too low 

If the arrow is lower than the apple  
  



**EXAMPLES:**



  | **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | 7.1 | 6.2 | 5.9  
**Output** | Arrow too high | Direct hit | Arrow too low


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
arrow_height = float(input())
apple_height = 6.5

if arrow_height > apple_height:
    print(""Arrow too high"")
elif arrow_height == apple_height:
    print(""Direct hit"")
else:
    print(""Arrow too low"")
"
322,a1_2_spheres,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a program that calculates the volume of a multiple spheres.  The
template provided to you defines 2 variables:

  * **radius**  \- radius of the sphere
  * **total**  \- The number of spheres



Calculate the volume, using the following formula:

    
    
    V=(4/3)r3t

Where . . .

  *     * ****  is the mathematical constant (see the HINT for more details)
    * **r**  is the radius of the cylinder
    * **t** is the number of spheres



Store the answer in a variable called **  volume**.  You do not need to print
the variable.



**HINT:** ****

The math module contains the mathematical constant, .  To use it, simply type
**math.pi**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a program that calculates the volume of a multiple spheres.  The
template provided to you defines 2 variables:

  * **radius**  \- radius of the sphere
  * **total**  \- The number of spheres



Calculate the volume, using the following formula:

    
    
    V=(4/3)r3t

Where . . .

  *     * ****  is the mathematical constant (see the HINT for more details)
    * **r**  is the radius of the cylinder
    * **t** is the number of spheres



Store the answer in a variable called **  volume**.  You do not need to print
the variable.



**HINT:** ****

The math module contains the mathematical constant, .  To use it, simply type
**math.pi**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

radius = 2
total = 5

volume = (4/3) * math.pi * radius**3 * total
"
323,a1_2_radius,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a program that calculates the area of multiple circles.  The template
provided to you defines 2 variables:

  * **radius**  \- radius of the circle
  * **total**  \- The number of circles



Calculate the area, using the following formula:

    
    
    A=r2t

Where . . .

  *     * ****  is the mathematical constant (see the HINT for more details)
    * **r** is the radius of the circle
    * **t** is the number of circles



Store the answer in a variable called **area**.  You do not need to print the
variable.



**HINT:** ****

The math module contains the mathematical constant, .  To use it, simply type
**math.pi**

Variables

Variable | Min | Max | Decimal Places  
---|---|---|---  
  
Formulas

0

0

Possible Solutions

Show Answers for


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a program that calculates the area of multiple circles.  The template
provided to you defines 2 variables:

  * **radius**  \- radius of the circle
  * **total**  \- The number of circles



Calculate the area, using the following formula:

    
    
    A=r2t

Where . . .

  *     * ****  is the mathematical constant (see the HINT for more details)
    * **r** is the radius of the circle
    * **t** is the number of circles



Store the answer in a variable called **area**.  You do not need to print the
variable.



**HINT:** ****

The math module contains the mathematical constant, .  To use it, simply type
**math.pi**

Variables

Variable | Min | Max | Decimal Places  
---|---|---|---  
  
Formulas

0

0

Possible Solutions

Show Answers for


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

radius = 4
total = 3

area = math.pi * radius ** 2 * total

area"
324,a1_2_interest,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the amount of money a person
will earn from an investment.  The template provided to you defines 3
variables:

  * **principal_amount**  \- The principal (i.e., starting) amount of money that a person has
  * **interest_rate**  \- The interest rate
  * **time**  \- The length of the investment (in months)



Calculate the amount of money earned, using the following formula:

    
    
    amount = pert

Where . . .

  *     * **p**  is the principal amount
    * **e**  is the mathematical constant (approximately equal to 2.718... -- see the HINT for more details)
    * **r**  is the interest rate
    * **t**  is the time



Store the answer in a variable called  **amount.   **You do not need to print
the variable.



**HINT:** ****

The math module contains the mathematical constant, e.  To use it, simply type
**math.e**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You are trying to write a program that calculates the amount of money a person
will earn from an investment.  The template provided to you defines 3
variables:

  * **principal_amount**  \- The principal (i.e., starting) amount of money that a person has
  * **interest_rate**  \- The interest rate
  * **time**  \- The length of the investment (in months)



Calculate the amount of money earned, using the following formula:

    
    
    amount = pert

Where . . .

  *     * **p**  is the principal amount
    * **e**  is the mathematical constant (approximately equal to 2.718... -- see the HINT for more details)
    * **r**  is the interest rate
    * **t**  is the time



Store the answer in a variable called  **amount.   **You do not need to print
the variable.



**HINT:** ****

The math module contains the mathematical constant, e.  To use it, simply type
**math.e**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

principal_amount = 1000
interest_rate = 0.05
time = 12

amount = principal_amount * math.e**(interest_rate * time)
"
325,a1_2_cones,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a program that calculates the volume of multiple identical cones.  The
template provided to you defines 3 variables:

  * **radius**  \- radius of the cones
  * **height** \- height of the cones
  * **total**  \- The number of cones



Calculate the volume, using the following formula:

    
    
    V =  r2(h/3)t

Where . . .

  *     * ****  is the mathematical constant (see the HINT for more details)
    * **r**  is the radius of the cones
    * **h  **is the height of the cones
    * **t**  is the total amount of cones



Store the answer in a variable called **volume**.  You do not need to print
the variable.



**HINT:** ****

The math module contains the mathematical constant, .  To use it, simply type
**math.pi**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a program that calculates the volume of multiple identical cones.  The
template provided to you defines 3 variables:

  * **radius**  \- radius of the cones
  * **height** \- height of the cones
  * **total**  \- The number of cones



Calculate the volume, using the following formula:

    
    
    V =  r2(h/3)t

Where . . .

  *     * ****  is the mathematical constant (see the HINT for more details)
    * **r**  is the radius of the cones
    * **h  **is the height of the cones
    * **t**  is the total amount of cones



Store the answer in a variable called **volume**.  You do not need to print
the variable.



**HINT:** ****

The math module contains the mathematical constant, .  To use it, simply type
**math.pi**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

radius = 5
height = 10
total = 3

volume = math.pi * radius**2 * (height/3) * total
"
326,a1_2_circles,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a program that calculates the area of multiple circles.  The template
provided to you defines 2 variables:

  * **radius**  \- radius of the circle
  * **total**  \- The number of circles



Calculate the area, using the following formula:

    
    
    A=r2t

Where . . .

  *     * ****  is the mathematical constant (see the HINT for more details)
    * **r** is the radius of the circle
    * **t** is the number of circles



Store the answer in a variable called **area**.  You do not need to print the
variable.



**HINT:** ****

The math module contains the mathematical constant, .  To use it, simply type
**math.pi**

Variables

Variable | Min | Max | Decimal Places  
---|---|---|---  
  
Formulas

0

0

Possible Solutions

Show Answers for


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a program that calculates the area of multiple circles.  The template
provided to you defines 2 variables:

  * **radius**  \- radius of the circle
  * **total**  \- The number of circles



Calculate the area, using the following formula:

    
    
    A=r2t

Where . . .

  *     * ****  is the mathematical constant (see the HINT for more details)
    * **r** is the radius of the circle
    * **t** is the number of circles



Store the answer in a variable called **area**.  You do not need to print the
variable.



**HINT:** ****

The math module contains the mathematical constant, .  To use it, simply type
**math.pi**

Variables

Variable | Min | Max | Decimal Places  
---|---|---|---  
  
Formulas

0

0

Possible Solutions

Show Answers for


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",Please write what is your doubt about the problem.
327,a1_1_cadet,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write the Python code needed to get three values from the user:

  1. A string representing the users name.  Store this value in a variable called **cadet** **_name**
  2. A floating point value representing their height in meters.  Store this value in a variable called **cadet_height**
  3. An integer representing their weight.  Store this value in a variable called **cadet_weight**

**IMPORTANT:**   Your template file contains a print statement that combines
these values to produce an output (see Example).   **Do not modify this
line.**   Simply add your input statements in the space provided.



**EXAMPLE:** ****

If the user types ""Snuffy"", 2.1, and 185, your program should print:

    
    
    Cadet Snuffy is 2.1 meters tall and weighs 180 lbs.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write the Python code needed to get three values from the user:

  1. A string representing the users name.  Store this value in a variable called **cadet** **_name**
  2. A floating point value representing their height in meters.  Store this value in a variable called **cadet_height**
  3. An integer representing their weight.  Store this value in a variable called **cadet_weight**

**IMPORTANT:**   Your template file contains a print statement that combines
these values to produce an output (see Example).   **Do not modify this
line.**   Simply add your input statements in the space provided.



**EXAMPLE:** ****

If the user types ""Snuffy"", 2.1, and 185, your program should print:

    
    
    Cadet Snuffy is 2.1 meters tall and weighs 180 lbs.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
cadet_name = input()
cadet_height = float(input())
cadet_weight = int(input())

print(""Cadet"", cadet_name, ""is"", cadet_height, ""meters tall and weighs"", cadet_weight, ""lbs."")
"
328,PA2_practice4,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `fuelprices.csv` that contains
monthly gasoline prices from 2006 - 2012. Here is a typical line from the
dataset (each line ends with the newline \n character):

`1/1/2006 0:00,Regular,2.314`



Each position in the line (separated by a comma) represents a different data
element, or column. The following table shows how the above line can be
interpreted:

| Day | Gas Type | Price (in Dollars)  
---|---|---|---  
Value | 1/1/2006 0:00 | Regular | 2.314  
  


Write a Python program that asks the user for:

  * A Gas Type (e.g., Regular)



Your program should then read the file and output:

  * The average price of gas for that gas type




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You have been provided with a dataset called `fuelprices.csv` that contains
monthly gasoline prices from 2006 - 2012. Here is a typical line from the
dataset (each line ends with the newline \n character):

`1/1/2006 0:00,Regular,2.314`



Each position in the line (separated by a comma) represents a different data
element, or column. The following table shows how the above line can be
interpreted:

| Day | Gas Type | Price (in Dollars)  
---|---|---|---  
Value | 1/1/2006 0:00 | Regular | 2.314  
  


Write a Python program that asks the user for:

  * A Gas Type (e.g., Regular)



Your program should then read the file and output:

  * The average price of gas for that gas type




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

def calculate_average_gas_price(gas_type):
    total_price = 0
    count = 0
    
    with open('fuelprices.csv', 'r') as file:
        reader = csv.reader(file)
        next(reader)  # Skip the header row
        
        for row in reader:
            if row[1] == gas_type:
                total_price += float(row[2])
                count += 1
    
    average_price = total_price / count
    return average_price

gas_type = input(""Enter a gas type: "")
average_price = calculate_average_gas_price(gas_type)
print(""The average price of gas for"", gas_type, ""is"", average_price)
"
329,PA2_practice3,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You are writing a program to analyze the BMI of cadets.  Write a program
that asks for the number of cadets, and then gets that many weights and
heights (alternating, a weight then the corresponding height, in that order).
Your program should then output the number of thin, healthy, overweight, and
obese cadets (based on their BMI), using the following formula and table as a
guide:



**BMI = 703 * (weight / height 2)**



**Rating** | **BMI**  
---|---  
Thin | less than 18.5  
Healthy | at least 18.5 but less than 25  
Overweight | at least 25 but less than 30  
Obese | 30 or more  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

3

180  
60  
149  
68  
168  
72

|

4

139  
71  
141  
75  
191  
62  
176  
58

|

7

194  
70  
159  
66  
167  
63  
173  
75  
161  
66  
186  
72  
131  
60  
  
Outputs | 0  
2  
0  
1 | 1  
1  
0  
2 | 0  
1  
6  
0


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You are writing a program to analyze the BMI of cadets.  Write a program
that asks for the number of cadets, and then gets that many weights and
heights (alternating, a weight then the corresponding height, in that order).
Your program should then output the number of thin, healthy, overweight, and
obese cadets (based on their BMI), using the following formula and table as a
guide:



**BMI = 703 * (weight / height 2)**



**Rating** | **BMI**  
---|---  
Thin | less than 18.5  
Healthy | at least 18.5 but less than 25  
Overweight | at least 25 but less than 30  
Obese | 30 or more  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

3

180  
60  
149  
68  
168  
72

|

4

139  
71  
141  
75  
191  
62  
176  
58

|

7

194  
70  
159  
66  
167  
63  
173  
75  
161  
66  
186  
72  
131  
60  
  
Outputs | 0  
2  
0  
1 | 1  
1  
0  
2 | 0  
1  
6  
0


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num_cadets = int(input())

thin_count = 0
healthy_count = 0
overweight_count = 0
obese_count = 0

for _ in range(num_cadets):
    weight = float(input())
    height = float(input())
    bmi = 703 * (weight / height**2)
    
    if bmi < 18.5:
        thin_count += 1
    elif 18.5 <= bmi < 25:
        healthy_count += 1
    elif 25 <= bmi < 30:
        overweight_count += 1
    else:
        obese_count += 1

print(thin_count)
print(healthy_count)
print(overweight_count)
print(obese_count)
"
330,PA2_practice2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a function: get_value(n). Your task is to call
this function 6 times.

Get a number from the user (`x`), and print the `x` , `x + 1`, `x + 2`, ... `x
+ 5` values that result from calling get_value() with x to x+5  (i.e., you
should print 6 numbers total).



**HINTS:**

  * You should call this function from inside a loop passing a variable that increases by 1 each loop
  * If the user enters a 2, you should call `get_value(2)`, `get_value(3)`, up to `get_value(7)` and print the results of each call (5, 7, 9, 11, 13, 15) 



**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | 2 | 4 | 11  
Outputs | 5  
7  
9  
11  
13  
15 | 9  
11  
13  
15  
17  
19 | 23  
25  
27  
29  
31  
33


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a function: get_value(n). Your task is to call
this function 6 times.

Get a number from the user (`x`), and print the `x` , `x + 1`, `x + 2`, ... `x
+ 5` values that result from calling get_value() with x to x+5  (i.e., you
should print 6 numbers total).



**HINTS:**

  * You should call this function from inside a loop passing a variable that increases by 1 each loop
  * If the user enters a 2, you should call `get_value(2)`, `get_value(3)`, up to `get_value(7)` and print the results of each call (5, 7, 9, 11, 13, 15) 



**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | 2 | 4 | 11  
Outputs | 5  
7  
9  
11  
13  
15 | 9  
11  
13  
15  
17  
19 | 23  
25  
27  
29  
31  
33


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def get_value(n):
    return n * 2 + 1

x = int(input(""Enter a number: ""))

for i in range(6):
    value = get_value(x + i)
    print(value)
"
331,PA2_practice1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Define a function called `add_values`. The function should take 3
parameters (x, y, z), and return the sum of these values.



**NOTES:**

  * You do not need to call the function.  Simply define it.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Define a function called `add_values`. The function should take 3
parameters (x, y, z), and return the sum of these values.



**NOTES:**

  * You do not need to call the function.  Simply define it.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
332,lsn9_triangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that computes the area of a triangle. You will name your
function `area_triangle()`. It has two parameters, the height of the triangle,
`height`, and the length of the base, `base`. The `area_triangle()` function
will print the area of the triangle.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
submit to the server for grading, only the function will be tested.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that computes the area of a triangle. You will name your
function `area_triangle()`. It has two parameters, the height of the triangle,
`height`, and the length of the base, `base`. The `area_triangle()` function
will print the area of the triangle.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
submit to the server for grading, only the function will be tested.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def area_triangle(height, base):
    area = (height * base) / 2
    print(area)
"
333,lsn9_skill3,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Define a function called `print_hello()`. Your function should, when
called, simply print out a message of your choosing that would be a greeting
to someone.

**IMPORTANT NOTE:**  
Functions only run when a program calls them. For the purposes of this
exercise, you do not need to call the function. If you don't, however, nothing
will appear on the screen when you run it in Thonny.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Define a function called `print_hello()`. Your function should, when
called, simply print out a message of your choosing that would be a greeting
to someone.

**IMPORTANT NOTE:**  
Functions only run when a program calls them. For the purposes of this
exercise, you do not need to call the function. If you don't, however, nothing
will appear on the screen when you run it in Thonny.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def print_hello():
    print(""Hello, welcome!"")
"
334,lsn9_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_multiple_trees()` that
outputs a tree using ASCII art. Unlike the previous problem, this function
accepts a parameter that tells it how many trees to draw.

Write a program that:

  1. Gets an integer from the user and stores it in a variable. You can name this variable whatever you want.
  2. Calls the function, and passes the variable to it. 

Remember that ""passing a value"" to a function simply means putting the number
inside the parenthesis when you call it.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_multiple_trees()` that
outputs a tree using ASCII art. Unlike the previous problem, this function
accepts a parameter that tells it how many trees to draw.

Write a program that:

  1. Gets an integer from the user and stores it in a variable. You can name this variable whatever you want.
  2. Calls the function, and passes the variable to it. 

Remember that ""passing a value"" to a function simply means putting the number
inside the parenthesis when you call it.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def draw_multiple_trees(num_trees):
    for _ in range(num_trees):
        print(""   /\\"")
        print(""  /  \\"")
        print("" /    \\"")
        print(""/______\ "")

# 1. Gets an integer from the user and stores it in a variable
num = int(input(""Enter the number of trees: ""))

# 2. Calls the function, and passes the variable to it
draw_multiple_trees(num)
"
335,lsn9_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_tree()` that prints a
tree using ASCII art:

    
    
     *  
     ***  
    *****  
     |

Call this function 3 times.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a function called `draw_tree()` that prints a
tree using ASCII art:

    
    
     *  
     ***  
    *****  
     |

Call this function 3 times.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def draw_tree():
    print(""   *   "")
    print(""  ***  "")
    print("" ***** "")
    print(""   |   "")

draw_tree()
draw_tree()
draw_tree()
"
336,lsn9_imagesize,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
PROBLEM STATEMENT:  
Write a function that computes the size of an uncompressed image. You will
name your function calculate_size_of_image(), and it will have three
parameters: the width of the image, the height of the image, and the bit depth
(i.e., # of bits per pixel).

The function should print the size of the image in kilobytes.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
PROBLEM STATEMENT:  
Write a function that computes the size of an uncompressed image. You will
name your function calculate_size_of_image(), and it will have three
parameters: the width of the image, the height of the image, and the bit depth
(i.e., # of bits per pixel).

The function should print the size of the image in kilobytes.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def calculate_size_of_image(width, height, bit_depth):
    size = (width * height * bit_depth) / 8
    size_in_kilobytes = size / 1024
    print(size_in_kilobytes)"
337,lsn9_callme,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with three functions. Open the template file, and
perform the following tasks: **  
**

  * **Task 1:** Ask the user to enter a width and height. Do **NOT** assume they are whole numbers. Call area_rectangle and give it the user values
  * **Task 2:** Ask the user to enter a string. Call print_backwards and give it the user value
  * **Task 3:** You have been provided with a variable called my_number. Call positive_or_negative and give it the variable


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with three functions. Open the template file, and
perform the following tasks: **  
**

  * **Task 1:** Ask the user to enter a width and height. Do **NOT** assume they are whole numbers. Call area_rectangle and give it the user values
  * **Task 2:** Ask the user to enter a string. Call print_backwards and give it the user value
  * **Task 3:** You have been provided with a variable called my_number. Call positive_or_negative and give it the variable


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def area_rectangle(width, height):
    return width * height

def print_backwards(string):
    print(string[::-1])

def positive_or_negative(number):
    if number > 0:
        print(""Positive"")
    elif number < 0:
        print(""Negative"")
    else:
        print(""Zero"")

# Task 1
width = float(input(""Enter width: ""))
height = float(input(""Enter height: ""))
area = area_rectangle(width, height)

# Task 2
string = input(""Enter a string: "")
print_backwards(string)

# Task 3
my_number = 10
positive_or_negative(my_number)
"
338,lsn7_triangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

Write an algorithm that asks the user for X and Y coordinates of a single
point (the coordinates of the top left point on the triangle), the length of
the base, and the height of a right triangle. Then, open a graphics window and
draw the triangle. The area of the triangle is should be displayed at the
bottom center of the window in black.



**HINTS:**

  * Make sure you get the user input BEFORE you open the window. Otherwise, the program will freeze.
  * The `draw_text` function will draw text on a screen. Don't worry about getting the text EXACTLY in the center (it's hard!).




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

Write an algorithm that asks the user for X and Y coordinates of a single
point (the coordinates of the top left point on the triangle), the length of
the base, and the height of a right triangle. Then, open a graphics window and
draw the triangle. The area of the triangle is should be displayed at the
bottom center of the window in black.



**HINTS:**

  * Make sure you get the user input BEFORE you open the window. Otherwise, the program will freeze.
  * The `draw_text` function will draw text on a screen. Don't worry about getting the text EXACTLY in the center (it's hard!).




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import graphics

def main():
    # Get user input
    x = int(input(""Enter the X coordinate of the top left point: ""))
    y = int(input(""Enter the Y coordinate of the top left point: ""))
    base = int(input(""Enter the length of the base: ""))
    height = int(input(""Enter the height of the triangle: ""))
    
    # Open graphics window
    win = graphics.GraphWin(""Triangle"", 500, 500)
    
    # Draw the triangle
    p1 = graphics.Point(x, y)
    p2 = graphics.Point(x + base, y)
    p3 = graphics.Point(x + base / 2, y + height)
    triangle = graphics.Polygon(p1, p2, p3)
    triangle.draw(win)
    
    # Calculate and display the area of the triangle
    area = (base * height) / 2
    area_text = graphics.Text(graphics.Point(win.getWidth() / 2, win.getHeight() - 20), f""Area: {area}"")
    area_text.setTextColor(""black"")
    area_text.draw(win)
    
    # Wait for mouse click to close the window
    win.getMouse()
    win.close()

main()
"
339,lsn7_stamp,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Create a pythonGraph function called `draw_stamp` that accepts an x and y
coordinate as parameters. Add code so that this function will then draw a
picture (of your choosing) centered on that coordinate.



To test your function, create a pythonGraph window, and call your function
several times (each time, passing it a different set of x and y coordinates).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Create a pythonGraph function called `draw_stamp` that accepts an x and y
coordinate as parameters. Add code so that this function will then draw a
picture (of your choosing) centered on that coordinate.



To test your function, create a pythonGraph window, and call your function
several times (each time, passing it a different set of x and y coordinates).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from pythonGraph import * 

def draw_stamp(x, y):
    # Add code here to draw a picture centered on the given coordinates
    # Use the provided functions in the pythonGraph library to draw elements

# Create a new pythonGraph window
win = create_world()

# Call the draw_stamp function with different coordinates
draw_stamp(100, 100)
draw_stamp(200, 300)
draw_stamp(50, 200)

# Wait for the user to close the window
wait_for_close(win)
"
340,lsn7_simpledrawing,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Using pythonGraph (and the documentation for pythonGraph), experiment with
each of the drawing commands listed (drawing commands begin with the keyword
""draw""). Draw something interesting using at least 4 different drawing
commands. One of those drawing commands must be `draw_image`

**NOTE:  
** The best files will be added to our Python ""Hall of Fame"".


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Using pythonGraph (and the documentation for pythonGraph), experiment with
each of the drawing commands listed (drawing commands begin with the keyword
""draw""). Draw something interesting using at least 4 different drawing
commands. One of those drawing commands must be `draw_image`

**NOTE:  
** The best files will be added to our Python ""Hall of Fame"".


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from pythongraph import *

# Draw a line
draw_line(0, 0, 100, 100)
# Draw a rectangle
draw_rectangle(200, 200, 300, 300)
# Draw an ellipse
draw_ellipse(400, 400, 150, 100)
# Draw an image
draw_image(""image.jpg"", 600, 400)
"
341,lsn7_randomcircles,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Create a pythonGraph that asks the user for the number of circles to draw.
Your program should then open a pythonGraph window and then draw that many
circles somewhere within view.

**Hints**

  * Import the `random` module in order to generate random numbers. There are specifically two functions that are useful:
  * `random.random()` returns a random number between 0.0 and 1.0
  * `random.randint(start, end)` returns a random integer between `start` and `end`




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Create a pythonGraph that asks the user for the number of circles to draw.
Your program should then open a pythonGraph window and then draw that many
circles somewhere within view.

**Hints**

  * Import the `random` module in order to generate random numbers. There are specifically two functions that are useful:
  * `random.random()` returns a random number between 0.0 and 1.0
  * `random.randint(start, end)` returns a random integer between `start` and `end`




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pythonGraph

num_circles = int(input(""Enter the number of circles to draw: ""))

# Open pythonGraph window
pythonGraph.open()

# Draw circles
for i in range(num_circles):
    x = pythonGraph.random.randint(0, pythonGraph.window_width())
    y = pythonGraph.random.randint(0, pythonGraph.window_height())
    radius = pythonGraph.random.randint(10, 100)
    pythonGraph.draw_circle(x, y, radius)

# Keep the window open until the user closes it
pythonGraph.wait_for_close()
"
342,lsn6_uod,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You've been asked to develop a tool to help identify the uniform of the day,
based on temperature and wind speed.

The command center has provided the following table for guidance:

| Temperature  
---|---  
Wind Speed |  | <40 | 40 | >40 and <60 | 60 | >60  
<15 | Parkas | A-Jackets | A-Jackets | A-Jackets | Blues  
15 | ABUs | ABUs | Parkas | Parkas | Blues  
>15 | ABUs | ABUs | Parkas | Parkas | A-Jackets  
  
Create a Python program that first gets the temperature (in degrees
Fahrenheit) and then the wind speed (in knots) from the user. You may assume
that all inputs are non-negative numbers.

It should then output the correct response, as described above.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

You've been asked to develop a tool to help identify the uniform of the day,
based on temperature and wind speed.

The command center has provided the following table for guidance:

| Temperature  
---|---  
Wind Speed |  | <40 | 40 | >40 and <60 | 60 | >60  
<15 | Parkas | A-Jackets | A-Jackets | A-Jackets | Blues  
15 | ABUs | ABUs | Parkas | Parkas | Blues  
>15 | ABUs | ABUs | Parkas | Parkas | A-Jackets  
  
Create a Python program that first gets the temperature (in degrees
Fahrenheit) and then the wind speed (in knots) from the user. You may assume
that all inputs are non-negative numbers.

It should then output the correct response, as described above.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
temperature = int(input(""Enter the temperature (in degrees Fahrenheit): ""))
wind_speed = int(input(""Enter the wind speed (in knots): ""))

if temperature < 15:
    if wind_speed < 40:
        print(""Parkas"")
    else:
        print(""A-Jackets"")
elif temperature == 15:
    if wind_speed < 40:
        print(""ABUs"")
    elif wind_speed < 60:
        print(""Parkas"")
    else:
        print(""Blues"")
else:
    if wind_speed < 40:
        print(""ABUs"")
    elif wind_speed < 60:
        print(""Parkas"")
    else:
        print(""A-Jackets"")
"
343,lsn6_speeding,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that gets a speed (in miles per hour). You may assume that
all inputs are non-negative numbers.

It should output the kind of ticket a police officer should give the driver
(according to the table below).

Speed (mph) | <= 65 | >65 and <= 70 | >70 and <= 75 | > 75 and <= 80 | > 80  
---|---|---|---|---|---  
Ticket | No Ticket | Warning | Speeding | Reckless Driving | Reckless
Endangerment  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3 | Example 4 | Example 5  
---|---|---|---|---|---  
Input | 48 | 68 | 72 | 78 | 136  
Expected Output  | No Ticket | Warning | Speeding | Reckless Driving |
Reckless Endangerment


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that gets a speed (in miles per hour). You may assume that
all inputs are non-negative numbers.

It should output the kind of ticket a police officer should give the driver
(according to the table below).

Speed (mph) | <= 65 | >65 and <= 70 | >70 and <= 75 | > 75 and <= 80 | > 80  
---|---|---|---|---|---  
Ticket | No Ticket | Warning | Speeding | Reckless Driving | Reckless
Endangerment  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3 | Example 4 | Example 5  
---|---|---|---|---|---  
Input | 48 | 68 | 72 | 78 | 136  
Expected Output  | No Ticket | Warning | Speeding | Reckless Driving |
Reckless Endangerment


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
speed = int(input())

if speed <= 65:
    ticket = ""No Ticket""
elif speed <= 70:
    ticket = ""Warning""
elif speed <= 75:
    ticket = ""Speeding""
elif speed <= 80:
    ticket = ""Reckless Driving""
else:
    ticket = ""Reckless Endangerment""

print(ticket)
"
344,lsn6_roundtrip,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python program that gets three values from the user:

  * The distance to a destination (in miles)
  * The amount of fuel in the user's car (in gallons)
  * The # of miles the user's car can travel per gallon of gas (i.e., Miles Per Gallon)

You may assume that all inputs are non-negative numbers.

Calculate the amount of fuel needed to reach the destination. Then output
whether or not the user needs to refuel during a round trip, using the below
table as a guide:

Fuel Consumed (One-Way) | =< 50% | > 50% and <= 100% | > 100%  
---|---|---|---  
Output | No Refueling Needed | Refuel on Way Back | Refuel En Route  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 100  
10  
30 | 100  
5  
20 | 100  
7  
10  
Output | No Refueling Needed | Refuel on Way Back | Refuel En Route  
  
**NOTE: Your Output Must Match Exactly**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python program that gets three values from the user:

  * The distance to a destination (in miles)
  * The amount of fuel in the user's car (in gallons)
  * The # of miles the user's car can travel per gallon of gas (i.e., Miles Per Gallon)

You may assume that all inputs are non-negative numbers.

Calculate the amount of fuel needed to reach the destination. Then output
whether or not the user needs to refuel during a round trip, using the below
table as a guide:

Fuel Consumed (One-Way) | =< 50% | > 50% and <= 100% | > 100%  
---|---|---|---  
Output | No Refueling Needed | Refuel on Way Back | Refuel En Route  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 100  
10  
30 | 100  
5  
20 | 100  
7  
10  
Output | No Refueling Needed | Refuel on Way Back | Refuel En Route  
  
**NOTE: Your Output Must Match Exactly**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
distance = float(input())
fuel = float(input())
mpg = float(input())

fuel_needed = distance / mpg

if fuel_needed <= fuel * 0.5:
    print(""No Refueling Needed"")
elif fuel_needed <= fuel and fuel_needed > fuel * 0.5:
    print(""Refuel on Way Back"")
else:
    print(""Refuel En Route"")
"
345,lsn6_lists,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write an algorithm that gets a decimal GPA, APA, and MPA from the user (in
that order). You may assume that all inputs are non-negative whole numbers.

It then reports which meritorious list the cadet is on. If the GPA is equal to
or above 3.0, the cadet is on the ""Dean's List"", and if the APA is equal to or
above 3.0, the cadet is on the ""Athletic Director's List"", and if the MPA is
equal to or above 3.0, the cadet is on the ""Commandant's List"". Finally, if
the cadet qualifies for all three individual lists, then the cadet is on the
""Superintendent's List"". The algorithm should report all the lists the cadet
is on (in the order defined above), unless the cadet is on the Superintendents
List, in which case, it should report only, ""Superintendent's List"".

| No List | Dean's List | Athletic Director's List | Commandant's List |
Superintendent's List  
---|---|---|---|---|---  
GPA | < 3.0 | >= 3.0 | n/a | n/a | >= 3.0  
APA | < 3.0 | n/a | >= 3.0 | n/a | >= 3.0  
MPA | < 3.0 | n/a | n/a | >= 3.0 | >= 3.0  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3 | Example 4 | Example 5  
---|---|---|---|---|---  
Input | 2.8  
2.6  
2.5 | 3.5  
3.2  
2.8 | 3.3  
2.8  
3.4 | 3.6  
3.8  
3.2 | 2.8  
3.5  
3.8  
Output | No List | Dean's List  
Athletic Director's List | Dean's List  
Commandant's List | Superintendent's List | Athletic Director's List  
Commandant's List


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write an algorithm that gets a decimal GPA, APA, and MPA from the user (in
that order). You may assume that all inputs are non-negative whole numbers.

It then reports which meritorious list the cadet is on. If the GPA is equal to
or above 3.0, the cadet is on the ""Dean's List"", and if the APA is equal to or
above 3.0, the cadet is on the ""Athletic Director's List"", and if the MPA is
equal to or above 3.0, the cadet is on the ""Commandant's List"". Finally, if
the cadet qualifies for all three individual lists, then the cadet is on the
""Superintendent's List"". The algorithm should report all the lists the cadet
is on (in the order defined above), unless the cadet is on the Superintendents
List, in which case, it should report only, ""Superintendent's List"".

| No List | Dean's List | Athletic Director's List | Commandant's List |
Superintendent's List  
---|---|---|---|---|---  
GPA | < 3.0 | >= 3.0 | n/a | n/a | >= 3.0  
APA | < 3.0 | n/a | >= 3.0 | n/a | >= 3.0  
MPA | < 3.0 | n/a | n/a | >= 3.0 | >= 3.0  
  
**EXAMPLES:**

| Example 1 | Example 2 | Example 3 | Example 4 | Example 5  
---|---|---|---|---|---  
Input | 2.8  
2.6  
2.5 | 3.5  
3.2  
2.8 | 3.3  
2.8  
3.4 | 3.6  
3.8  
3.2 | 2.8  
3.5  
3.8  
Output | No List | Dean's List  
Athletic Director's List | Dean's List  
Commandant's List | Superintendent's List | Athletic Director's List  
Commandant's List


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
GPA = float(input())
APA = float(input())
MPA = float(input())

if GPA >= 3.0 and APA >= 3.0 and MPA >= 3.0:
    print(""Superintendent's List"")
elif GPA >= 3.0 and APA >= 3.0:
    print(""Dean's List"")
    print(""Athletic Director's List"")
elif GPA >= 3.0 and MPA >= 3.0:
    print(""Dean's List"")
    print(""Commandant's List"")
elif APA >= 3.0 and MPA >= 3.0:
    print(""Athletic Director's List"")
    print(""Commandant's List"")
elif GPA >= 3.0:
    print(""Dean's List"")
elif APA >= 3.0:
    print(""Athletic Director's List"")
elif MPA >= 3.0:
    print(""Commandant's List"")
else:
    print(""No List"")
"
346,lsn6_fuel,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write an algorithm that gets a fuel load (in lbs) and then a distance to base
(in nautical miles). You may assume all inputs are non-negative numbers.

It then outputs what kind of action the pilot should take. If the fuel load is
less than 50 lbs and the distance to base is less than 70 nm, report ""Return
to base"", otherwise, report ""Resume flight"".

**EXAMPLES:**

| Example 1 | Example 2 | Example 3 | Example 4  
---|---|---|---|---  
Input | 30  
60 | 60  
60 | 40  
80 | 60  
80  
Output | Return to base | Resume flight | Resume flight | Resume flight  
  
**Note: Output must match exactly.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write an algorithm that gets a fuel load (in lbs) and then a distance to base
(in nautical miles). You may assume all inputs are non-negative numbers.

It then outputs what kind of action the pilot should take. If the fuel load is
less than 50 lbs and the distance to base is less than 70 nm, report ""Return
to base"", otherwise, report ""Resume flight"".

**EXAMPLES:**

| Example 1 | Example 2 | Example 3 | Example 4  
---|---|---|---|---  
Input | 30  
60 | 60  
60 | 40  
80 | 60  
80  
Output | Return to base | Resume flight | Resume flight | Resume flight  
  
**Note: Output must match exactly.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","fuel_load = float(input())
distance_to_base = float(input())

if fuel_load < 50 and distance_to_base < 70:
    print(""Return to base"")
else:
    print(""Resume flight"")"
347,lsn5_positive,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python  **program**  that gets a floating point number from the user:

  * If the number is positive, print the word `POSITIVE`
  * Otherwise, print the word `NOT POSITIVE`

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 10 | -5 | 0  
Output | POSITIVE | NOT POSITIVE | NOT POSITIVE


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python  **program**  that gets a floating point number from the user:

  * If the number is positive, print the word `POSITIVE`
  * Otherwise, print the word `NOT POSITIVE`

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 10 | -5 | 0  
Output | POSITIVE | NOT POSITIVE | NOT POSITIVE


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
num = float(input())

if num > 0:
    print(""POSITIVE"")
else:
    print(""NOT POSITIVE"")
"
348,lsn5_largest,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a program that takes three integers as parameters, and prints the
largest (i.e., highest) number.

Ex: If the input is:

    
    
    7
    15
    3
    

Your function should return:

    
    
    15
    

  
In the event that all 3 numbers are the same, output that number.

Ex: If the input is:

    
    
    5
    5
    5
    

Your function should return:

    
    
    5


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a program that takes three integers as parameters, and prints the
largest (i.e., highest) number.

Ex: If the input is:

    
    
    7
    15
    3
    

Your function should return:

    
    
    15
    

  
In the event that all 3 numbers are the same, output that number.

Ex: If the input is:

    
    
    5
    5
    5
    

Your function should return:

    
    
    5


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def find_largest(num1, num2, num3):
    if num1 == num2 == num3:
        return num1
    elif num1 >= num2 and num1 >= num3:
        return num1
    elif num2 >= num1 and num2 >= num3:
        return num2
    else:
        return num3
"
349,lsn5_classyear,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Using the below table as a guide, write a Python program that takes the user's
class year as input, and outputs their cadet class. If the class year is
before 2021, output ""Graduate"". Alternatively, if the class year is larger
than 2024, output ""Not a Cadet"".

You may assume that all inputs provided to your application are years
(represented as Integers)

| Example 1 | Example 2 | Example 3 | Example 4 | Example 5 | Example 6  
---|---|---|---|---|---|---  
Input | 2021 | 2022 | 2023 | 2024 | 2020 | 2025  
Output | Firstie | Two Degree | Three Degree | Four Degree | Graduate | Not a
Cadet


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Using the below table as a guide, write a Python program that takes the user's
class year as input, and outputs their cadet class. If the class year is
before 2021, output ""Graduate"". Alternatively, if the class year is larger
than 2024, output ""Not a Cadet"".

You may assume that all inputs provided to your application are years
(represented as Integers)

| Example 1 | Example 2 | Example 3 | Example 4 | Example 5 | Example 6  
---|---|---|---|---|---|---  
Input | 2021 | 2022 | 2023 | 2024 | 2020 | 2025  
Output | Firstie | Two Degree | Three Degree | Four Degree | Graduate | Not a
Cadet


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
year = int(input())

if year < 2021:
    print(""Graduate"")
elif year > 2024:
    print(""Not a Cadet"")
else:
    classes = [""Firstie"", ""Two Degree"", ""Three Degree"", ""Four Degree""]
    index = year - 2021
    print(classes[index])"
350,lsn5_atmosphere,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** The Earth's atmosphere is divided into a series of layers. Write an
algorithm that asks the user for the altitude in kilometers. Then output the
corresponding layer according to the following table:

Altitude | ≤10km | >10km&≤50km | >50km&≤85km | >85km&≤1000km |
>1000km&≤100,000km | >100,000km  
---|---|---|---|---|---|---  
**Layer** | Troposphere | Stratosphere | Mesosphere | Thermosphere | Exosphere
| Space


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** The Earth's atmosphere is divided into a series of layers. Write an
algorithm that asks the user for the altitude in kilometers. Then output the
corresponding layer according to the following table:

Altitude | ≤10km | >10km&≤50km | >50km&≤85km | >85km&≤1000km |
>1000km&≤100,000km | >100,000km  
---|---|---|---|---|---|---  
**Layer** | Troposphere | Stratosphere | Mesosphere | Thermosphere | Exosphere
| Space


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
altitude = float(input(""Enter the altitude in kilometers: ""))

if altitude <= 10:
    layer = ""Troposphere""
elif altitude <= 50:
    layer = ""Stratosphere""
elif altitude <= 85:
    layer = ""Mesosphere""
elif altitude <= 1000:
    layer = ""Thermosphere""
elif altitude <= 100000:
    layer = ""Exosphere""
else:
    layer = ""Space""

print(layer)
"
351,lsn4_temperature,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write an algorithm that prompts the user for a temperature in °F and then
outputs K and °C in that order.

**EXAMPLE:**

| Example 1 | Example 2  
---|---|---  
Input | 32 | 0  
Output | 273.15  
0 | 255.372  
-17.778  
  
**Note: Output must match within a predefined tolerance.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write an algorithm that prompts the user for a temperature in °F and then
outputs K and °C in that order.

**EXAMPLE:**

| Example 1 | Example 2  
---|---|---  
Input | 32 | 0  
Output | 273.15  
0 | 255.372  
-17.778  
  
**Note: Output must match within a predefined tolerance.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Prompt the user for a temperature in °F
fahrenheit = float(input())

# Convert °F to K
kelvin = (fahrenheit + 459.67) * 5/9

# Convert °F to °C
celsius = (fahrenheit - 32) * 5/9

# Output K and °C
print(kelvin)
print(celsius)
"
352,lsn4_projectile,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a python program that can calculate the range of a projectile when fired
from an artillery on level ground. Your program will ask the user to input the
initial velocity (`v`) and angle in degrees (`theta`). Your program should
then calculate and print the range using the following formula:

`range = (v^2 * sin(2 * theta)) / 9.8`  
 **WARNING: The above formula is not valid Python.**  
  

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 800  
45 | 600  
30 | 535.2  
81.7  
Output | 65306.122 | 31813.178 | 8350.235  
  
**Hints**

  * You need to use the `math` module's trig functions to solve this problem. Type `import math` at the top of your code to add it to your program.
  * The `sin()` and `cos()` functions assume that the angle is in  **radians**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a python program that can calculate the range of a projectile when fired
from an artillery on level ground. Your program will ask the user to input the
initial velocity (`v`) and angle in degrees (`theta`). Your program should
then calculate and print the range using the following formula:

`range = (v^2 * sin(2 * theta)) / 9.8`  
 **WARNING: The above formula is not valid Python.**  
  

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 800  
45 | 600  
30 | 535.2  
81.7  
Output | 65306.122 | 31813.178 | 8350.235  
  
**Hints**

  * You need to use the `math` module's trig functions to solve this problem. Type `import math` at the top of your code to add it to your program.
  * The `sin()` and `cos()` functions assume that the angle is in  **radians**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

# Read input from user
v = float(input())
theta = float(input())

# Convert angle from degrees to radians
theta = math.radians(theta)

# Calculate range using the formula
range = (v ** 2 * math.sin(2 * theta)) / 9.8

# Print the result
print(range)
"
353,lsn4_math,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Given three floating-point numbers x, y, and z, output the square root of x,
the absolute value of (y minus z) , and the factorial of (the ceiling of z).
Each input should be on a new line, and rounded to a maximum of 2 decimal
places.

(Hint: use the [`round` (Links to an external
site.)](https://docs.python.org/3/library/functions.html#round) function to
round your outputs!):

`round(# to round, # of digits to round to)`

**EXAMPLE:**

    
    
    5.0
    6.5
    3.2
    

Then the output is:

    
    
    2.24
    3.30
    24.00
    

NOTE: Decimal places may be slightly off depending on the exact numbers used.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Given three floating-point numbers x, y, and z, output the square root of x,
the absolute value of (y minus z) , and the factorial of (the ceiling of z).
Each input should be on a new line, and rounded to a maximum of 2 decimal
places.

(Hint: use the [`round` (Links to an external
site.)](https://docs.python.org/3/library/functions.html#round) function to
round your outputs!):

`round(# to round, # of digits to round to)`

**EXAMPLE:**

    
    
    5.0
    6.5
    3.2
    

Then the output is:

    
    
    2.24
    3.30
    24.00
    

NOTE: Decimal places may be slightly off depending on the exact numbers used.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

x = float(input())
y = float(input())
z = float(input())

sqrt_x = round(math.sqrt(x), 2)
abs_yz = round(abs(y - z), 2)
fact_ceil_z = round(math.factorial(math.ceil(z)), 2)

print(sqrt_x)
print(abs_yz)
print(fact_ceil_z)
"
354,lsn4_calories,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

The following equations estimate the calories burned when exercising ([source
(Links to an external
site.)](https://web.archive.org/web/20121021230025/http://fitnowtraining.com/2012/01/formula-
for-calories-burned/)):

Men: Calories = ( (Age x 0.2017) + (Weight x 0.09036) + (Heart Rate x 0.6309)
-- 55.0969 ) x Time / 4.184

Women: Calories = ( (Age x 0.074) -- (Weight x 0.05741) + (Heart Rate x
0.4472) -- 20.4022 ) x Time / 4.184

Write a program using inputs age (years), weight (pounds), heart rate (beats
per minute), and time (minutes), respectively. Output calories burned for men
and women.

Output each floating-point value (your program will be marked correct so long
as it outputs a value within a predefined range)

**EXAMPLE:**

If the input is:

    
    
    49
    155
    148
    60
    

Then the output is:

    
    
    891.47
    580.94


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

The following equations estimate the calories burned when exercising ([source
(Links to an external
site.)](https://web.archive.org/web/20121021230025/http://fitnowtraining.com/2012/01/formula-
for-calories-burned/)):

Men: Calories = ( (Age x 0.2017) + (Weight x 0.09036) + (Heart Rate x 0.6309)
-- 55.0969 ) x Time / 4.184

Women: Calories = ( (Age x 0.074) -- (Weight x 0.05741) + (Heart Rate x
0.4472) -- 20.4022 ) x Time / 4.184

Write a program using inputs age (years), weight (pounds), heart rate (beats
per minute), and time (minutes), respectively. Output calories burned for men
and women.

Output each floating-point value (your program will be marked correct so long
as it outputs a value within a predefined range)

**EXAMPLE:**

If the input is:

    
    
    49
    155
    148
    60
    

Then the output is:

    
    
    891.47
    580.94


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
age = float(input())
weight = float(input())
heart_rate = float(input())
time = float(input())

# Men: Calories = ( (Age x 0.2017) + (Weight x 0.09036) + (Heart Rate x 0.6309) - 55.0969 ) x Time / 4.184
calories_men = ((age * 0.2017) + (weight * 0.09036) + (heart_rate * 0.6309) - 55.0969) * time / 4.184

# Women: Calories = ( (Age x 0.074) - (Weight x 0.05741) + (Heart Rate x 0.4472) - 20.4022 ) x Time / 4.184
calories_women = ((age * 0.074) - (weight * 0.05741) + (heart_rate * 0.4472) - 20.4022) * time / 4.184

print(""{:.2f}"".format(calories_men))
print(""{:.2f}"".format(calories_women))
"
355,lsn4_bits_to_kmg,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

One byte is comprised of 8 bits. A typical computer program has a requirement
for much more memory. Therefore, many bytes can be grouped together to make
larger memory amounts. Our convention is for computer memory is scaled in
logical increments of 210 = 1024.

For example:

  * 1024 bytes = 1 kilobyte (KB)
  * 1024 KB = 1 megabyte (MB)
  * 1024 MB = 1 gigabyte (GB)

Write an algorithm that prompts the user for a number of bits and then outputs
the equivalent number of kilobytes, megabytes, and gigabytes.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 1000000 | 6879000 | 92445694  
Output | 122.07  
0.12  
0.00012 | 839.72  
0.82  
.0008 | 11,284.87  
11.02  
0.01  
  
**Note: Output must match within a predefined tolerance.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

One byte is comprised of 8 bits. A typical computer program has a requirement
for much more memory. Therefore, many bytes can be grouped together to make
larger memory amounts. Our convention is for computer memory is scaled in
logical increments of 210 = 1024.

For example:

  * 1024 bytes = 1 kilobyte (KB)
  * 1024 KB = 1 megabyte (MB)
  * 1024 MB = 1 gigabyte (GB)

Write an algorithm that prompts the user for a number of bits and then outputs
the equivalent number of kilobytes, megabytes, and gigabytes.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 1000000 | 6879000 | 92445694  
Output | 122.07  
0.12  
0.00012 | 839.72  
0.82  
.0008 | 11,284.87  
11.02  
0.01  
  
**Note: Output must match within a predefined tolerance.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
bits = int(input())

kilobytes = bits / 8 / 1024
megabytes = kilobytes / 1024
gigabytes = megabytes / 1024

print(""{:.2f}"".format(kilobytes))
print(""{:.2f}"".format(megabytes))
print(""{:.5f}"".format(gigabytes))
"
356,lsn4_bits_to_bytes,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

The basic unit of computer memory is a bit. A bit can represent two values (on
or off, 0 or 1). To represent more information, bits are grouped together in
larger quantities. Beyond a bit, the next logical grouping is a byte, where 1
byte has 8 bits. Write an algorithm that prompts the user for a number of bits
and then outputs the equivalent number of bytes.

**EXAMPLE:**

Example 1 | Example 2 | Example 3  
---|---|---  
Input | 8 | 800 | 7234  
Output | 1.0 | 100.0 | 904.25  
  
**Note: Output must match exactly.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

The basic unit of computer memory is a bit. A bit can represent two values (on
or off, 0 or 1). To represent more information, bits are grouped together in
larger quantities. Beyond a bit, the next logical grouping is a byte, where 1
byte has 8 bits. Write an algorithm that prompts the user for a number of bits
and then outputs the equivalent number of bytes.

**EXAMPLE:**

Example 1 | Example 2 | Example 3  
---|---|---  
Input | 8 | 800 | 7234  
Output | 1.0 | 100.0 | 904.25  
  
**Note: Output must match exactly.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
bits = int(input())
bytes = bits / 8
print(bytes)
"
357,lsn4_bit_representation,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

One way bits can hold information is computer images. Computer images are
composed of a grid of small, independent colored cells known as pixels. The
number of colors each pixel can hold is related to the number bits allocated
to each pixel. A simple black and white image, for example, would have a
single bit per pixel, where the value of the bit would represent black or
white for that pixel. Allocating 2 bits per pixel would allow each pixel to
have one of four colors.

Generally speaking, the number of color options available to a particular
pixel can be described as:

    
    
    numberofcolors = 2number of bits

In Python, write an algorithm that prompts the user for a number of bits and
then outputs the number of different colors that could be represented by a
single pixel.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 3 | 8 | 24  
Output | 8 | 256 | 16777216  
  
**Note: Output must match exactly.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

One way bits can hold information is computer images. Computer images are
composed of a grid of small, independent colored cells known as pixels. The
number of colors each pixel can hold is related to the number bits allocated
to each pixel. A simple black and white image, for example, would have a
single bit per pixel, where the value of the bit would represent black or
white for that pixel. Allocating 2 bits per pixel would allow each pixel to
have one of four colors.

Generally speaking, the number of color options available to a particular
pixel can be described as:

    
    
    numberofcolors = 2number of bits

In Python, write an algorithm that prompts the user for a number of bits and
then outputs the number of different colors that could be represented by a
single pixel.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 3 | 8 | 24  
Output | 8 | 256 | 16777216  
  
**Note: Output must match exactly.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
bits = int(input())
colors = 2 ** bits
print(colors)
"
358,lsn3_skill2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that gets a cadet's age, and stores it in a variable called
**your_age.**

Print the user's age + 4.

For example, if the user types:

    
    
     18

Your program should print:

    
    
    22


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that gets a cadet's age, and stores it in a variable called
**your_age.**

Print the user's age + 4.

For example, if the user types:

    
    
     18

Your program should print:

    
    
    22


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","your_age = int(input())
print(your_age + 4)"
359,lsn3_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Create a variable called  **name,  **and set it equal to your name
(represented as a string--don't forget to use the quotation marks!).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Create a variable called  **name,  **and set it equal to your name
(represented as a string--don't forget to use the quotation marks!).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","name = ""Your Name"""
360,lsn3_scoreaverage,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that prompts the user for three sports game scores and
outputs the average.

  
**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15  
12 | 89  
103  
63 | 14  
42  
36  
Output | 11.666666666666666 | 85.0 | 30.666666666666668  
  
**Note: Output must match (within a predefined tolerance).**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that prompts the user for three sports game scores and
outputs the average.

  
**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15  
12 | 89  
103  
63 | 14  
42  
36  
Output | 11.666666666666666 | 85.0 | 30.666666666666668  
  
**Note: Output must match (within a predefined tolerance).**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
score1 = float(input())
score2 = float(input())
score3 = float(input())

average = (score1 + score2 + score3) / 3
print(average)
"
361,lsn3_pointspread,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

A ""Point Spread"" is a term used to in sports (and gambling) to describe the
difference between two teams' scores. For example, if one team scores 20
points and another team scores 30 points, the point spread is 10. A point
spread is always a positive number.

Write an algorithm that prompts the user for two sports game scores and
outputs the point spread.  
  
**  
EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15 | 89  
103 | 42  
14  
Output | 7 | 14 | 28  
  
**Note: Output must match exactly.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

A ""Point Spread"" is a term used to in sports (and gambling) to describe the
difference between two teams' scores. For example, if one team scores 20
points and another team scores 30 points, the point spread is 10. A point
spread is always a positive number.

Write an algorithm that prompts the user for two sports game scores and
outputs the point spread.  
  
**  
EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 8  
15 | 89  
103 | 42  
14  
Output | 7 | 14 | 28  
  
**Note: Output must match exactly.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
score1 = int(input())
score2 = int(input())

point_spread = abs(score1 - score2)

print(point_spread)
"
362,lsn3_madlib,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Mad Libs are activities that have a person provide various words, which are
then used to complete a short story in unexpected (and hopefully funny) ways.
(EDITOR'S NOTE: Do you kids even do Mad Libs anymore?)

Complete the program to read the needed values from input, that the existing
output statement(s) can use to output a short story.

**EXAMPLE:**

If the input is:

    
    
    Eric
    Chipotle
    12
    burritos
    

Then the output is:

    
    
    Eric went to Chipotle to buy 12 different types of burritos


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Mad Libs are activities that have a person provide various words, which are
then used to complete a short story in unexpected (and hopefully funny) ways.
(EDITOR'S NOTE: Do you kids even do Mad Libs anymore?)

Complete the program to read the needed values from input, that the existing
output statement(s) can use to output a short story.

**EXAMPLE:**

If the input is:

    
    
    Eric
    Chipotle
    12
    burritos
    

Then the output is:

    
    
    Eric went to Chipotle to buy 12 different types of burritos


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
name = input()
place = input()
num = input()
food = input()

print(name + "" went to "" + place + "" to buy "" + num + "" different types of "" + food)
"
363,lsn3_girlscouts,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that asks the user for the amount of money he/she has on
hand, and outputs the number of girl scout cookies that he/she can purchase.
Use the following prices:

$5 per box for the ""Super Six"" (Thin Mints, Samoas, Tagalongs, Do-Si-Dos,
Trefoils, Savannah Smiles)  
$6 per box for the Specialty Cookies (S'mores, Toffee-tastic)

**For this problem, assume that the user will buy all of one or the other. In
other words, output the number of boxes that he/she would be able to obtain if
he/she bought nothing but the Super Six, and nothing but the Specialty
Cookies.**

**HINT:**  
You can convert a number to an integer by using the int() function. For
example:  
 **int(2.51)** will convert the number to 2

EXAMPLE:  
If the input is:

    
    
    26

Then the output is:

    
    
    5 boxes of Thin Mints, Samoas, Tagalongs, Do-Si-Dos, Trefoils, or Savannah Smiles  
    4 boxes of S'mores and Toffee-tastic


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a program that asks the user for the amount of money he/she has on
hand, and outputs the number of girl scout cookies that he/she can purchase.
Use the following prices:

$5 per box for the ""Super Six"" (Thin Mints, Samoas, Tagalongs, Do-Si-Dos,
Trefoils, Savannah Smiles)  
$6 per box for the Specialty Cookies (S'mores, Toffee-tastic)

**For this problem, assume that the user will buy all of one or the other. In
other words, output the number of boxes that he/she would be able to obtain if
he/she bought nothing but the Super Six, and nothing but the Specialty
Cookies.**

**HINT:**  
You can convert a number to an integer by using the int() function. For
example:  
 **int(2.51)** will convert the number to 2

EXAMPLE:  
If the input is:

    
    
    26

Then the output is:

    
    
    5 boxes of Thin Mints, Samoas, Tagalongs, Do-Si-Dos, Trefoils, or Savannah Smiles  
    4 boxes of S'mores and Toffee-tastic


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_cookies(money):
    super_six_price = 5
    specialty_price = 6
    
    super_six_boxes = int(money / super_six_price)
    specialty_boxes = int(money / specialty_price)
    
    return super_six_boxes, specialty_boxes

money = int(input())
super_six_boxes, specialty_boxes = calculate_cookies(money)

print(super_six_boxes, ""boxes of Thin Mints, Samoas, Tagalongs, Do-Si-Dos, Trefoils, or Savannah Smiles"")
print(specialty_boxes, ""boxes of S'mores and Toffee-tastic"")
"
364,lsn3_arrivaltime,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write an algorithm that prompts the user for a distance to travel (in miles)
and a speed (in mph) and outputs time of arrival in hours.

  
**For Example:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 72  
60 | 1282  
85 | 120.5  
59.2  
Output | 1.2 | 15.0823 | 2.0355  
  
**Note: Output needs to match the examples.**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write an algorithm that prompts the user for a distance to travel (in miles)
and a speed (in mph) and outputs time of arrival in hours.

  
**For Example:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Input | 72  
60 | 1282  
85 | 120.5  
59.2  
Output | 1.2 | 15.0823 | 2.0355  
  
**Note: Output needs to match the examples.**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
distance = float(input(""Enter the distance to travel in miles: ""))
speed = float(input(""Enter the speed in mph: ""))

time = distance / speed

print(round(time, 4))
"
365,lsn24_starmap,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a table that describes a simple night sky as a
2D list in your code template.  This list is an exact mapping to the picture
below.  The 2D list (`star_map`) is populated with characters representing the
locations of various astronomical entities (stars, planets, etc).  For
example, you can see in the template that the very first item is 'M', since
there is a Moon in the top left corner.



Write a program that gets two values from the user in the following order:

  1. The horizontal index of the cell in the star map to search (e.g. 0 for the top row)
  2. The vertical index of the cell in the star map to search (e.g. 0 for the leftmost column)



Finally, **print  ** ****out the word associated with the code in the table at
that particular cell.

`S = Star; St = Satellite; M = Moon; P = Planet; _ = Nothing`



**EXAMPLES:**



| Example 1 | Example 2 | Example 3  
---|---|---|---  
**Input** |

0

0

|

0

1

|

4

1  
  
**Output** | Moon | Nothing | Satellite  
  
* * *




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a table that describes a simple night sky as a
2D list in your code template.  This list is an exact mapping to the picture
below.  The 2D list (`star_map`) is populated with characters representing the
locations of various astronomical entities (stars, planets, etc).  For
example, you can see in the template that the very first item is 'M', since
there is a Moon in the top left corner.



Write a program that gets two values from the user in the following order:

  1. The horizontal index of the cell in the star map to search (e.g. 0 for the top row)
  2. The vertical index of the cell in the star map to search (e.g. 0 for the leftmost column)



Finally, **print  ** ****out the word associated with the code in the table at
that particular cell.

`S = Star; St = Satellite; M = Moon; P = Planet; _ = Nothing`



**EXAMPLES:**



| Example 1 | Example 2 | Example 3  
---|---|---|---  
**Input** |

0

0

|

0

1

|

4

1  
  
**Output** | Moon | Nothing | Satellite  
  
* * *




 
Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# ---------------------------------------------------------------------
# Lab: Star Map
# Course: CS110, Spring 2022
# ---------------------------------------------------------------------

# ---------------------------------------------------------------------
# Problem Statement: Write a Python program that prints what is found 
#  at a specific location of the star map represented below.
#  NOTE: See the Canvas Problem Statement for additional details.
# ---------------------------------------------------------------------

#DO NOT TOUCH THIS LIST!
star_map =   [['M', '_', '_', '_', 'S'],
              ['S', 'M', '_', '_', 'P'],
              ['S', '_', '_', 'P', 'M'],
              ['P', 'P', 'S', '_', '_'],
              ['M', 'St', '_', 'St', '_']]
#  S = Star; St = Satellite; M = Moon; P = Planet; _ = Nothing

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
horizontal_index = int(input())
vertical_index = int(input())

print(star_map[vertical_index][horizontal_index])
"
366,lsn2_printpractice,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

The template file contains various words/phrases that you need to print out
(exactly as written) using Python's `print()` function. For example:

  1. Print the phrase ""Welcome to Computer Science 110!""

  2. Print the result to the following math expression: (640 * 480 * 24) / 8

  3. etc (see the template for details)

Each print statement should be written directly below the corresponding
comment. While you can technically ""cheat"" on this problem, we encourage you
to practice all the various ways that you can use the `print` function. You
will thank us later!


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

The template file contains various words/phrases that you need to print out
(exactly as written) using Python's `print()` function. For example:

  1. Print the phrase ""Welcome to Computer Science 110!""

  2. Print the result to the following math expression: (640 * 480 * 24) / 8

  3. etc (see the template for details)

Each print statement should be written directly below the corresponding
comment. While you can technically ""cheat"" on this problem, we encourage you
to practice all the various ways that you can use the `print` function. You
will thank us later!


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Print the phrase ""Welcome to Computer Science 110!""
print(""Welcome to Computer Science 110!"")

# Print the result to the following math expression: (640 * 480 * 24) / 8
print((640 * 480 * 24) / 8)
"
367,lsn2_parking,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a program that prints a formatted ""No parking"" sign as shown below. Note
the first line has two leading spaces. For ALL labs, end with newline (unless
otherwise stated).

    
    
     NO PARKING  
    1:00 - 5:00 a.m.  
      
    


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a program that prints a formatted ""No parking"" sign as shown below. Note
the first line has two leading spaces. For ALL labs, end with newline (unless
otherwise stated).

    
    
     NO PARKING  
    1:00 - 5:00 a.m.  
      
    


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
print(""  NO PARKING"")
print(""1:00 - 5:00 a.m."")
"
368,lsn2_ascii,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a Python program that prints out a cat:

    
    
    /\ /\
     o o
     = =
     ---  
      
    

_Hint: A backslash  `\` in a string acts as an escape character, such as with
a newline_ `\n`.  _So, to print an actual backslash, escape that backslash by
prepending another backslash. Ex: The following prints a single backslash:_
`print('\\')`


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a Python program that prints out a cat:

    
    
    /\ /\
     o o
     = =
     ---  
      
    

_Hint: A backslash  `\` in a string acts as an escape character, such as with
a newline_ `\n`.  _So, to print an actual backslash, escape that backslash by
prepending another backslash. Ex: The following prints a single backslash:_
`print('\\')`


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def print_cat():
    print('''
    /\ /\\
     o o
     = =
     ---
    ''')

print_cat()
"
369,lsn17_skill1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with the template code for an animation.  Study the
code for a minute, then perform the following tasks:

  * In the `draw()` function, add one line of code that draws a circle.  
For the center, use the `ball_x` and `ball_y` variables defined in the
template.  
  

  * In the `update() function`, add code that modifies the value of `ball_x` and `ball_y`.  
For example, add 1 to the `ball_x` and subtract 1 from `ball_y` every time
`update()` is called. What do you expect to happen? Does what actually happens
match your expectations?




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with the template code for an animation.  Study the
code for a minute, then perform the following tasks:

  * In the `draw()` function, add one line of code that draws a circle.  
For the center, use the `ball_x` and `ball_y` variables defined in the
template.  
  

  * In the `update() function`, add code that modifies the value of `ball_x` and `ball_y`.  
For example, add 1 to the `ball_x` and subtract 1 from `ball_y` every time
`update()` is called. What do you expect to happen? Does what actually happens
match your expectations?




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import pygame, sys

# Initialize Pygame
pygame.init()

# Set up the window
window_width = 800
window_height = 600
window_surface = pygame.display.set_mode((window_width, window_height), 0, 32)
pygame.display.set_caption('Animation')

# Set up the colors
black = (0, 0, 0)

# Set up the ball's initial position and speed
ball_x = window_width // 2
ball_y = window_height // 2

# Set up the ball's size and color
ball_radius = 50
ball_color = (255, 255, 255)

# Set up the clock
clock = pygame.time.Clock()

def draw():
    window_surface.fill(black)
    pygame.draw.circle(window_surface, ball_color, (ball_x, ball_y), ball_radius)

def update():
    ball_x += 1
    ball_y -= 1

# Run the game loop
while True:
    # Handle events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

    # Update the game state
    update()

    # Draw the game state
    draw()

    # Refresh the display
    pygame.display.update()
    clock.tick(60)
"
370,lsn10_in_circle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that determines if a point is within a circle. You will
name your function `in_circle()`. It has five parameters:

  1. The coordinates of the point that is to be tested (x, y)
  2. The center of a circle (cir_x, cir_y)
  3. The radius of the circle (radius)

 The `in_circle()` function will return **True** if the point is on or inside
the circle, and **False** otherwise.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that determines if a point is within a circle. You will
name your function `in_circle()`. It has five parameters:

  1. The coordinates of the point that is to be tested (x, y)
  2. The center of a circle (cir_x, cir_y)
  3. The radius of the circle (radius)

 The `in_circle()` function will return **True** if the point is on or inside
the circle, and **False** otherwise.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

def in_circle(x, y, cir_x, cir_y, radius):
    distance = math.sqrt((x - cir_x)**2 + (y - cir_y)**2)
    if distance <= radius:
        return True
    else:
        return False
"
371,lsn10_distance,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that computes the distance between two points. You will
name your function `dist_points`. It has four parameters, the cordinates of
the two points as `x1, y1, x2, y2`. The `dist_points()` function will return
the distance between the two points as a floating point number.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that computes the distance between two points. You will
name your function `dist_points`. It has four parameters, the cordinates of
the two points as `x1, y1, x2, y2`. The `dist_points()` function will return
the distance between the two points as a floating point number.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

def dist_points(x1, y1, x2, y2):
    return math.sqrt((x2 - x1)**2 + (y2 - y1)**2)
"
372,lsn10_circle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that computes the area of a circle. You will name your
function `area_circle`. It has one parameter, the radius of the circle,
`radius`. The `area_circle()` function will return the area of the circle.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a function that computes the area of a circle. You will name your
function `area_circle`. It has one parameter, the radius of the circle,
`radius`. The `area_circle()` function will return the area of the circle.

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def area_circle(radius):
    # Calculate the area of a circle using the formula A = pi * r^2
    area = 3.14159 * radius**2
    return area"
373,lsn10_asteroids,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

""Asteroids"" was an arcade game created in 1979 by Atari, Inc. In the game, the
player is given control of a spaceship that has the ability to shoot bullets.
The player is then placed in a field of floating rocks, and is tasked with
destroying them without running into them.

In this lab, you will write a ""collision detection"" function that will be used
by the game to determine if the player's ship has hit a rock. To make this
simple, assume that an imaginary circle extends from the center of the
asteroid and the player's ship (see below image). If the two circles ever
overlap one another, then a collision has occurred. (NOTE: There are more
accurate ways to detect a collision. [Click here if you want to learn more
(Links to an external site.)](https://bell0bytes.eu/basic-collision-
detection/)).

![](https://bell0bytes.eu/content/images/2019/03/spaceShipAsteroid.png)

Your function, which you will name `detect_collision()` should have six
parameters: the (x, y) coordinates of the center of player's ship, the ship's
radius, the (x, y) coordinates of the center of an asteroid, and the
asteroid's radius. Your function will return `True` if the player's ship has
hit the asteroid, and `False` otherwise.

**HINT: _  
_** _You may want to copy and paste the_  `dist_points`  _function you created
earlier. It's almost as if we are trying to demonstrate the importance of
reusable functions . . ._

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

""Asteroids"" was an arcade game created in 1979 by Atari, Inc. In the game, the
player is given control of a spaceship that has the ability to shoot bullets.
The player is then placed in a field of floating rocks, and is tasked with
destroying them without running into them.

In this lab, you will write a ""collision detection"" function that will be used
by the game to determine if the player's ship has hit a rock. To make this
simple, assume that an imaginary circle extends from the center of the
asteroid and the player's ship (see below image). If the two circles ever
overlap one another, then a collision has occurred. (NOTE: There are more
accurate ways to detect a collision. [Click here if you want to learn more
(Links to an external site.)](https://bell0bytes.eu/basic-collision-
detection/)).

![](https://bell0bytes.eu/content/images/2019/03/spaceShipAsteroid.png)

Your function, which you will name `detect_collision()` should have six
parameters: the (x, y) coordinates of the center of player's ship, the ship's
radius, the (x, y) coordinates of the center of an asteroid, and the
asteroid's radius. Your function will return `True` if the player's ship has
hit the asteroid, and `False` otherwise.

**HINT: _  
_** _You may want to copy and paste the_  `dist_points`  _function you created
earlier. It's almost as if we are trying to demonstrate the importance of
reusable functions . . ._

**IMPORTANT:  
** You are encouraged to write code to test your function. However, when you
test against the server, only include the code for the function itself (you
can comment out your test code).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import math

def detect_collision(ship_x, ship_y, ship_radius, asteroid_x, asteroid_y, asteroid_radius):
    distance = math.sqrt((ship_x - asteroid_x)**2 + (ship_y - asteroid_y)**2)
    if distance <= (ship_radius + asteroid_radius):
        return True
    else:
        return False
"
374,Lists3_unpopularnames,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

This lab makes use of the names.csv dataset, which provides a list of over
1200+ names that were given to children in 2011. Here is a typical line from
the file:



`FEMALE, HISPANIC, GIA, 21`



  
Each position in the line (separated by a comma) represents a different ""data
element"". Here is a key for your reference:

Gender | Ethnicity  | Name |  Count  
(i.e., Number of Children Assigned this Name)  
---|---|---|---  
FEMALE | HISPANIC  | GIA | 21  
  
  
  
Write a Python algorithm that gets a gender (all CAPs, ""MALE"" or ""FEMALE"") and
a number, `X`, from the user, and prints out the X least popular names for
that gender, starting with the least popular and working up.

For example, if the user types `MALE` and `2`, and you determine that the two
least popular names are Bill and Ted, your program should output:

    
    
    Bill  
    Ted  
      
    



**HINTS (really really important):**

  * Remember that you can use the `sort()` function to sort a list in ascending order. For example, if your list is named `my_list`, you can sort it by typing:  
`my_list.sort()`

  * `sort()` will work on 2D lists. It will sort by the first column, and then look at the 2nd column in the event of a tie. Think about this when you are building your 2D list.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

This lab makes use of the names.csv dataset, which provides a list of over
1200+ names that were given to children in 2011. Here is a typical line from
the file:



`FEMALE, HISPANIC, GIA, 21`



  
Each position in the line (separated by a comma) represents a different ""data
element"". Here is a key for your reference:

Gender | Ethnicity  | Name |  Count  
(i.e., Number of Children Assigned this Name)  
---|---|---|---  
FEMALE | HISPANIC  | GIA | 21  
  
  
  
Write a Python algorithm that gets a gender (all CAPs, ""MALE"" or ""FEMALE"") and
a number, `X`, from the user, and prints out the X least popular names for
that gender, starting with the least popular and working up.

For example, if the user types `MALE` and `2`, and you determine that the two
least popular names are Bill and Ted, your program should output:

    
    
    Bill  
    Ted  
      
    



**HINTS (really really important):**

  * Remember that you can use the `sort()` function to sort a list in ascending order. For example, if your list is named `my_list`, you can sort it by typing:  
`my_list.sort()`

  * `sort()` will work on 2D lists. It will sort by the first column, and then look at the 2nd column in the event of a tie. Think about this when you are building your 2D list.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

def get_least_popular_names(gender, x):
    names = []

    with open('names.csv', 'r') as file:
        reader = csv.reader(file)
        next(reader) # skip header row

        for row in reader:
            if row[0].upper() == gender:
                names.append(row[2])

    names.sort(key=lambda name: int(name[3:]))

    return names[:x]

gender = input(""Enter gender (MALE/FEMALE): "")
x = int(input(""Enter number of names: ""))

least_popular_names = get_least_popular_names(gender, x)

for name in least_popular_names:
    print(name)
"
375,Lists3_sat,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python program that calculates only, but DOES NOT print, the average
SAT score across all schools, and outputs the name of each school that is
below the average.

This lab makes use of the sat.csv dataset, which describes the average SAT
performance for students attending 350+ schools. Here is a typical line from
the file:



`Henry Street School for International Studies, 391, 425, 385`



  
Each position in the line (separated by a comma) represents a different ""data
element"". Here is a key for your reference:

School Name  | Critical Reading Mean | Mathematics Mean | Writing Mean  
---|---|---|---  
Henry Street School for International Studies | 391 | 425 | 385  
  


**NOTES (really really important):**

  * You can get a school's average score by adding up the critical reading, mathematics, and writing composite scores.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python program that calculates only, but DOES NOT print, the average
SAT score across all schools, and outputs the name of each school that is
below the average.

This lab makes use of the sat.csv dataset, which describes the average SAT
performance for students attending 350+ schools. Here is a typical line from
the file:



`Henry Street School for International Studies, 391, 425, 385`



  
Each position in the line (separated by a comma) represents a different ""data
element"". Here is a key for your reference:

School Name  | Critical Reading Mean | Mathematics Mean | Writing Mean  
---|---|---|---  
Henry Street School for International Studies | 391 | 425 | 385  
  


**NOTES (really really important):**

  * You can get a school's average score by adding up the critical reading, mathematics, and writing composite scores.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

def calculate_average_score():
    total_score = 0
    count = 0
    below_average_schools = []
    
    with open('sat.csv') as file:
        csv_reader = csv.reader(file)
        next(csv_reader)  # skip header row
        
        for row in csv_reader:
            school_name = row[0]
            critical_reading_mean = int(row[1])
            mathematics_mean = int(row[2])
            writing_mean = int(row[3])
            average_score = critical_reading_mean + mathematics_mean + writing_mean
            
            total_score += average_score
            count += 1
            
    average = total_score / count
    
    with open('sat.csv') as file:
        csv_reader = csv.reader(file)
        next(csv_reader)  # skip header row
        
        for row in csv_reader:
            school_name = row[0]
            critical_reading_mean = int(row[1])
            mathematics_mean = int(row[2])
            writing_mean = int(row[3])
            average_score = critical_reading_mean + mathematics_mean + writing_mean
            
            if average_score < average:
                below_average_schools.append(school_name)
    
    return below_average_schools
"
376,Lists3_popularnames,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python program that takes two inputs and produces two outputs. NOTE:
This problem does not require creating an additional list to solve.

The inputs from the user are:

  1. A gender, a string which will be MALE or FEMALE
  2. A threshold number for the number of times that a name was used.

Your program will compare the information from the user to the names.csv
dataset, and output two statistics as output:

  1. The count of the number of names that were used above the threshold given for the provided gender
  2. The total count of children with the high usage names and the specified gender. In other words, the sum of the number of children given names above the threshold value from input 2.



This problem makes use of the names.csv dataset, which provides a list of over
1200+ names that were given to children in 2011. Here is a typical line from
the file:

`FEMALE, HISPANIC, GIA, 21`

Each position in the line (separated by a comma) represents a different ""data
element"". Here is a key for your reference:

Gender | Ethnicity | Name | Count  
(i.e., Number of Children Assigned this Name)  
---|---|---|---  
FEMALE | HISPANIC | GIA | 21  
  


**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

MALE

190

|

FEMALE

120

|

MALE

80  
  
Output |

1

224

|

15

2670

|

23

2740  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python program that takes two inputs and produces two outputs. NOTE:
This problem does not require creating an additional list to solve.

The inputs from the user are:

  1. A gender, a string which will be MALE or FEMALE
  2. A threshold number for the number of times that a name was used.

Your program will compare the information from the user to the names.csv
dataset, and output two statistics as output:

  1. The count of the number of names that were used above the threshold given for the provided gender
  2. The total count of children with the high usage names and the specified gender. In other words, the sum of the number of children given names above the threshold value from input 2.



This problem makes use of the names.csv dataset, which provides a list of over
1200+ names that were given to children in 2011. Here is a typical line from
the file:

`FEMALE, HISPANIC, GIA, 21`

Each position in the line (separated by a comma) represents a different ""data
element"". Here is a key for your reference:

Gender | Ethnicity | Name | Count  
(i.e., Number of Children Assigned this Name)  
---|---|---|---  
FEMALE | HISPANIC | GIA | 21  
  


**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

MALE

190

|

FEMALE

120

|

MALE

80  
  
Output |

1

224

|

15

2670

|

23

2740  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
377,Lists3_lowvolume,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python algorithm that opens the file and outputs the lowest (minimum)
traffic count.  Then, output the name of all streets whose traffic count is
within 2500 (inclusive) of the minimum.



This program makes use of the traffic.csv dataset. Here is a typical line from
the file:



`691,6067 North,Kimball Ave,8/15/06,15600,North Bound:7500/South Bound:8100`



As you will recall from class, each position in the line (separated by a
comma) represents a different ""data element"". Here is a key for your
reference:

ID | Address | Street | Sample Date | Total # of Passing Vehicles | # of
Vehicles by Direction  
---|---|---|---|---|---  
691 | 6067 North | Kimball Ave | 8/15/06 | 15600 | North Bound:7500/South
Bound:8100  
  
  
  
Output one street name per line.



For example, if the min traffic count is 500, and the roads within 2500 of
this value are ""Road A"", ""Road B"", ""Road C"", then your program should output:

    
    
    500  
    Road A  
    Road B  
    Road C




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a Python algorithm that opens the file and outputs the lowest (minimum)
traffic count.  Then, output the name of all streets whose traffic count is
within 2500 (inclusive) of the minimum.



This program makes use of the traffic.csv dataset. Here is a typical line from
the file:



`691,6067 North,Kimball Ave,8/15/06,15600,North Bound:7500/South Bound:8100`



As you will recall from class, each position in the line (separated by a
comma) represents a different ""data element"". Here is a key for your
reference:

ID | Address | Street | Sample Date | Total # of Passing Vehicles | # of
Vehicles by Direction  
---|---|---|---|---|---  
691 | 6067 North | Kimball Ave | 8/15/06 | 15600 | North Bound:7500/South
Bound:8100  
  
  
  
Output one street name per line.



For example, if the min traffic count is 500, and the roads within 2500 of
this value are ""Road A"", ""Road B"", ""Road C"", then your program should output:

    
    
    500  
    Road A  
    Road B  
    Road C




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
378,Lists3_averagetraffic,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

This program makes use of the traffic.csv dataset. Here is a typical line from
the file:



`691,6067 North,Kimball Ave,8/15/06,15600,North Bound:7500/South Bound:8100`



  
As you will recall from class, each position in the line (separated by a
comma) represents a different ""data element"". Here is a key for your
reference:

ID | Address | Street | Sample Date | Total # of Passing Vehicles  | # of
Vehicles by Direction  
---|---|---|---|---|---  
691 | 6067 North | Kimball Ave | 8/15/06 | 15600 | North Bound:7500/South
Bound:8100  
  
  
  
Write a Python algorithm that opens the file and outputs the # of roads whose
traffic count is greater than (or equal to) the average.  For example, if you
determine that the answer is 20, your program should output:

    
    
    20




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

This program makes use of the traffic.csv dataset. Here is a typical line from
the file:



`691,6067 North,Kimball Ave,8/15/06,15600,North Bound:7500/South Bound:8100`



  
As you will recall from class, each position in the line (separated by a
comma) represents a different ""data element"". Here is a key for your
reference:

ID | Address | Street | Sample Date | Total # of Passing Vehicles  | # of
Vehicles by Direction  
---|---|---|---|---|---  
691 | 6067 North | Kimball Ave | 8/15/06 | 15600 | North Bound:7500/South
Bound:8100  
  
  
  
Write a Python algorithm that opens the file and outputs the # of roads whose
traffic count is greater than (or equal to) the average.  For example, if you
determine that the answer is 20, your program should output:

    
    
    20




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
import csv

def count_roads_above_average(filename):
    with open(filename, 'r') as file:
        reader = csv.reader(file)
        next(reader)  # skip header row
        traffic_counts = []
        for row in reader:
            traffic_count = int(row[4])
            traffic_counts.append(traffic_count)
        
        average = sum(traffic_counts) / len(traffic_counts)
        count = sum(1 for count in traffic_counts if count >= average)
        
        return count

filename = 'traffic.csv'
result = count_roads_above_average(filename)
print(result)
"
379,Lists2_population,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

You are being provided with a simple 2D list that contains the names and
populations of the 10 largest cities in the world. This list (which is called
`cities_table`) can be logicially visualized as the following:



**City** |  **Population**  
---|---  
Tokyo | 37,435,191  
Delhi | 29,399,141  
Shanghai  | 25,647,805  
Sao Paulo  | 21,846,507  
Mexico City  | 21,671,908  
Cairo | 20,484,965  
Dhaka | 20,283,552  
Mumbai | 20,185,064  
Beijing  | 20,035,455  
Osaka | 19,222,665  
  
  
Write a Python program that gets a population from the user, and prints the
names of all the cities whose populations are at least that big (keep the same
order as in the 2D list). Print each city's name on a separate line.



**EXAMPLES:**

| Example 1 | Example 2  
---|---|---  
Input | 25000000 | 30000000  
Output | Tokyo  
Delhi  
Shanghai | Tokyo


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

You are being provided with a simple 2D list that contains the names and
populations of the 10 largest cities in the world. This list (which is called
`cities_table`) can be logicially visualized as the following:



**City** |  **Population**  
---|---  
Tokyo | 37,435,191  
Delhi | 29,399,141  
Shanghai  | 25,647,805  
Sao Paulo  | 21,846,507  
Mexico City  | 21,671,908  
Cairo | 20,484,965  
Dhaka | 20,283,552  
Mumbai | 20,185,064  
Beijing  | 20,035,455  
Osaka | 19,222,665  
  
  
Write a Python program that gets a population from the user, and prints the
names of all the cities whose populations are at least that big (keep the same
order as in the 2D list). Print each city's name on a separate line.



**EXAMPLES:**

| Example 1 | Example 2  
---|---|---  
Input | 25000000 | 30000000  
Output | Tokyo  
Delhi  
Shanghai | Tokyo


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
cities_table = [
    [""Tokyo"", 37435191],
    [""Delhi"", 29399141],
    [""Shanghai"", 25647805],
    [""Sao Paulo"", 21846507],
    [""Mexico City"", 21671908],
    [""Cairo"", 20484965],
    [""Dhaka"", 20283552],
    [""Mumbai"", 20185064],
    [""Beijing"", 20035455],
    [""Osaka"", 19222665]
]

population = int(input(""Enter population: ""))

for city in cities_table:
    if city[1] >= population:
        print(city[0])
"
380,Lists2_movies,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a Python function called `get_movies` that takes three parameters:

  * A two-dimensional list containing movie titles and other stats (see table below for an example)
  * A rating (e.g., ""PG"", ""R"")
  * A run time (in minutes)



Title | Release Year | Rating | Run Time (minutes)  
---|---|---|---  
Star Wars: A New Hope | 1977 | PG | 121  
Star Trek: The Motion Picture | 1979 | G | 132  
Indiana Jones: Raiders of the Lost Ark | 1989 | PG | 115  
  
  
Your function should return the number of movies that have the specified
rating, and run for at least the number of minutes specified.



**EXAMPLE:**  
If the above table were contained within a list called `movie_table`, then
`get_movies(movie_table, ""PG"", 100)` should return 2.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a Python function called `get_movies` that takes three parameters:

  * A two-dimensional list containing movie titles and other stats (see table below for an example)
  * A rating (e.g., ""PG"", ""R"")
  * A run time (in minutes)



Title | Release Year | Rating | Run Time (minutes)  
---|---|---|---  
Star Wars: A New Hope | 1977 | PG | 121  
Star Trek: The Motion Picture | 1979 | G | 132  
Indiana Jones: Raiders of the Lost Ark | 1989 | PG | 115  
  
  
Your function should return the number of movies that have the specified
rating, and run for at least the number of minutes specified.



**EXAMPLE:**  
If the above table were contained within a list called `movie_table`, then
`get_movies(movie_table, ""PG"", 100)` should return 2.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def get_movies(movie_table, rating, run_time):
    count = 0
    for movie in movie_table:
        if movie[2] == rating and movie[3] >= run_time:
            count += 1
    return count"
381,Lists2_golf,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

The cadet intercollegiate golf team needs some help tracking individual
performance. Create a Python algorithm that inputs repeated pairs of cadet
last-names followed by the golfers score until the word **END** (all capital
letters) is entered at the member last-name prompt.

Your algorithm should output:

  * The last name of the member with the lowest (best) score, if there are two members with the same lowest score, it should output the last name of the first person entered.
  * The percentage of members who are within 5 strokes (inclusive) of the lowest score.

There is no bound on the number of golfers that may be entered, but you may
assume that there will be at least one golfer and score entered.



**EXAMPLES:**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Inputs** |  Woods  
48  
Nicklaus  
51  
Hogan  
49  
Jones  
46  
Palmer  
52  
END |  Snead  
52  
Mickelson  
48  
Nelson  
48  
END |  Player  
51  
Watson  
51  
Singh  
48  
Floyd  
49  
Normal  
54  
END  
**Output** | Jones  
80.0 | Mickelson  
100.0 | Singh  
60.0  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

The cadet intercollegiate golf team needs some help tracking individual
performance. Create a Python algorithm that inputs repeated pairs of cadet
last-names followed by the golfers score until the word **END** (all capital
letters) is entered at the member last-name prompt.

Your algorithm should output:

  * The last name of the member with the lowest (best) score, if there are two members with the same lowest score, it should output the last name of the first person entered.
  * The percentage of members who are within 5 strokes (inclusive) of the lowest score.

There is no bound on the number of golfers that may be entered, but you may
assume that there will be at least one golfer and score entered.



**EXAMPLES:**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Inputs** |  Woods  
48  
Nicklaus  
51  
Hogan  
49  
Jones  
46  
Palmer  
52  
END |  Snead  
52  
Mickelson  
48  
Nelson  
48  
END |  Player  
51  
Watson  
51  
Singh  
48  
Floyd  
49  
Normal  
54  
END  
**Output** | Jones  
80.0 | Mickelson  
100.0 | Singh  
60.0  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def golf_team():
    golfer_scores = {}
    lowest_score = float('inf')
    lowest_score_names = []
    total_golfers = 0
    within_5_count = 0

    while True:
        last_name = input(""Enter golfer's last name (or END to quit): "")
        if last_name == 'END':
            break
        
        score = int(input(""Enter golfer's score: ""))
        golfer_scores[last_name] = score

        if score < lowest_score:
            lowest_score = score
            lowest_score_names = [last_name]
        elif score == lowest_score:
            lowest_score_names.append(last_name)

        total_golfers += 1
        
    for score in golfer_scores.values():
        if abs(score - lowest_score) <= 5:
            within_5_count += 1
    
    lowest_name = lowest_score_names[0]
    within_5_percentage = (within_5_count / total_golfers) * 100

    return lowest_name, within_5_percentage

# Example usage:
lowest_name, within_5_percentage = golf_team()
print(lowest_name)
print(within_5_percentage)
"
382,Lists2_credit,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

The Air Academy Federal Credit Union wants to identify its best customers and
comes to you for help. To help with the accounting, create a Python program
which inputs repeated pairs of member last-names followed by account balances
until the word **DONE** (all capital letters) is entered at the member last-
name prompt.

Your program should output:

  * The last name of the member with the highest account value, if there are two members with the same highest account value it should output the name of the first person entered.
  * It will then output the percentage members who are within $10,000 (inclusive) of the highest account value.

There is no bound on the number of members that may be entered, but you may
assume that there will be at least one member and balance entered.



**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |  Rockefeller  
120000  
Chase  
115000  
Morgan  
110000  
Gates  
90000  
Jobs  
65000  
DONE  |  Jobs  
150000  
Chase  
150000  
Kennedy  
40000  
DONE |  Morgan  
145000  
Chase  
135000  
Kennedy  
142000  
Gates  
145000  
DONE  
Output | Rockefeller  
60.0 | Jobs  
66.66666666666666 | Morgan  
100.0  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

The Air Academy Federal Credit Union wants to identify its best customers and
comes to you for help. To help with the accounting, create a Python program
which inputs repeated pairs of member last-names followed by account balances
until the word **DONE** (all capital letters) is entered at the member last-
name prompt.

Your program should output:

  * The last name of the member with the highest account value, if there are two members with the same highest account value it should output the name of the first person entered.
  * It will then output the percentage members who are within $10,000 (inclusive) of the highest account value.

There is no bound on the number of members that may be entered, but you may
assume that there will be at least one member and balance entered.



**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |  Rockefeller  
120000  
Chase  
115000  
Morgan  
110000  
Gates  
90000  
Jobs  
65000  
DONE  |  Jobs  
150000  
Chase  
150000  
Kennedy  
40000  
DONE |  Morgan  
145000  
Chase  
135000  
Kennedy  
142000  
Gates  
145000  
DONE  
Output | Rockefeller  
60.0 | Jobs  
66.66666666666666 | Morgan  
100.0  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def identify_best_customers():
    members = []
    highest_balance = 0
    highest_name = """"

    # Input member names and balances
    while True:
        last_name = input(""Enter member last name: "")
        if last_name == ""DONE"":
            break
        balance = int(input(""Enter account balance: ""))
        
        # Update highest balance if necessary
        if balance > highest_balance:
            highest_balance = balance
            highest_name = last_name
        
        members.append((last_name, balance))

    # Count number of members within $10,000 of highest balance
    count = 0
    for member in members:
        if highest_balance - member[1] <= 10000:
            count += 1
    
    # Calculate percentage
    percentage = (count / len(members)) * 100

    return highest_name, percentage
"
383,Lists2_100m,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

You have been asked by your unit to record 100m dash times for an upcoming
USAFA track meet. Create a Python algorithm that first asks for the number of
cadets, and then asks for that many cadet last names, squadrons, and 100m dash
times (in that order).

Your program should output:

  * The cadet squadron containing the cadet with the fastest 100m dash time followed by their 100m dash time. If there is a tie for fastest 100m dash times, you should output the squadron number and time for the LAST cadet entered who had that fastest time.
  * The number of cadets whose 100m dash time was faster than the average.

There is no bound on the number of cadets that may be entered, but you may
assume that there will be at least one cadet and track time entered.



**EXAMPLES:**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Inputs** |  4  
Thorpe  
13  
10.2  
Owens  
22  
9.93  
Mathias  
19  
9.99  
Rudolph  
39  
10.23  |  3  
Johnson  
7  
10.3  
Tyus  
14  
10.02  
Lewis  
40  
9.67 |  2  
Joyner  
1  
10.08  
Kersee  
29  
9.97  
**Output** | 22  
9.93  
2 | 40  
9.67  
1 | 29  
9.97  
1


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

You have been asked by your unit to record 100m dash times for an upcoming
USAFA track meet. Create a Python algorithm that first asks for the number of
cadets, and then asks for that many cadet last names, squadrons, and 100m dash
times (in that order).

Your program should output:

  * The cadet squadron containing the cadet with the fastest 100m dash time followed by their 100m dash time. If there is a tie for fastest 100m dash times, you should output the squadron number and time for the LAST cadet entered who had that fastest time.
  * The number of cadets whose 100m dash time was faster than the average.

There is no bound on the number of cadets that may be entered, but you may
assume that there will be at least one cadet and track time entered.



**EXAMPLES:**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Inputs** |  4  
Thorpe  
13  
10.2  
Owens  
22  
9.93  
Mathias  
19  
9.99  
Rudolph  
39  
10.23  |  3  
Johnson  
7  
10.3  
Tyus  
14  
10.02  
Lewis  
40  
9.67 |  2  
Joyner  
1  
10.08  
Kersee  
29  
9.97  
**Output** | 22  
9.93  
2 | 40  
9.67  
1 | 29  
9.97  
1


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def record_dash_times():
    num_cadets = int(input())
    cadets = []
    fastest_squadron = 0
    fastest_time = float('inf')
    total_time = 0
    num_faster_than_avg = 0
    
    for _ in range(num_cadets):
        cadet_last_name = input()
        cadet_squadron = int(input())
        cadet_time = float(input())
        
        cadets.append((cadet_last_name, cadet_squadron, cadet_time))
        
        if cadet_time < fastest_time:
            fastest_time = cadet_time
            fastest_squadron = cadet_squadron
        elif cadet_time == fastest_time:
            fastest_squadron = cadet_squadron
            
        total_time += cadet_time
        
    avg_time = total_time / num_cadets
    
    for cadet in cadets:
        if cadet[2] < avg_time:
            num_faster_than_avg += 1
    
    return fastest_squadron, fastest_time, num_faster_than_avg

output = record_dash_times()
print(output[0])
print(output[1])
print(output[2])
"
384,Lists1_pftscores,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

You are provided a list of PFT scores, already in the lab template, in a
variable `pft_scores` arranged in no particular order.

Write a Python program that obtains a new score from the user. If the score is
valid (above zero and no greater than 500), add it to the list and print out
the following two stats in this order:

1\. **average score  ** HINT: use the functions `len()` and `sum()` on your
list to find the average

2\. **range of scores** , the difference between the largest score and
smallest score. HINT: use the functions `min()` and `max()` on your list to
find the range

If the score is invalid (below zero or above 500), instead print:  ""Invalid
score provided"".



**EXAMPLE:**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | -5 | 328 | 65  
**Outputs** | Invalid score provided |

291.8

403

|

274.26666666666665

408  
  




  




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

You are provided a list of PFT scores, already in the lab template, in a
variable `pft_scores` arranged in no particular order.

Write a Python program that obtains a new score from the user. If the score is
valid (above zero and no greater than 500), add it to the list and print out
the following two stats in this order:

1\. **average score  ** HINT: use the functions `len()` and `sum()` on your
list to find the average

2\. **range of scores** , the difference between the largest score and
smallest score. HINT: use the functions `min()` and `max()` on your list to
find the range

If the score is invalid (below zero or above 500), instead print:  ""Invalid
score provided"".



**EXAMPLE:**

| **Example 1** | **Example 2** | **Example 3**  
---|---|---|---  
**Input** | -5 | 328 | 65  
**Outputs** | Invalid score provided |

291.8

403

|

274.26666666666665

408  
  




  




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
pft_scores = [300, 250, 400, 350, 200]

# get new score from user
new_score = int(input(""Enter a new PFT score: ""))

# check if score is valid
if new_score > 0 and new_score <= 500:
    # add score to list
    pft_scores.append(new_score)
    # calculate average score
    average_score = sum(pft_scores) / len(pft_scores)
    # calculate range of scores
    range_of_scores = max(pft_scores) - min(pft_scores)
    # print stats
    print(average_score)
    print(range_of_scores)
else:
    # invalid score
    print(""Invalid score provided"")
"
385,Lists1_listrange,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a Python program that obtains two whole numbers that represent the start
and stop values for a range of numbers. You may assume the second number is
always greater than the first.

Using these start and stop values, print the two following items in order:

1.  Print a list that starts at the start value and ends at (the list contains) the stop value

**HINT** : Use `range()` to accomplish this. In order to print the result from
range() as a list, surround it with list(), `list(range(#,#))`, like you
surround input() with int() or float(), `int(input())`.

2.  Print the size (how many numbers are contained) of that list



**EXAMPLE:**

| **Example 1** | **Example 2**  
---|---|---  
**Inputs** |

1

10

|

1023

1029  
  
**Outputs** | [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  
10 |

[1023, 1024, 1025, 1026, 1027, 1028, 1029]  
7


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a Python program that obtains two whole numbers that represent the start
and stop values for a range of numbers. You may assume the second number is
always greater than the first.

Using these start and stop values, print the two following items in order:

1.  Print a list that starts at the start value and ends at (the list contains) the stop value

**HINT** : Use `range()` to accomplish this. In order to print the result from
range() as a list, surround it with list(), `list(range(#,#))`, like you
surround input() with int() or float(), `int(input())`.

2.  Print the size (how many numbers are contained) of that list



**EXAMPLE:**

| **Example 1** | **Example 2**  
---|---|---  
**Inputs** |

1

10

|

1023

1029  
  
**Outputs** | [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  
10 |

[1023, 1024, 1025, 1026, 1027, 1028, 1029]  
7


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
start = int(input())
stop = int(input())

numbers = list(range(start, stop+1))
size = len(numbers)

print(numbers)
print(size)
"
386,Lists1_fastestcar,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a Python program with the definition of a new function named fastest_car
and takes two lists of car info as parameters. The function will then
**return** the car model name with the higher top speed or ""Same speed"" if the
top speeds are the same.

The two parameters to the function are both a list with the same 3 types of
elements, as follows:

  
| **Car Model** | **Cost** | **Top Speed**  
---|---|---|---  
**Value** | Ford Mustang | 27205.00 | 163  
  


| **Car Model** | **Cost** | **Top Speed**  
---|---|---|---  
**Value** | Chevy Corvette | 66400.00 | 194  
  


**EXAMPLE** :

| **Example**  
---|---  
**Input Parameters to** `fastest_car()` |

`fastest_car([""Ford Mustang"", 27205.00, 163], [""Chevy Corvette"", 66400.00,
194])`  
  
**Outputs** | Chevy Corvette


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:**

Write a Python program with the definition of a new function named fastest_car
and takes two lists of car info as parameters. The function will then
**return** the car model name with the higher top speed or ""Same speed"" if the
top speeds are the same.

The two parameters to the function are both a list with the same 3 types of
elements, as follows:

  
| **Car Model** | **Cost** | **Top Speed**  
---|---|---|---  
**Value** | Ford Mustang | 27205.00 | 163  
  


| **Car Model** | **Cost** | **Top Speed**  
---|---|---|---  
**Value** | Chevy Corvette | 66400.00 | 194  
  


**EXAMPLE** :

| **Example**  
---|---  
**Input Parameters to** `fastest_car()` |

`fastest_car([""Ford Mustang"", 27205.00, 163], [""Chevy Corvette"", 66400.00,
194])`  
  
**Outputs** | Chevy Corvette


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","def fastest_car(car1, car2):
   if car1[2] > car2[2]:
      return car1[0]
   elif car1[2] < car2[2]:
      return car2[0]
   else:
      return ""Same speed"""
387,IterLogic2_timestable,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
** Write an algorithm that asks the user for a positive number and then
outputs the multiplication table of that number 1-10.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Inputs | 3 | 9  
Outputs |

3  
6  
9  
12  
15  
18  
21  
24  
27  
30

| 9  
18  
27  
36  
45  
54  
63  
72  
81  
90  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
** Write an algorithm that asks the user for a positive number and then
outputs the multiplication table of that number 1-10.



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Inputs | 3 | 9  
Outputs |

3  
6  
9  
12  
15  
18  
21  
24  
27  
30

| 9  
18  
27  
36  
45  
54  
63  
72  
81  
90  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
388,IterLogic2_printchars,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Write a Python algorithm that asks the users for two ASCII characters
(e.g., 'a', 'z'), and prints all of the characters between them (inclusive).

  * If the first character has a lower ASCII value than the second (e.g., 'a' - 'z'), print out the letters in ascending order.
  * Alternatively, if the second letter has a lower ASCII value, print out the letters in descending order.



**HINTS:**

  * Use the `ord()` function to convert a character into an integer:  
`ord('a')` returns 141  
  

  * Use the `chr()` function to convert an integer back into a character:  
`chr(142)` returns 'b'



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Inputs | a  
c | f  
a  
Outputs |

a  
b  
c

| f  
e  
d  
c  
b  
a


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Write a Python algorithm that asks the users for two ASCII characters
(e.g., 'a', 'z'), and prints all of the characters between them (inclusive).

  * If the first character has a lower ASCII value than the second (e.g., 'a' - 'z'), print out the letters in ascending order.
  * Alternatively, if the second letter has a lower ASCII value, print out the letters in descending order.



**HINTS:**

  * Use the `ord()` function to convert a character into an integer:  
`ord('a')` returns 141  
  

  * Use the `chr()` function to convert an integer back into a character:  
`chr(142)` returns 'b'



**EXAMPLES:**

  | Example 1 | Example 2  
---|---|---  
Inputs | a  
c | f  
a  
Outputs |

a  
b  
c

| f  
e  
d  
c  
b  
a


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
start_char = input()
end_char = input()

start_ord = ord(start_char)
end_ord = ord(end_char)

if start_ord <= end_ord:
    for i in range(start_ord, end_ord + 1):
        print(chr(i))
else:
    for i in range(start_ord, end_ord - 1, -1):
        print(chr(i))
"
389,IterLogic2_football,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** In, Python, write an algorithm that first asks the user how many football
players they wish to enter statistics for and then gets that many yearly
passing totals for each player. Output how many of those players that had more
than 5000 passing yards in a year. Also your algorithm will output the average
yardage per year as well as the minimum yardage entered, in that order. You
can assume there is at least one player's yardage to input.



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
**Inputs** | 6  
4924  
4442  
5117  
2700  
1990  
4399 | 5  
2305  
4209  
5100  
5109  
3800 | 4  
4200  
2709  
3757  
2976  
**Outputs** | 1  
3928.6666666666665  
1990 | 2  
4104.6  
2305 | 0  
3410.5  
2709


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** In, Python, write an algorithm that first asks the user how many football
players they wish to enter statistics for and then gets that many yearly
passing totals for each player. Output how many of those players that had more
than 5000 passing yards in a year. Also your algorithm will output the average
yardage per year as well as the minimum yardage entered, in that order. You
can assume there is at least one player's yardage to input.



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
**Inputs** | 6  
4924  
4442  
5117  
2700  
1990  
4399 | 5  
2305  
4209  
5100  
5109  
3800 | 4  
4200  
2709  
3757  
2976  
**Outputs** | 1  
3928.6666666666665  
1990 | 2  
4104.6  
2305 | 0  
3410.5  
2709


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def football_stats():
    num_players = int(input(""Enter the number of players: ""))
    passing_yards = []
    
    for _ in range(num_players):
        passing_yards.append(int(input(""Enter yearly passing total: "")))
    
    num_players_over_5000 = sum(yard > 5000 for yard in passing_yards)
    avg_yardage = sum(passing_yards) / num_players
    min_yardage = min(passing_yards)
    
    print(num_players_over_5000)
    print(avg_yardage)
    print(min_yardage)

football_stats()
"
390,IterLogic2_counting,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
** Write a Python algorithm that gets three numbers from the user, X, Y, and
Z. Then have the algorithm output all the numbers from X to Y (inclusive),
counting by Z. You may assume that Z is non-zero.



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
**Inputs** | 1  
5  
1 | -5  
-10  
-3 | 15  
15  
100  
**Outputs** | 1  
2  
3  
4  
5 | -5  
-8 | 15


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
** Write a Python algorithm that gets three numbers from the user, X, Y, and
Z. Then have the algorithm output all the numbers from X to Y (inclusive),
counting by Z. You may assume that Z is non-zero.



**EXAMPLES:**

  | Example 1 | Example 2 | Example 3  
---|---|---|---  
**Inputs** | 1  
5  
1 | -5  
-10  
-3 | 15  
15  
100  
**Outputs** | 1  
2  
3  
4  
5 | -5  
-8 | 15


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
X = int(input())
Y = int(input())
Z = int(input())

if X <= Y:
  for i in range(X, Y+1, Z):
    print(i)
else:
  for i in range(X, Y-1, -Z):
    print(i)
"
391,IterLogic2_coordinates,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Write a Python algorithm that prints all the coordinates in a coordinate
plane, given two corners. Your program should get four inputs from the user:

  * the starting x-coordinate,
  * the ending x-coordinate,
  * the starting y-coordinate, and
  * the ending y-coordinate.

Your program will then print out all of the coordinates in x y order
(separating coordinates with a space), listing all of the coordinates in the
x-axis before incrementing y. You may assume that the ending coordinate is
never less than the starting coordinate.  

For example, your algorithm would print out:  
1 2  
2 2  
3 2  
4 2  
5 2  
6 2  
1 3  
2 3  
3 3  
4 3  
5 3  
6 3  
. . . and so on



**HINTS:**

  * Write a loop that first prints all of the x coordinates from start to end
  * Use a nested loop to print all of the y coordinates from start to end



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Inputs** | 0  
1  
0  
1 | 0  
2  
0  
1  
**Outputs** | 0 0  
1 0  
0 1  
1 1 | 0 0  
1 0  
2 0  
0 1  
1 1  
2 1  
  



You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Write a Python algorithm that prints all the coordinates in a coordinate
plane, given two corners. Your program should get four inputs from the user:

  * the starting x-coordinate,
  * the ending x-coordinate,
  * the starting y-coordinate, and
  * the ending y-coordinate.

Your program will then print out all of the coordinates in x y order
(separating coordinates with a space), listing all of the coordinates in the
x-axis before incrementing y. You may assume that the ending coordinate is
never less than the starting coordinate.  

For example, your algorithm would print out:  
1 2  
2 2  
3 2  
4 2  
5 2  
6 2  
1 3  
2 3  
3 3  
4 3  
5 3  
6 3  
. . . and so on



**HINTS:**

  * Write a loop that first prints all of the x coordinates from start to end
  * Use a nested loop to print all of the y coordinates from start to end



**EXAMPLES:**

  | **Example 1** | **Example 2**  
---|---|---  
**Inputs** | 0  
1  
0  
1 | 0  
2  
0  
1  
**Outputs** | 0 0  
1 0  
0 1  
1 1 | 0 0  
1 0  
2 0  
0 1  
1 1  
2 1  
  



 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
start_x = int(input())
end_x = int(input())
start_y = int(input())
end_y = int(input())

for x in range(start_x, end_x+1):
    for y in range(start_y, end_y+1):
        print(x, y)
"
392,IterLogic2_class2017,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** In Python, write an algorithm that first asks the user how many cadets to
input and then gets that many cadet class years from the user. Output how many
of those cadets were in the class of 2017. You can assume there is at least
one cadet to enter.

**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | 4  
2014  
2016  
2017  
2017 | 5  
2015  
2017  
2014  
2014  
2017 | 4  
2014  
2016  
2014  
2014  
Outputs | 2 | 3 | 0


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** In Python, write an algorithm that first asks the user how many cadets to
input and then gets that many cadet class years from the user. Output how many
of those cadets were in the class of 2017. You can assume there is at least
one cadet to enter.

**EXAMPLES:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | 4  
2014  
2016  
2017  
2017 | 5  
2015  
2017  
2014  
2014  
2017 | 4  
2014  
2016  
2014  
2014  
Outputs | 2 | 3 | 0


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def count_cadets():
    num_cadets = int(input())
    count_2017 = 0

    for i in range(num_cadets):
        year = int(input())
        if year == 2017:
            count_2017 += 1

    return count_2017

print(count_cadets())
"
393,IterLogic1_waittimes,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that lets the user input the wait times for various
rides at an amusement park (in minutes) until he/she types the value -999.
Output the shortest waiting time, followed by the number of waiting times that
are over 30 minutes.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

90  
30  
31  
-999

|

35  
15  
90  
120  
15  
-999

|

15  
15  
10  
5  
-999  
  
Outputs | 30  
2 | 15  
3 | 5  
0


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that lets the user input the wait times for various
rides at an amusement park (in minutes) until he/she types the value -999.
Output the shortest waiting time, followed by the number of waiting times that
are over 30 minutes.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

90  
30  
31  
-999

|

35  
15  
90  
120  
15  
-999

|

15  
15  
10  
5  
-999  
  
Outputs | 30  
2 | 15  
3 | 5  
0


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
wait_times = []
count_over_30 = 0

while True:
    wait_time = int(input(""Enter wait time (or -999 to quit): ""))
    
    if wait_time == -999:
        break
    
    wait_times.append(wait_time)
    
    if wait_time > 30:
        count_over_30 += 1

shortest_wait = min(wait_times)

print(f""{shortest_wait}\n{count_over_30}"")
"
394,IterLogic1_squadrons,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that asks the user for the number of squadrons to input,
and then gets each squadron's number. Output the number  
of squadrons from 1st, 2nd, 3rd, and 4th groups (one per line)

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

3  
3  
19  
24

|

4  
19  
25  
37  
40

|

2  
1  
34  
  
Outputs | 1  
1  
1  
0 | 0  
1  
1  
2 | 1  
0  
0  
1


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that asks the user for the number of squadrons to input,
and then gets each squadron's number. Output the number  
of squadrons from 1st, 2nd, 3rd, and 4th groups (one per line)

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

3  
3  
19  
24

|

4  
19  
25  
37  
40

|

2  
1  
34  
  
Outputs | 1  
1  
1  
0 | 0  
1  
1  
2 | 1  
0  
0  
1


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def count_squadrons(num_squadrons):
    groups = [0, 0, 0, 0]
    
    for _ in range(num_squadrons):
        squadron = int(input())
        if squadron <= 10:
            groups[0] += 1
        elif 11 <= squadron <= 20:
            groups[1] += 1
        elif 21 <= squadron <= 30:
            groups[2] += 1
        elif 31 <= squadron <= 40:
            groups[3] += 1
    
    for group in groups:
        print(group)
    
count_squadrons(int(input()))"
395,IterLogic1_dvc,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM NAME:  
** IterLogic1_dvc



**PROBLEM STATEMENT:  
** The CS110Z course director, unfortunately, was tricked into purchasing a
Disney Vacation Club timeshare. The good news about DVC is that it lets you
reserve a room at any Disney Resort for one week! The downside, however, is
that members have to pay an annual ""maintenance fee"" so that the mouse can
keep the property looking good (EVEN when Disney World was closed due to
COVID-19 . . . yay).

This year, the maintenance was $623.00. If that isn't bad enough, your course
director discovered that maintenance fees aren't fixed! On the contrary, it
accues each year at a rate of approximately 1.5%.

Write a Python function called `get_years_until` that takes a  **target
value**  as a parameter, and returns the number of years (assuming a fixed
interest rate) before the maintenance fee exceeds this value.



**Example 1**  
`get_years_until(624)` should return 1. This is because:

  * The maintenance fee will increase by $9.35 (i.e., 1.5% of 623) in a year
  * The new maintenance fee will be $623.00 + $9.35 = $632.35, which is obviously more than $624.00

**  
Example 2**  
`get_years_until(1000)` should return 32. This is because:

  * 623 * 1.015 * 1.015 * 1.015 . . . (32 times total) = $1003.23, which is obviously more than $1000.00

  
**Don't Know Where to Start?!?**  
Use a While loop to keep calculating the new maintenance fee until the value
is . . . (we'll let you figure out the rest).


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM NAME:  
** IterLogic1_dvc



**PROBLEM STATEMENT:  
** The CS110Z course director, unfortunately, was tricked into purchasing a
Disney Vacation Club timeshare. The good news about DVC is that it lets you
reserve a room at any Disney Resort for one week! The downside, however, is
that members have to pay an annual ""maintenance fee"" so that the mouse can
keep the property looking good (EVEN when Disney World was closed due to
COVID-19 . . . yay).

This year, the maintenance was $623.00. If that isn't bad enough, your course
director discovered that maintenance fees aren't fixed! On the contrary, it
accues each year at a rate of approximately 1.5%.

Write a Python function called `get_years_until` that takes a  **target
value**  as a parameter, and returns the number of years (assuming a fixed
interest rate) before the maintenance fee exceeds this value.



**Example 1**  
`get_years_until(624)` should return 1. This is because:

  * The maintenance fee will increase by $9.35 (i.e., 1.5% of 623) in a year
  * The new maintenance fee will be $623.00 + $9.35 = $632.35, which is obviously more than $624.00

**  
Example 2**  
`get_years_until(1000)` should return 32. This is because:

  * 623 * 1.015 * 1.015 * 1.015 . . . (32 times total) = $1003.23, which is obviously more than $1000.00

  
**Don't Know Where to Start?!?**  
Use a While loop to keep calculating the new maintenance fee until the value
is . . . (we'll let you figure out the rest).


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def get_years_until(target):
    maintenance = 623
    years = 0
    while maintenance <= target:
        maintenance = maintenance * 1.015
        years += 1
    return years
"
396,IterLogic1_countby10s,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a program whose input is two integers. Output the first integer and
subsequent increments of 10 as long as the value is less than or equal to the
second integer.

Case #1: If the input is:

    
    
    -15
    30
    

the output is:

    
    
    -15
    -5
    5
    15
    25
    

Case 2: If the second integer is less than the first as in:

    
    
    20
    5
    

the output is:

    
    
    Second integer can't be less than the first.
    

For coding simplicity, output a space after every integer, including the last.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Write a program whose input is two integers. Output the first integer and
subsequent increments of 10 as long as the value is less than or equal to the
second integer.

Case #1: If the input is:

    
    
    -15
    30
    

the output is:

    
    
    -15
    -5
    5
    15
    25
    

Case 2: If the second integer is less than the first as in:

    
    
    20
    5
    

the output is:

    
    
    Second integer can't be less than the first.
    

For coding simplicity, output a space after every integer, including the last.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def print_numbers(first, second):
    if second < first:
        return ""Second integer can't be less than the first.""
    
    result = """"
    for num in range(first, second+1, 10):
        result += str(num) + "" ""
    
    return result.strip()


# Test Cases
print(print_numbers(-15, 30))
print(print_numbers(20, 5))
"
397,IterLogic1_count,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a Python program that gets 2 inputs from the user

  * a number,  **x**
  * an increment amount,  **y**

Your program will then print out all the numbers from 0 to the user-defined
value (x), counting by the increment amount (y).

**EXAMPLES:**

| Example 1 | Example 2  
---|---|---  
Inputs | 10  
2 | 14  
3  
Outputs | 0  
2  
4  
6  
8  
10 | 0  
3  
6  
9  
12


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write a Python program that gets 2 inputs from the user

  * a number,  **x**
  * an increment amount,  **y**

Your program will then print out all the numbers from 0 to the user-defined
value (x), counting by the increment amount (y).

**EXAMPLES:**

| Example 1 | Example 2  
---|---|---  
Inputs | 10  
2 | 14  
3  
Outputs | 0  
2  
4  
6  
8  
10 | 0  
3  
6  
9  
12


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
x = int(input())
y = int(input())

for i in range(0, x+1, y):
    print(i)
"
398,IterLogic1_cargocapacity,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that lets the user input the cargo capacity (in lbs) of
various transport aircraft until the user enters -1. Your program should
output the min and max cargo capacity, as well as the number of aircraft that
can carry at least 10000 lbs.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

4500  
11000  
9000  
-1

|

9999  
15000  
3500  
17500  
-1

| 10000  
-1  
Outputs | 4500  
11000  
1 | 3500  
17500  
2 | 10000  
10000  
1


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Write an algorithm that lets the user input the cargo capacity (in lbs) of
various transport aircraft until the user enters -1. Your program should
output the min and max cargo capacity, as well as the number of aircraft that
can carry at least 10000 lbs.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs |

4500  
11000  
9000  
-1

|

9999  
15000  
3500  
17500  
-1

| 10000  
-1  
Outputs | 4500  
11000  
1 | 3500  
17500  
2 | 10000  
10000  
1


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
min_capacity = float('inf')
max_capacity = float('-inf')
count = 0

while True:
    capacity = int(input())
    if capacity == -1:
        break
    min_capacity = min(min_capacity, capacity)
    max_capacity = max(max_capacity, capacity)
    if capacity >= 10000:
        count += 1

print(min_capacity)
print(max_capacity)
print(count)
"
399,IterLogic1_averagerun,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** In, Python, write an algorithm that first asks the user how many PFT run
times to input and then gets that many values from the user. Output the
average of all the run times. You can assume there is at least one run time to
input.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | 6  
98  
75  
88  
82  
94  
100 | 5  
99  
83  
79  
86  
87 | 4  
88  
82  
80  
90  
Outputs | 89.5 | 86.8 | 85


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** In, Python, write an algorithm that first asks the user how many PFT run
times to input and then gets that many values from the user. Output the
average of all the run times. You can assume there is at least one run time to
input.

**EXAMPLE:**

| Example 1 | Example 2 | Example 3  
---|---|---|---  
Inputs | 6  
98  
75  
88  
82  
94  
100 | 5  
99  
83  
79  
86  
87 | 4  
88  
82  
80  
90  
Outputs | 89.5 | 86.8 | 85


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
n = int(input())
times = []
for _ in range(n):
    times.append(int(input()))
average = sum(times) / n
print(average)
"
400,Graphics3_soundboard,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Using PythonGraph, create a ""soundboard"" application. Your program should
display a list of colored buttons (i.e., rectangles). When the user clicks
inside of a rectangle, the program plays a different
sound.[](https://canvas.instructure.com/courses/1762383/files/86200052/download?download_frd=1)

The provided template file comes with a single button implemented. Your job is
to study this code and create at least 5 other buttons. Note: The buttons do
not have to be laid out in the same arrangement, but they should look
organized.

When you are finished, upload your Python code. Do NOT upload any of the sound
files.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Using PythonGraph, create a ""soundboard"" application. Your program should
display a list of colored buttons (i.e., rectangles). When the user clicks
inside of a rectangle, the program plays a different
sound.[](https://canvas.instructure.com/courses/1762383/files/86200052/download?download_frd=1)

The provided template file comes with a single button implemented. Your job is
to study this code and create at least 5 other buttons. Note: The buttons do
not have to be laid out in the same arrangement, but they should look
organized.

When you are finished, upload your Python code. Do NOT upload any of the sound
files.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","from PythonGraph import GraphWin, Point, Rectangle, Text

def main():

    win = GraphWin(""Soundboard"", 800, 600)

    rectangle1 = Rectangle(Point(50, 50), Point(150, 150))
    rectangle1.setFill(""red"")
    rectangle1.draw(win)

    rectangle2 = Rectangle(Point(200, 50), Point(300, 150))
    rectangle2.setFill(""blue"")
    rectangle2.draw(win)

    rectangle3 = Rectangle(Point(350, 50), Point(450, 150))
    rectangle3.setFill(""green"")
    rectangle3.draw(win)

    rectangle4 = Rectangle(Point(500, 50), Point(600, 150))
    rectangle4.setFill(""yellow"")
    rectangle4.draw(win)

    rectangle5 = Rectangle(Point(650, 50), Point(750, 150))
    rectangle5.setFill(""orange"")
    rectangle5.draw(win)

    sound1_text = Text(Point(100, 100), ""Sound 1"")
    sound1_text.setTextColor(""white"")
    sound1_text.draw(win)

    sound2_text = Text(Point(250, 100), ""Sound 2"")
    sound2_text.setTextColor(""white"")
    sound2_text.draw(win)

    sound3_text = Text(Point(400, 100), ""Sound 3"")
    sound3_text.setTextColor(""white"")
    sound3_text.draw(win)

    sound4_text = Text(Point(550, 100), ""Sound 4"")
    sound4_text.setTextColor(""white"")
    sound4_text.draw(win)

    sound5_text = Text(Point(700, 100), ""Sound 5"")
    sound5_text.setTextColor(""white"")
    sound5_text.draw(win)

    while True:
        click_point = win.getMouse()

        if rectangle1.getP1().getX() <= click_point.getX() <= rectangle1.getP2().getX() and \
                rectangle1.getP1().getY() <= click_point.getY() <= rectangle1.getP2().getY():
            # Play sound 1
            pass

        elif rectangle2.getP1().getX() <= click_point.getX() <= rectangle2.getP2().getX() and \
                rectangle2.getP1().getY() <= click_point.getY() <= rectangle2.getP2().getY():
            # Play sound 2
            pass

        elif rectangle3.getP1().getX() <= click_point.getX() <= rectangle3.getP2().getX() and \
                rectangle3.getP1().getY() <= click_point.getY() <= rectangle3.getP2().getY():
            # Play sound 3
            pass

        elif rectangle4.getP1().getX() <= click_point.getX() <= rectangle4.getP2().getX() and \
                rectangle4.getP1().getY() <= click_point.getY() <= rectangle4.getP2().getY():
            # Play sound 4
            pass

        elif rectangle5.getP1().getX() <= click_point.getX() <= rectangle5.getP2().getX() and \
                rectangle5.getP1().getY() <= click_point.getY() <= rectangle5.getP2().getY():
            # Play sound 5
            pass

if __name__ == ""__main__"":
    main()"
401,Graphics3_paint,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Using PythonGraph, create a simple paint application. Your program should draw
circles on the window whenever the user presses the left mouse button. Your
program should also watch for keyboard inputs, and allow the user to change
colors and the size of the circle by pressing on different keys of your
choice.

The code template of a paint program has been provided to you as a starting
point in paint. Use this code and make the necessary modifications in the
Animation while loop.

When you are finished, upload your Python code.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
**

Using PythonGraph, create a simple paint application. Your program should draw
circles on the window whenever the user presses the left mouse button. Your
program should also watch for keyboard inputs, and allow the user to change
colors and the size of the circle by pressing on different keys of your
choice.

The code template of a paint program has been provided to you as a starting
point in paint. Use this code and make the necessary modifications in the
Animation while loop.

When you are finished, upload your Python code.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from tkinter import *
import random

def on_mouse_click(event):
    x = event.x
    y = event.y
    radius = random.randint(10, 50)
    color = random.choice(['red', 'blue', 'green', 'yellow', 'purple', 'orange'])
    canvas.create_oval(x-radius, y-radius, x+radius, y+radius, fill=color)

def on_key_press(event):
    if event.char == 'r':
        canvas.unbind('<Button-1>')
        canvas.bind('<Button-1>', on_mouse_click)
    elif event.char == 'g':
        canvas.unbind('<Button-1>')
        canvas.bind('<Button-1>', on_mouse_click)
    elif event.char == 'b':
        canvas.unbind('<Button-1>')
        canvas.bind('<Button-1>', on_mouse_click)

root = Tk()
canvas = Canvas(root, width=500, height=500)
canvas.pack()

canvas.bind('<Button-1>', on_mouse_click)
root.bind('<Key>', on_key_press)

root.mainloop()
"
402,Graphics2_bouncingtriangle,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Using the Bouncing Ball from the previous lab as a starting point, generate
an animation of a bouncing triangle. The triangle's vertices should start at
random locations, and bounce whenever the triangle hits a wall.





**HINTS** :

  * Try drawing 3 bouncing balls on the screen.
  * Once the balls are moving correctly, draw 3 lines to connect them!


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** Using the Bouncing Ball from the previous lab as a starting point, generate
an animation of a bouncing triangle. The triangle's vertices should start at
random locations, and bounce whenever the triangle hits a wall.





**HINTS** :

  * Try drawing 3 bouncing balls on the screen.
  * Once the balls are moving correctly, draw 3 lines to connect them!


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","Here is a possible solution:

```python
import pygame
import random

# Initialize pygame
pygame.init()

# Set up the screen
width, height = 800, 600
screen = pygame.display.set_mode((width, height))
clock = pygame.time.Clock()

# Create a triangle
triangle_vertices = [(random.randint(0, width), random.randint(0, height)),
                     (random.randint(0, width), random.randint(0, height)),
                     (random.randint(0, width), random.randint(0, height))]

# Initialize triangle direction
triangle_deltas = [(random.choice([-1, 1]), random.choice([-1, 1])),
                   (random.choice([-1, 1]), random.choice([-1, 1])),
                   (random.choice([-1, 1]), random.choice([-1, 1]))]

# Set up game loop
running = True
while running:
    # Clear the screen
    screen.fill((0, 0, 0))
    
    # Update triangle position
    for i in range(3):
        triangle_vertices[i] = (triangle_vertices[i][0] + triangle_deltas[i][0],
                                triangle_vertices[i][1] + triangle_deltas[i][1])
        
        # Bounce triangle on walls
        if triangle_vertices[i][0] < 0 or triangle_vertices[i][0] > width:
            triangle_deltas[i] = (-triangle_deltas[i][0], triangle_deltas[i][1])
        if triangle_vertices[i][1] < 0 or triangle_vertices[i][1] > height:
            triangle_deltas[i] = (triangle_deltas[i][0], -triangle_deltas[i][1])
    
    # Draw triangle
    pygame.draw.polygon(screen, (255, 255, 255), triangle_vertices)
    
    # Update the screen
    pygame.display.flip()
    
    # Check for events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
    
    # Limit the frame rate
    clock.tick(60)

# Quit the game
pygame.quit()
```
"
403,Graphics2_bouncingball,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Using the pythonGraph animation template, create an animation of a bouncing
ball. Your ball should start at a random location, and change direction each
time it hits a side, top, or bottom of the window.  
  



**CHALLENGE:**

  1. Try to make the ball change color every time it hits a wall.




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
** Using the pythonGraph animation template, create an animation of a bouncing
ball. Your ball should start at a random location, and change direction each
time it hits a side, top, or bottom of the window.  
  



**CHALLENGE:**

  1. Try to make the ball change color every time it hits a wall.




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
from pythongraph import *

# Set up the animation window
animation = create_world(600, 400)

# Create the ball
x = random_number(10, 590)
y = random_number(10, 390)
ball = create_circle(x, y, 10, ""blue"")

# Set initial velocity
dx = random_number(-5, 5)
dy = random_number(-5, 5)

# Animation loop
while True:
    # Move the ball
    move_shape(ball, dx, dy)
    
    # Check if the ball hits a wall
    if x < 10 or x > 590:
        dx = -dx
        set_color(ball, random_color())
    if y < 10 or y > 390:
        dy = -dy
        set_color(ball, random_color())
    
    # Update the position variables
    x, y = get_position(ball)
    
    # Pause the animation
    pause(20)
"
404,FileIO_titanicsurvivor,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

This program makes use of the Titanic dataset. Here is a typical line from the
file:

`0,3,Mr. Owen Harris Braund,male,22,1,0,7.25`

  
As you will undoubtedly recall from class, each position in the line
represents a different ""data element"". Here is a key for your reference:

  | Survived  
(0=False; 1=True) | Class | Name | Gender | Age | Siblings/Spouses Aboard  
(0=False; 1=True) | Parents/Children Aboard  
(0=False; 1=True) | Fare  
---|---|---|---|---|---|---|---|---  
Value | 0 | 3 | Mr. Owen Harris Braund | male | 22 | 1 | 0 | 7.25  
  


Write a Python algorithm that asks the user for the name of the file
containing the titanic dataset. Your program will output the name of the
survivor with the lowest fare. Print that person's name in a separate file
(named ""result.txt"")

For example, if the survivor's name is Mr. Owen Harris Braund, result.txt
should contain the following:

    
    
    Mr. Owen Harris Braund  
    7.25

  
**NOTES:**

  * The values used in the above example are purely hypothetical. Your answers will be different.
  * To thoroughly test your code, we created several subsets of the titanic dataset. Use them when developing/troubleshooting your code.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

This program makes use of the Titanic dataset. Here is a typical line from the
file:

`0,3,Mr. Owen Harris Braund,male,22,1,0,7.25`

  
As you will undoubtedly recall from class, each position in the line
represents a different ""data element"". Here is a key for your reference:

  | Survived  
(0=False; 1=True) | Class | Name | Gender | Age | Siblings/Spouses Aboard  
(0=False; 1=True) | Parents/Children Aboard  
(0=False; 1=True) | Fare  
---|---|---|---|---|---|---|---|---  
Value | 0 | 3 | Mr. Owen Harris Braund | male | 22 | 1 | 0 | 7.25  
  


Write a Python algorithm that asks the user for the name of the file
containing the titanic dataset. Your program will output the name of the
survivor with the lowest fare. Print that person's name in a separate file
(named ""result.txt"")

For example, if the survivor's name is Mr. Owen Harris Braund, result.txt
should contain the following:

    
    
    Mr. Owen Harris Braund  
    7.25

  
**NOTES:**

  * The values used in the above example are purely hypothetical. Your answers will be different.
  * To thoroughly test your code, we created several subsets of the titanic dataset. Use them when developing/troubleshooting your code.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
405,FileIO_titanicfares,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

This program makes use of the Titanic dataset. Here is a typical line from the
file:

`0,3,Mr. Owen Harris Braund,male,22,1,0,7.25`

  
As you will undoubtedly recall from class, each position in the line
represents a different ""data element"". Here is a key for your reference:

  | Survived  
(0=False; 1=True) | Class | Name | Gender | Age | Siblings/Spouses Aboard  
(0=False; 1=True) | Parents/Children Aboard  
(0=False; 1=True) | Fare  
---|---|---|---|---|---|---|---|---  
Value | 0 | 3 | Mr. Owen Harris Braund | male | 22 | 1 | 0 | 7.25  
  


Write a Python algorithm that asks the user for the name of the file
containing some or all of the Titanic dataset, as well as a passenger class
(an integer between the values of 1 and 3). Your program should calculate the
highest and lowest fare for that passenger class, and print out the result to
a file called ""result.txt"".

For example, if the highest and lowest fare for 2nd class is $20 and $8,
respectively, your output file should contain:

    
    
    20  
    8

  
**NOTES:**

  * The values used in the above example are purely hypothetical. Your answers will be different.
  * Some passengers in the real dataset (like Jack in the movie Titanic--yes, I've seen it . . . don't judge me) have a fare of $0. To thoroughly test your code, we made a separate dataset (titanic2.csv) that removes these values.


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:




**PROBLEM STATEMENT:  
**

This program makes use of the Titanic dataset. Here is a typical line from the
file:

`0,3,Mr. Owen Harris Braund,male,22,1,0,7.25`

  
As you will undoubtedly recall from class, each position in the line
represents a different ""data element"". Here is a key for your reference:

  | Survived  
(0=False; 1=True) | Class | Name | Gender | Age | Siblings/Spouses Aboard  
(0=False; 1=True) | Parents/Children Aboard  
(0=False; 1=True) | Fare  
---|---|---|---|---|---|---|---|---  
Value | 0 | 3 | Mr. Owen Harris Braund | male | 22 | 1 | 0 | 7.25  
  


Write a Python algorithm that asks the user for the name of the file
containing some or all of the Titanic dataset, as well as a passenger class
(an integer between the values of 1 and 3). Your program should calculate the
highest and lowest fare for that passenger class, and print out the result to
a file called ""result.txt"".

For example, if the highest and lowest fare for 2nd class is $20 and $8,
respectively, your output file should contain:

    
    
    20  
    8

  
**NOTES:**

  * The values used in the above example are purely hypothetical. Your answers will be different.
  * Some passengers in the real dataset (like Jack in the movie Titanic--yes, I've seen it . . . don't judge me) have a fare of $0. To thoroughly test your code, we made a separate dataset (titanic2.csv) that removes these values.


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def calculate_fare(file_name, passenger_class):
    fares = []
    with open(file_name, ""r"") as file:
        for line in file:
            line = line.strip().split("","")
            if int(line[1]) == passenger_class:
                fares.append(float(line[8]))
    highest_fare = max(fares)
    lowest_fare = min(fares)
    with open(""result.txt"", ""w"") as file:
        file.write(str(highest_fare) + ""\n"")
        file.write(str(lowest_fare) + ""\n"")
"
406,FileIO_survivors_by_gender,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

This program makes use of the Titanic dataset. Here is a typical line from the
file:

`0,3,Mr. Owen Harris Braund,male,22,1,0,7.25`

  
As you will undoubtedly recall from class, each position in the line
represents a different ""data element"". Here is a key for your reference:

  | Survived  
(0=False; 1=True) | Class | Name | Gender | Age | Siblings/Spouses Aboard  
(0=False; 1=True) | Parents/Children Aboard  
(0=False; 1=True) | Fare  
---|---|---|---|---|---|---|---|---  
Value | 0 | 3 | Mr. Owen Harris Braund | male | 22 | 1 | 0 | 7.25  
  
  
  
Write a Python algorithm that asks the user for the name of the file
containing the titanic dataset, and counts how many males/females survived.
Your program should print out each answer to a file called ""result.txt"".

For example, if 400 men, and 700 women survived, your output file should
contain:  
400  
700



**NOTE: When you print to a file, make sure you put a new line at the end of
each answer!**


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

This program makes use of the Titanic dataset. Here is a typical line from the
file:

`0,3,Mr. Owen Harris Braund,male,22,1,0,7.25`

  
As you will undoubtedly recall from class, each position in the line
represents a different ""data element"". Here is a key for your reference:

  | Survived  
(0=False; 1=True) | Class | Name | Gender | Age | Siblings/Spouses Aboard  
(0=False; 1=True) | Parents/Children Aboard  
(0=False; 1=True) | Fare  
---|---|---|---|---|---|---|---|---  
Value | 0 | 3 | Mr. Owen Harris Braund | male | 22 | 1 | 0 | 7.25  
  
  
  
Write a Python algorithm that asks the user for the name of the file
containing the titanic dataset, and counts how many males/females survived.
Your program should print out each answer to a file called ""result.txt"".

For example, if 400 men, and 700 women survived, your output file should
contain:  
400  
700



**NOTE: When you print to a file, make sure you put a new line at the end of
each answer!**


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def count_survived_males_females(file_name):
    males = 0
    females = 0
    
    with open(file_name, 'r') as file:
        for line in file:
            data = line.strip().split(',')
            gender = data[3]
            survived = int(data[0])
            
            if gender == 'male' and survived == 1:
                males += 1
            elif gender == 'female' and survived == 1:
                females += 1
    
    with open('result.txt', 'w') as result_file:
        result_file.write(str(males) + '\n')
        result_file.write(str(females) + '\n')
"
407,FileIO_runways,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

This program makes use of the Runways dataset. Here is a typical line from the
file:



`17245.8*A ND17/35, RICKETYBACK FIELD, 2600, 100, TURF`



  
Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | Location ID | Name | Runway Length (in feet) | Runway Width (in feet) |
Runway Type  
---|---|---|---|---|---  
Value | 17245.8*A ND17/35 | RICKETYBACK FIELD | 2600 | 100 | TURF  
  
  
  
Write a Python program that asks the user for the name of the file containing
the Runways dataset, as well as the length and width of the runway. Your
program should print the Location ID of every runway whose length and width
meets or exceeds the specified values.

For example, if the user types 4000 and 100 for length and width,
respectively, your program should output:

    
    
    17265. _A ND03/21  
     17265._A ND13/31  
    17302. _A ND13/31  
     17304._A ND14/32  
    17367. _A ND13/31  
     17417.5_A ND11/29  
    17418. _A ND08/26  
     17418._A ND13/31  
    17328. _A ND09/27  
     17328._A ND18/36  
    17347. _A ND08/26  
     17349.1_A ND08/26  
    17349.1 _A ND17R/3  
     17496.1_A ND11/29




You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

This program makes use of the Runways dataset. Here is a typical line from the
file:



`17245.8*A ND17/35, RICKETYBACK FIELD, 2600, 100, TURF`



  
Each position in the line represents a different ""data element"". Here is a key
for your reference:

  | Location ID | Name | Runway Length (in feet) | Runway Width (in feet) |
Runway Type  
---|---|---|---|---|---  
Value | 17245.8*A ND17/35 | RICKETYBACK FIELD | 2600 | 100 | TURF  
  
  
  
Write a Python program that asks the user for the name of the file containing
the Runways dataset, as well as the length and width of the runway. Your
program should print the Location ID of every runway whose length and width
meets or exceeds the specified values.

For example, if the user types 4000 and 100 for length and width,
respectively, your program should output:

    
    
    17265. _A ND03/21  
     17265._A ND13/31  
    17302. _A ND13/31  
     17304._A ND14/32  
    17367. _A ND13/31  
     17417.5_A ND11/29  
    17418. _A ND08/26  
     17418._A ND13/31  
    17328. _A ND09/27  
     17328._A ND18/36  
    17347. _A ND08/26  
     17349.1_A ND08/26  
    17349.1 _A ND17R/3  
     17496.1_A ND11/29




 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
filename = input(""Enter the name of the file: "")
length = int(input(""Enter the minimum runway length: ""))
width = int(input(""Enter the minimum runway width: ""))

with open(filename) as file:
    for line in file:
        line = line.strip()
        elements = line.split("", "")
        location_id = elements[0]
        runway_length = int(elements[2])
        runway_width = int(elements[3])
        if runway_length >= length and runway_width >= width:
            print(location_id)
"
408,FileIO_echo,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write a program that asks the user to type the name of a file (e.g.,
""file.txt""), and a letter. Your program should then open the file, and print
out all of the lines where the first character starts with the letter

For example, if the user types the following filename:

    
    
    input1.txt
    a
    

and the contents of input1.txt are:

    
    
    aspiration
    classified
    federation
    

the output should be:

    
    
    aspiration
    



Notes:

  * Each line ends with the '\n' character. Use `split()` to get each line.
  * Refer to the String Functions slide to see how you can get the first character from a string


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:


**PROBLEM STATEMENT:  
**

Write a program that asks the user to type the name of a file (e.g.,
""file.txt""), and a letter. Your program should then open the file, and print
out all of the lines where the first character starts with the letter

For example, if the user types the following filename:

    
    
    input1.txt
    a
    

and the contents of input1.txt are:

    
    
    aspiration
    classified
    federation
    

the output should be:

    
    
    aspiration
    



Notes:

  * Each line ends with the '\n' character. Use `split()` to get each line.
  * Refer to the String Functions slide to see how you can get the first character from a string


 
Please build your solution based on the following skeleton code: :
nan
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
def print_lines_with_letter(filename, letter):
    file = open(filename, 'r')
    lines = file.readlines()
    file.close()
    
    for line in lines:
        if line[0] == letter:
            print(line.strip())
"
409,a3_3_chars3,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_characters`. Write a
program that prints out each of the items in this list (one item per line).  



**EXAMPLE:  
** If, for example, the list was:  [""ab"", ""cd"", ""ef""]

Your program should print:

    
    
    ab  
    cd  
    ef



**NOTE:**

  * You must use a loop to complete this task.  


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_characters`. Write a
program that prints out each of the items in this list (one item per line).  



**EXAMPLE:  
** If, for example, the list was:  [""ab"", ""cd"", ""ef""]

Your program should print:

    
    
    ab  
    cd  
    ef



**NOTE:**

  * You must use a loop to complete this task.  


 
Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_characters = [""sp"",""jm"",""bt"",""cv"",""ti"",""nn"",""ig"",""au"",""hi"",""vc"",""om"",""pf"",""tk"",""ve"",""xd"",""sj"",""bg"",""pk"",""rk"",""vy"",""uz"",""uv"",""jp"",""wg"",""zi"",""eg"",""ov"",""zt"",""sb"",""ki"",""ua"",""ft"",""hq"",""ik"",""xq"",""hz"",""dh"",""gx"",""gg"",""jg"",""dm"",""pb"",""oq"",""tm"",""mx"",""nh"",""kv"",""qk"",""ml"",""li"",""di"",""iy"",""sr"",""ps"",""rz"",""jl"",""mr"",""na"",""ax"",""qb"",""xt"",""fe"",""ay"",""iv"",""kn"",""ky"",""uh"",""dq"",""ib"",""jz"",""vb"",""fq"",""je"",""cy"",""wy"",""xo"",""ex"",""tg"",""jw"",""ii"",""cd"",""do"",""nw"",""zh"",""el"",""tu"",""it"",""kb"",""wp"",""js"",""ei"",""fz"",""ea"",""ie"",""ts"",""md"",""px"",""sq"",""nm"",""gi""]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
for char in list_of_characters:
    print(char)
"
410,a3_3_chars2,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_characters`. Write a
program that prints out each of the items in this list (one item per line).  



**EXAMPLE:  
** If, for example, the list was:  [""ab"", ""cd"", ""ef""]

Your program should print:

    
    
    ab  
    cd  
    ef



**NOTE:**

  * You must use a loop to complete this task.  


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_characters`. Write a
program that prints out each of the items in this list (one item per line).  



**EXAMPLE:  
** If, for example, the list was:  [""ab"", ""cd"", ""ef""]

Your program should print:

    
    
    ab  
    cd  
    ef



**NOTE:**

  * You must use a loop to complete this task.  


 
Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_characters = [""ao"",""rh"",""vs"",""rf"",""et"",""sm"",""eg"",""wf"",""pp"",""mr"",""iq"",""ti"",""pn"",""pm"",""lx"",""ie"",""qh"",""ls"",""gy"",""zv"",""op"",""tc"",""lt"",""vb"",""wh"",""xk"",""qx"",""ud"",""rv"",""oa"",""dr"",""gk"",""qk"",""er"",""mw"",""ea"",""dg"",""by"",""xa"",""gn"",""br"",""ve"",""pr"",""oy"",""xw"",""wy"",""xi"",""bs"",""ae"",""lz"",""nb"",""iy"",""sz"",""yf"",""gs"",""jc"",""zy"",""xv"",""nn"",""vm"",""xt"",""up"",""rn"",""it"",""yc"",""wn"",""hp"",""zp"",""ey"",""fy"",""ld"",""gd"",""is"",""yk"",""fi"",""vi"",""qq"",""yo"",""tj"",""en"",""zm"",""rc"",""os"",""qz"",""yu"",""mv"",""ke"",""my"",""qe"",""az"",""un"",""ox"",""vy"",""ou"",""ia"",""yh"",""ne"",""wd"",""bb"",""dt""]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.",
411,a3_3_chars1,"You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_characters`. Write a
program that prints out each of the items in this list (one item per line).  



**EXAMPLE:  
** If, for example, the list was:  [""ab"", ""cd"", ""ef""]

Your program should print:

    
    
    ab  
    cd  
    ef



**NOTE:**

  * You must use a loop to complete this task.  


You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming. You are a helpful Teaching Assistant in a CS1 programming course teaching the basics of python programming.  
Problem description:
**PROBLEM STATEMENT:  
** You have been provided with a list called `list_of_characters`. Write a
program that prints out each of the items in this list (one item per line).  



**EXAMPLE:  
** If, for example, the list was:  [""ab"", ""cd"", ""ef""]

Your program should print:

    
    
    ab  
    cd  
    ef



**NOTE:**

  * You must use a loop to complete this task.  


 
Please build your solution based on the following skeleton code: :
# AUTOGRADER IMPORT REMOVED

# --------------------------------------------------------------
# Assessment #3, Problem 3
# --------------------------------------------------------------

# This list is being provided to you.  DO NOT TOUCH!
list_of_characters = [""mz"",""nz"",""oe"",""pq"",""zy"",""uu"",""ir"",""gy"",""tl"",""pd"",""lb"",""ks"",""uf"",""vj"",""as"",""kh"",""pr"",""am"",""cd"",""lh"",""ci"",""sg"",""zt"",""wn"",""np"",""vt"",""me"",""gs"",""qs"",""we"",""xt"",""rc"",""kw"",""xw"",""yk"",""in"",""eq"",""kt"",""fr"",""wi"",""ku"",""aj"",""or"",""oz"",""po"",""vo"",""go"",""xo"",""xx"",""ca"",""xj"",""cj"",""wj"",""xp"",""jd"",""fo"",""xq"",""nj"",""bq"",""lr"",""dw"",""my"",""hj"",""ve"",""cq"",""do"",""jq"",""ld"",""kl"",""eu"",""gw"",""jy"",""vd"",""au"",""wq"",""nt"",""gd"",""vx"",""xz"",""ao"",""tu"",""xb"",""yd"",""ki"",""kj"",""ns"",""da"",""pv"",""rq"",""vf"",""xi"",""lo"",""ue"",""aa"",""ct"",""xr"",""xn"",""mr"",""iv"",""mu""]

#Your code goes here.
The answer should be code only, please do not provide explanations. Please put the answer within the fenced code block. The skeleton code should be included in your answer.","
# Your code goes here.
for item in list_of_characters:
    print(item)
"
